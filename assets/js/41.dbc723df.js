(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{357:function(e,t,s){"use strict";s.r(t);var a=s(1),_=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"join语句的正确使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#join语句的正确使用"}},[e._v("#")]),e._v(" Join语句的正确使用")]),e._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),t("p",[e._v("最近对于Mysql使用少之又少，今天刚好看了一点关于Mysql的视频，记录下经常使用的Join语句，了解Join语句的优点。")]),e._v(" "),t("p",[e._v("正确使用SQL语言的重要性")]),e._v(" "),t("ul",[t("li",[e._v("增加数据库处理效率，较少应用响应时间。")]),e._v(" "),t("li",[e._v("减少数据库服务器负载，增加服务器稳定性。")]),e._v(" "),t("li",[e._v("减少服务器间通讯的网络流量。")])]),e._v(" "),t("p",[e._v("先上下面例子中讲解要用到的数据表：")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("西天取经四人组表 "),t("code",[e._v("user1")]),e._v("：")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("id")]),e._v(" "),t("th",[e._v("user_name")]),e._v(" "),t("th",[e._v("title")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("1")]),e._v(" "),t("td",[e._v("唐僧")]),e._v(" "),t("td",[e._v("旖檀功德佛")])]),e._v(" "),t("tr",[t("td",[e._v("2")]),e._v(" "),t("td",[e._v("猪八戒")]),e._v(" "),t("td",[e._v("净坛使者")])]),e._v(" "),t("tr",[t("td",[e._v("3")]),e._v(" "),t("td",[e._v("孙悟空")]),e._v(" "),t("td",[e._v("斗战胜佛")])]),e._v(" "),t("tr",[t("td",[e._v("4")]),e._v(" "),t("td",[e._v("沙僧")]),e._v(" "),t("td",[e._v("金身罗汉")])])])])]),e._v(" "),t("li",[t("p",[e._v("悟空的结拜兄弟表 "),t("code",[e._v("user2")]),e._v("：")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("id")]),e._v(" "),t("th",[e._v("user_name")]),e._v(" "),t("th",[e._v("title")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("1")]),e._v(" "),t("td",[e._v("孙悟空")]),e._v(" "),t("td",[e._v("成佛")])]),e._v(" "),t("tr",[t("td",[e._v("2")]),e._v(" "),t("td",[e._v("牛魔王")]),e._v(" "),t("td",[e._v("被降服")])]),e._v(" "),t("tr",[t("td",[e._v("3")]),e._v(" "),t("td",[e._v("蛟魔王")]),e._v(" "),t("td",[e._v("被降服")])]),e._v(" "),t("tr",[t("td",[e._v("4")]),e._v(" "),t("td",[e._v("鹏魔王")]),e._v(" "),t("td",[e._v("被降服")])]),e._v(" "),t("tr",[t("td",[e._v("5")]),e._v(" "),t("td",[e._v("狮驼王")]),e._v(" "),t("td",[e._v("被降服")])])])])]),e._v(" "),t("li",[t("p",[e._v("按日期记录了"),t("code",[e._v("user1")]),e._v("四人组中每个人打怪的数量"),t("code",[e._v("user_kills")]),e._v("：")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Id")]),e._v(" "),t("th",[e._v("user_id")]),e._v(" "),t("th",[e._v("timestr")]),e._v(" "),t("th",[e._v("kills")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("1")]),e._v(" "),t("td",[e._v("2")]),e._v(" "),t("td",[e._v("2018-06-05")]),e._v(" "),t("td",[e._v("10")])]),e._v(" "),t("tr",[t("td",[e._v("2")]),e._v(" "),t("td",[e._v("2")]),e._v(" "),t("td",[e._v("2018-06-06")]),e._v(" "),t("td",[e._v("2")])]),e._v(" "),t("tr",[t("td",[e._v("3")]),e._v(" "),t("td",[e._v("2")]),e._v(" "),t("td",[e._v("2018-07-05")]),e._v(" "),t("td",[e._v("12")])]),e._v(" "),t("tr",[t("td",[e._v("4")]),e._v(" "),t("td",[e._v("4")]),e._v(" "),t("td",[e._v("2018-02-05")]),e._v(" "),t("td",[e._v("3")])]),e._v(" "),t("tr",[t("td",[e._v("5")]),e._v(" "),t("td",[e._v("2")]),e._v(" "),t("td",[e._v("2018-07-15")]),e._v(" "),t("td",[e._v("6")])]),e._v(" "),t("tr",[t("td",[e._v("6")]),e._v(" "),t("td",[e._v("2")]),e._v(" "),t("td",[e._v("2018-06-13")]),e._v(" "),t("td",[e._v("2")])]),e._v(" "),t("tr",[t("td",[e._v("7")]),e._v(" "),t("td",[e._v("3")]),e._v(" "),t("td",[e._v("2018-04-28")]),e._v(" "),t("td",[e._v("12")])]),e._v(" "),t("tr",[t("td",[e._v("8")]),e._v(" "),t("td",[e._v("2")]),e._v(" "),t("td",[e._v("2018-09-04")]),e._v(" "),t("td",[e._v("10")])]),e._v(" "),t("tr",[t("td",[e._v("9")]),e._v(" "),t("td",[e._v("2")]),e._v(" "),t("td",[e._v("2018-03-05")]),e._v(" "),t("td",[e._v("18")])])])])])]),e._v(" "),t("p",[e._v("之后通过这三张表，来帮助我们理解Join从句的使用方式。")]),e._v(" "),t("h2",{attrs:{id:"如何正确的使用join从句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何正确的使用join从句"}},[e._v("#")]),e._v(" 如何正确的使用Join从句")]),e._v(" "),t("p",[e._v("Join从句的类型：")]),e._v(" "),t("ul",[t("li",[e._v("内连接（INNER）")]),e._v(" "),t("li",[e._v("全外连接（FULL OUTER）")]),e._v(" "),t("li",[e._v("左外连接（LEFT OUTER）")]),e._v(" "),t("li",[e._v("右外连接（RIGHT OUTER）")]),e._v(" "),t("li",[e._v("交叉连接（CROSS）")])]),e._v(" "),t("h3",{attrs:{id:"inner-join"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#inner-join"}},[e._v("#")]),e._v(" INNER JOIN")]),e._v(" "),t("p",[e._v("​\t内连接"),t("code",[e._v("INNER JOIN")]),e._v("基于连接谓词将两种表（如A和B）的列组合在一起，产生新的表结果。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ccbeango/blogImages/Mysql/join%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A801.png",alt:""}})]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT <select_list> FROM TableA A INNER JOIN TableB B ON A.Key = B.KEY;\n")])])]),t("p",[e._v("例子：")]),e._v(" "),t("p",[e._v("取出取经四人组"),t("code",[e._v("user1")]),e._v("和悟空朋友们"),t("code",[e._v("user2")]),e._v("这两张表中同时存在于两张表中的用户记录。")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT a.user_name,a.title,b.title FROM user1 a INNER JOIN user2 b on a.user_name = b.user_name;\n+-----------+--------------+--------+\n| user_name | title        | title  |\n+-----------+--------------+--------+\n| 孙悟空     | 斗战胜佛      | 成佛    |\n+-----------+--------------+--------+\n1 row in set (0.00 sec)\n")])])]),t("h3",{attrs:{id:"left-join"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#left-join"}},[e._v("#")]),e._v(" LEFT JOIN")]),e._v(" "),t("p",[e._v("以A表为基础，包含A表中所有的数据与B表中谓词连接词相等的数据。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ccbeango/blogImages/Mysql/join%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A802.png",alt:""}})]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT <select_list> FROM TableA A LEFT JOIN TABLEB B ON A.Key = B.Key;\n")])])]),t("p",[e._v("以A表为基础，查询只存在A表中的数据。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ccbeango/blogImages/Mysql/join%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A803.png",alt:""}})]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT <select_list> FROM TableA A LEFT JOIN TableB B ON A.Key = B.Key WHERE B.Key IS NULL;\n")])])]),t("p",[e._v("在使用"),t("code",[e._v("not in")]),e._v("时，不可以使用索引优化，使用"),t("code",[e._v("left join")]),e._v("这种方法可以用来优化"),t("code",[e._v("not in")]),e._v("查询。")]),e._v(" "),t("p",[e._v("例子：")]),e._v(" "),t("p",[e._v("查询取经四人组中哪些人不是悟空的结拜兄弟？")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT a.user_name, a.title, b.title FROM user1 a LEFT JOIN user2 b ON a.user_name = b.user_name WHERE b.user_name is NULL;\n+-----------+-----------------+-------+\n| user_name | title           | title |\n+-----------+-----------------+-------+\n| 唐僧      | 旖檀功德佛        | NULL  |\n| 猪八戒    | 净坛使者          | NULL  |\n| 沙僧      | 金身罗汉          | NULL  |\n+-----------+-----------------+-------+\n3 rows in set (0.00 sec)\n")])])]),t("h3",{attrs:{id:"right-join"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#right-join"}},[e._v("#")]),e._v(" RIGHT JOIN")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ccbeango/blogImages/Mysql/join%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A804.png",alt:""}})]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT <select_list> FROM TableA A RIGHT JOIN TableB B ON A.Key = B.key\n")])])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ccbeango/blogImages/Mysql/join%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A805.png",alt:""}})]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT <select_list> FROM TableA A RIGHT JOIN TableB B ON A.Key = B.Key WHERE A.Key IS NULL;\n")])])]),t("p",[e._v("例子：")]),e._v(" "),t("p",[e._v("悟空的结拜兄弟中哪些人没有去取经？")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT b.user_name,b.title,a.title FROM user1 A RIGHT JOIN user2 b ON a.user_name=b.user_name WHERE a.user_name is NULL;\n+-----------+-----------+-------+\n| user_name | title     | title |\n+-----------+-----------+-------+\n| 牛魔王     | 被降服     | NULL  |\n| 蛟魔王     | 被降服     | NULL  |\n| 鹏魔王     | 被降服     | NULL  |\n| 狮驼王     | 被降服     | NULL  |\n+-----------+-----------+-------+\n4 rows in set (0.00 sec)\n")])])]),t("h3",{attrs:{id:"full-join"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#full-join"}},[e._v("#")]),e._v(" FULL JOIN")]),e._v(" "),t("p",[e._v("查询A、B表所有的数据都显示出来，如果连接谓词中无法对应它们，则以"),t("code",[e._v("NULL")]),e._v("来填充。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ccbeango/blogImages/Mysql/join%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A806.png",alt:""}})]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT <select_list> FROM TableA A FULL OUTER JOIN TableB B ON A.Key = B.Key;\n")])])]),t("p",[e._v("查询只存在于A或B表中的数据，即过滤A、B表的公共部分。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ccbeango/blogImages/Mysql/join%E8%AF%AD%E5%8F%A5%E7%9A%84%E6%AD%A3%E7%A1%AE%E4%BD%BF%E7%94%A807.png",alt:""}})]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT <select_list> FROM TableA A FULL OUTER JOIN TableB B ON A.Key = B.Key WHERE A.Key IS NULL OR B.Key IS NULL;\n")])])]),t("p",[t("strong",[e._v("问题")]),e._v("：")]),e._v(" "),t("p",[e._v("在mysql中执行"),t("code",[e._v("FULL JOIN")]),e._v("会报错"),t("code",[e._v("1064")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT a.user_name,a.title,b.title FROM user1 a FULL JOIN user2 b ON a.user_name=b.user_name;\nERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FULL JOIN user2 b ON a.user_name=b.user_name' at line 1\n")])])]),t("p",[e._v("这是因为"),t("code",[e._v("MySQL")]),e._v("中不支持"),t("code",[e._v("FULL JOIN")]),e._v("的连接。如果想要在"),t("code",[e._v("MySQL")]),e._v("中使用"),t("code",[e._v("FULL JOIN")]),e._v("，可以通过使用 "),t("code",[e._v("UNION ALL")]),e._v("来解决。")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT a.user_name,a.title,b.title FROM user1 a LEFT JOIN user2 b ON a.user_name=b.user_name UNION ALL SELECT b.user_name,b.title,a.title FROM user1 a RIGHT JOIN user2 b ON b.user_name=a.user_name;\n+-----------+-----------------+--------------+\n| user_name | title           | title        |\n+-----------+-----------------+--------------+\n| 孙悟空    | 斗战胜佛        | 成佛         |\n| 唐僧      | 旖檀功德佛      | NULL         |\n| 猪八戒    | 净坛使者        | NULL         |\n| 沙僧      | 金身罗汉        | NULL         |\n| 孙悟空    | 成佛            | 斗战胜佛     |\n| 牛魔王    | 被降服          | NULL         |\n| 蛟魔王    | 被降服          | NULL         |\n| 鹏魔王    | 被降服          | NULL         |\n| 狮驼王    | 被降服          | NULL         |\n+-----------+-----------------+--------------+\n9 rows in set (0.01 sec)\n")])])]),t("blockquote",[t("p",[e._v("UNION 操作符用于合并两个或多个 SELECT 语句的结果集。")]),e._v(" "),t("p",[e._v("请注意，UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每条 SELECT 语句中的列的顺序必须相同。")]),e._v(" "),t("h3",{attrs:{id:"sql-union-语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql-union-语法"}},[e._v("#")]),e._v(" SQL UNION 语法")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT column_name(s) FROM table_name1\nUNION\nSELECT column_name(s) FROM table_name2\n")])])]),t("p",[e._v("注释：默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。")]),e._v(" "),t("h3",{attrs:{id:"sql-union-all-语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql-union-all-语法"}},[e._v("#")]),e._v(" SQL UNION ALL 语法")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT column_name(s) FROM table_name1\nUNION ALL\nSELECT column_name(s) FROM table_name2\n")])])]),t("p",[e._v("另外，UNION 结果集中的列名总是等于 UNION 中第一个 SELECT 语句中的列名。")])]),e._v(" "),t("h3",{attrs:{id:"cross-join"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cross-join"}},[e._v("#")]),e._v(" CROSS JOIN")]),e._v(" "),t("p",[e._v("交叉连接，又称笛卡尔连接（cartesian join）或叉乘（Product）,如果"),t("code",[e._v("A")]),e._v("和"),t("code",[e._v("B")]),e._v("是两个集合，它们的交叉连接就记为："),t("code",[e._v("A×B")]),e._v("。")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT a.user_name,a.title,a.user_name,b.title FROM user1 a CROSS JOIN user2 b;\n+-----------+-----------------+-----------+-----------+\n| user_name | title           | user_name | title     |\n+-----------+-----------------+-----------+-----------+\n| 唐僧      | 旖檀功德佛      | 唐僧      | 成佛      |\n| 猪八戒    | 净坛使者        | 猪八戒    | 成佛      |\n| 孙悟空    | 斗战胜佛        | 孙悟空    | 成佛      |\n| 沙僧      | 金身罗汉        | 沙僧      | 成佛      |\n| 唐僧      | 旖檀功德佛      | 唐僧      | 被降服    |\n| 猪八戒    | 净坛使者        | 猪八戒    | 被降服    |\n| 孙悟空    | 斗战胜佛        | 孙悟空    | 被降服    |\n| 沙僧      | 金身罗汉        | 沙僧      | 被降服    |\n| 唐僧      | 旖檀功德佛      | 唐僧      | 被降服    |\n| 猪八戒    | 净坛使者        | 猪八戒    | 被降服    |\n| 孙悟空    | 斗战胜佛        | 孙悟空    | 被降服    |\n| 沙僧      | 金身罗汉        | 沙僧      | 被降服    |\n| 唐僧      | 旖檀功德佛      | 唐僧      | 被降服    |\n| 猪八戒    | 净坛使者        | 猪八戒    | 被降服    |\n| 孙悟空    | 斗战胜佛        | 孙悟空    | 被降服    |\n| 沙僧      | 金身罗汉        | 沙僧      | 被降服    |\n| 唐僧      | 旖檀功德佛      | 唐僧      | 被降服    |\n| 猪八戒    | 净坛使者        | 猪八戒    | 被降服    |\n| 孙悟空    | 斗战胜佛        | 孙悟空    | 被降服    |\n| 沙僧      | 金身罗汉        | 沙僧      | 被降服    |\n+-----------+-----------------+-----------+-----------+\n20 rows in set (0.00 sec)\n")])])]),t("h2",{attrs:{id:"join使用技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#join使用技巧"}},[e._v("#")]),e._v(" Join使用技巧")]),e._v(" "),t("h3",{attrs:{id:"使用join更新表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用join更新表"}},[e._v("#")]),e._v(" 使用Join更新表")]),e._v(" "),t("p",[e._v("如何更新使用过滤条件中包含自身的表？")]),e._v(" "),t("p",[e._v("情景：")]),e._v(" "),t("p",[e._v("​\t把同时存在于取经四人组和悟空兄弟表中的记录的人在取经四人组表中的"),t("code",[e._v("title")]),e._v("字段更新为“齐天大圣”。")]),e._v(" "),t("p",[e._v("最容易想到的是：")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("UPDATE user1 SET title='齐天大圣' WHERE user1.user_name IN (SELECT b.user_name FROM user1 a INNER JOIN user2 b ON a.user_name=b.user_name);\nERROR 1093 (HY000): You can't specify target table 'user1' for update in FROM clause\n")])])]),t("p",[e._v("会报错不能更新"),t("code",[e._v("FROM")]),e._v("从句中出现的表，"),t("code",[e._v("MySQL")]),e._v("不支持这种更新。如果放在"),t("code",[e._v("Oracle")]),e._v("或"),t("code",[e._v("SQLServer")]),e._v("中，是完全可以执行的。")]),e._v(" "),t("p",[t("strong",[e._v("联合更新")]),e._v("，在"),t("code",[e._v("MySQL")]),e._v("中这种方式更新可以使用"),t("code",[e._v("JOIN")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("UPDATE user1 a JOIN (SELECT b.user_name FROM user1 a INNER JOIN user2 b ON a.user_name=b.user_name) b ON a.user_name=b.user_name SET a.title='齐天大圣';\n")])])]),t("p",[e._v("利用"),t("code",[e._v("join")]),e._v("进行更新，其实就是将"),t("code",[e._v("user1")]),e._v("与"),t("code",[e._v("user2")]),e._v("表中查询出的结果进行联合，然后进行更新。")]),e._v(" "),t("p",[e._v("在实际工作中如果遇到需要更新自身表的情况，即==更新出现在"),t("code",[e._v("FROM")]),e._v("从句中的表的话==(???)，就可使用此方法。")]),e._v(" "),t("h3",{attrs:{id:"使用join优化子查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用join优化子查询"}},[e._v("#")]),e._v(" 使用JOIN优化子查询")]),e._v(" "),t("p",[e._v("查询存在于"),t("strong",[e._v("取经四人组")]),e._v("和"),t("strong",[e._v("悟空的结拜兄弟")]),e._v("的数据：")]),e._v(" "),t("ol",[t("li",[e._v("利用子查询：")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT a.user_name,a.title,(SELECT b.title FROM user2 b WHERE a.user_name=b.user_name) AS title2 FROM user1 a;\n+-----------+-----------------+--------+\n| user_name | title           | title2 |\n+-----------+-----------------+--------+\n| 唐僧       | 旖檀功德佛       | NULL   |\n| 猪八戒     | 净坛使者         | NULL   |\n| 孙悟空     | 斗战胜佛         | 成佛    |\n| 沙僧       | 金身罗汉         | NULL   |\n+-----------+-----------------+--------+\n4 rows in set (0.00 sec)\n")])])]),t("p",[e._v("​\t\t如果两张表中的数据非常多，那么"),t("code",[e._v("user1")]),e._v("表中的每一条数据都要进行一次子查询，那么这种查询方式是非常低效的。")]),e._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[e._v("使用联合查询：")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT a.user_name,a.title,b.title AS title2 FROM user1 a LEFT JOIN user2 b ON a.user_name=b.user_name;\n+-----------+-----------------+--------+\n| user_name | title           | title2 |\n+-----------+-----------------+--------+\n| 唐僧       | 旖檀功德佛       | NULL   |\n| 猪八戒     | 净坛使者         | NULL   |\n| 孙悟空     | 斗战胜佛         | 成佛    |\n| 沙僧       | 金身罗汉         | NULL   |\n+-----------+-----------------+--------+\n4 rows in set (0.00 sec)\n")])])]),t("h3",{attrs:{id:"使用join优化聚合子查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用join优化聚合子查询"}},[e._v("#")]),e._v(" 使用JOIN优化聚合子查询")]),e._v(" "),t("p",[e._v("如何查询出四人组中打怪最多的日期？")]),e._v(" "),t("ol",[t("li",[e._v("聚合子查询")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT a.user_name,b.timestr,b.kills FROM user1 a INNER JOIN user_kills b ON a.id=b.user_id WHERE b.kills=(SELECT MAX(kills) FROM user_kills c WHERE c.user_id=b.user_id); \n+-----------+------------+-------+\n| user_name | timestr    | kills |\n+-----------+------------+-------+\n| 猪八戒     | 2018-03-05 |    18 |\n| 孙悟空     | 2018-04-28 |    12 |\n| 沙僧       | 2018-02-05 |     3 |\n+-----------+------------+-------+\n3 rows in set (0.01 sec)\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("JOIN优化查询")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT a.user_name,b.timestr,b.kills FROM user1 a JOIN user_kills b ON a.id=b.user_id JOIN user_kills c ON c.user_id=b.user_id GROUP BY a.user_name,b.timestr,b.kills HAVING b.kills=MAX(c.kills);\n+-----------+------------+-------+\n| user_name | timestr    | kills |\n+-----------+------------+-------+\n| 孙悟空    | 2018-04-28 |    12 |\n| 沙僧      | 2018-02-05 |     3 |\n| 猪八戒    | 2018-03-05 |    18 |\n+-----------+------------+-------+\n3 rows in set (0.00 sec)\n")])])]),t("p",[e._v("​\t这个例子中"),t("code",[e._v("user_kills")]),e._v("这张表关联了两次，目的是第一次是为了查询出最终的结果集==时间==和==杀怪数量==，第二次是为了跟"),t("code",[e._v("HAVING")]),e._v("从句中使用来得出最大的杀怪数量是多少。")]),e._v(" "),t("h3",{attrs:{id:"实现分组选择"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现分组选择"}},[e._v("#")]),e._v(" 实现分组选择")])])}),[],!1,null,null,null);t.default=_.exports}}]);