(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{356:function(_,v,a){"use strict";a.r(v);var t=a(1),e=Object(t.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"join-left-join-all-join-等的区别和联系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#join-left-join-all-join-等的区别和联系"}},[_._v("#")]),_._v(" JOIN ，LEFT JOIN ，ALL JOIN 等的区别和联系")]),_._v(" "),v("p",[v("code",[_._v("left join")]),_._v(" (左联接) 返回包括左表中的所有记录和右表中联结字段相等的记录")]),_._v(" "),v("p",[v("code",[_._v("right join")]),_._v("(右联接) 返回包括右表中的所有记录和左表中联结字段相等的记录")]),_._v(" "),v("p",[v("code",[_._v("inner join")]),_._v(" (等值连接) 只返回两个表中联结字段相等的行")]),_._v(" "),v("p",[_._v("举例如下：")]),_._v(" "),v("p",[_._v("--------------------------------------------")]),_._v(" "),v("p",[_._v("表A记录如下：")]),_._v(" "),v("p",[_._v("aID　　　　　aNum")]),_._v(" "),v("p",[_._v("1　　　　　a20050111")]),_._v(" "),v("p",[_._v("2　　　　　a20050112")]),_._v(" "),v("p",[_._v("3　　　　　a20050113")]),_._v(" "),v("p",[_._v("4　　　　　a20050114")]),_._v(" "),v("p",[_._v("5　　　　　a20050115")]),_._v(" "),v("p",[_._v("表B记录如下:")]),_._v(" "),v("p",[_._v("bID　　　　　bName")]),_._v(" "),v("p",[_._v("1　　　　　2006032401")]),_._v(" "),v("p",[_._v("2　　　　　2006032402")]),_._v(" "),v("p",[_._v("3　　　　　2006032403")]),_._v(" "),v("p",[_._v("4　　　　　2006032404")]),_._v(" "),v("p",[_._v("8　　　　　2006032408")]),_._v(" "),v("p",[_._v("--------------------------------------------")]),_._v(" "),v("h3",{attrs:{id:"_1-left-join"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-left-join"}},[_._v("#")]),_._v(" 1.left join")]),_._v(" "),v("p",[_._v("sql语句如下:")]),_._v(" "),v("div",{staticClass:"language-mysql extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v("select * from A left join B on A.aID = B.bID\n")])])]),v("p",[_._v("结果如下:")]),_._v(" "),v("p",[_._v("aID　　　　　aNum　　　　　bID　　　　　bName")]),_._v(" "),v("p",[_._v("1　　　　　a20050111　　　　1　　　　　2006032401")]),_._v(" "),v("p",[_._v("2　　　　　a20050112　　　　2　　　　　2006032402")]),_._v(" "),v("p",[_._v("3　　　　　a20050113　　　　3　　　　　2006032403")]),_._v(" "),v("p",[_._v("4　　　　　a20050114　　　　4　　　　　2006032404")]),_._v(" "),v("p",[_._v("5　　　　　a20050115　　　　NULL　　　　　NULL")]),_._v(" "),v("p",[_._v("（所影响的行数为 5 行）")]),_._v(" "),v("p",[v("strong",[_._v("结果说明:")])]),_._v(" "),v("p",[_._v("left join是以A表的记录为基础的,A可以看成左表,B可以看成右表,left join是以左表为准的.")]),_._v(" "),v("p",[_._v("换句话说,左表(A)的记录将会全部表示出来,而右表(B)只会显示符合搜索条件的记录(例子中为: A.aID = B.bID).")]),_._v(" "),v("p",[_._v("B表记录不足的地方均为NULL.")]),_._v(" "),v("p",[_._v("--------------------------------------------")]),_._v(" "),v("h3",{attrs:{id:"_2-right-join"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-right-join"}},[_._v("#")]),_._v(" 2.right join")]),_._v(" "),v("p",[_._v("sql语句如下:")]),_._v(" "),v("div",{staticClass:"language-mysql extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v("select * from A right join B on A.aID = B.bID\n")])])]),v("p",[_._v("结果如下:")]),_._v(" "),v("p",[_._v("aID　　　　　aNum　　　　　bID　　　　　bName")]),_._v(" "),v("p",[_._v("1　　　　　a20050111　　　　1　　　　　2006032401")]),_._v(" "),v("p",[_._v("2　　　　　a20050112　　　　2　　　　　2006032402")]),_._v(" "),v("p",[_._v("3　　　　　a20050113　　　　3　　　　　2006032403")]),_._v(" "),v("p",[_._v("4　　　　　a20050114　　　　4　　　　　2006032404")]),_._v(" "),v("p",[_._v("NULL　　　　　NULL　　　　　8　　　　　2006032408")]),_._v(" "),v("p",[_._v("（所影响的行数为 5 行）")]),_._v(" "),v("p",[_._v("结果说明:")]),_._v(" "),v("p",[_._v("仔细观察一下,就会发现,和left join的结果刚好相反,这次是以右表(B)为基础的,A表不足的地方用NULL填充.")]),_._v(" "),v("p",[_._v("--------------------------------------------")]),_._v(" "),v("h3",{attrs:{id:"_3-inner-join"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-inner-join"}},[_._v("#")]),_._v(" 3.inner join")]),_._v(" "),v("p",[_._v("sql语句如下:")]),_._v(" "),v("div",{staticClass:"language-mysql extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v("select * from A innerjoin B on A.aID = B.bID\n")])])]),v("p",[_._v("结果如下:")]),_._v(" "),v("p",[_._v("aID　　　　　aNum　　　　　bID　　　　　bName")]),_._v(" "),v("p",[_._v("1　　　　　a20050111　　　　1　　　　　2006032401")]),_._v(" "),v("p",[_._v("2　　　　　a20050112　　　　2　　　　　2006032402")]),_._v(" "),v("p",[_._v("3　　　　　a20050113　　　　3　　　　　2006032403")]),_._v(" "),v("p",[_._v("4　　　　　a20050114　　　　4　　　　　2006032404")]),_._v(" "),v("p",[_._v("结果说明:")]),_._v(" "),v("p",[_._v("很明显,这里只显示出了 A.aID = B.bID的记录.这说明inner join并不以谁为基础,它只显示符合条件的记录.")]),_._v(" "),v("p",[_._v("--------------------------------------------")]),_._v(" "),v("p",[_._v("###注:")]),_._v(" "),v("p",[_._v("LEFT JOIN操作用于在任何的 FROM 子句中，组合来源表的记录。使用 LEFT JOIN 运算来创建一个左边外部联接。左边外部联接将包含了从第一个（左边）开始的两个表中的全部记录，即使在第二个（右边）表中并没有相符值的记录。")]),_._v(" "),v("p",[_._v("语法：FROM table1 LEFT JOIN table2 ON table1.field1 compopr table2.field2")]),_._v(" "),v("p",[_._v("说明：table1, table2参数用于指定要将记录组合的表的名称。")]),_._v(" "),v("p",[_._v("field1, field2参数指定被联接的字段的名称。且这些字段必须有相同的数据类型及包含相同类型的数据，但它们不需要有相同的名称。")]),_._v(" "),v("p",[_._v('compopr参数指定关系比较运算符："="， "<"， ">"， "<="， ">=" 或 "<>"。')]),_._v(" "),v("p",[_._v("如果在INNER JOIN操作中要联接包含Memo 数据类型或 OLE Object 数据类型数据的字段，将会发生错误.")])])}),[],!1,null,null,null);v.default=e.exports}}]);