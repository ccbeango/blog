(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{328:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"javascript高级程序设计阅读总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript高级程序设计阅读总结"}},[t._v("#")]),t._v(" JavaScript高级程序设计阅读总结")]),t._v(" "),s("h2",{attrs:{id:"第一、二章-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一、二章-简介"}},[t._v("#")]),t._v(" 第一、二章 简介")]),t._v(" "),s("h3",{attrs:{id:"javascript和ecmascript的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript和ecmascript的区别"}},[t._v("#")]),t._v(" JavaScript和EcmaScript的区别？")]),t._v(" "),s("p",[t._v("Ecma是欧洲计算机制造商协会的缩写，该协会标准化了当时两个版本的JS：在Netscape Navigator 中的JavaScript和IE中的JScript。即打造了ECMA-262，也就是EcmaScript。")]),t._v(" "),s("p",[t._v("JavaScript和ECMAScript 基本上是同义词，但JavaScript是EcmaScript的父集。")]),t._v(" "),s("p",[t._v("完整的JavaScript 实现包含3个部分：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("核心 EcmaScript")])]),t._v(" "),s("li",[s("p",[t._v("文档对象模型 DOM")])]),t._v(" "),s("li",[s("p",[t._v("浏览器对象模型 BOM")])])]),t._v(" "),s("p",[t._v("浏览器实现了EcmaScript的宿主环境，然后根据需要扩展了DOM和BOM。NodeJS也只是EcmaScript的一个宿主环境。")]),t._v(" "),s("p",[t._v("ECMAScript 只是对实现这个规范描述的所有方面的一门语言的称呼。JavaScript 实现了ECMAScript，而NodeJS同样也实现了ECMAScript。")]),t._v(" "),s("h3",{attrs:{id:"script-标签有哪些属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#script-标签有哪些属性"}},[t._v("#")]),t._v(" <script>标签有哪些属性")]),t._v(" "),s("p",[t._v("script是网景公司创造，之后加入了HTML标准中。")]),t._v(" "),s("p",[t._v("script标签共有8个属性：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("async")]),t._v(" 可选。表示应该立即开始下载脚本，但不能阻止其他页面动作，比如下载资源或等待其他脚本加载。\n"),s("ul",[s("li",[s("strong",[t._v("只对外部脚本文件有效，即使用src引入的脚本")])])])]),t._v(" "),s("li",[s("code",[t._v("charset")]),t._v(" 可选。指定字符集，很少用，大多数浏览器不在乎此值")]),t._v(" "),s("li",[s("code",[t._v("crossorigin")]),t._v("  可选。配置相关请求的**CORS（跨源资源共享）**设置。默认不使用CORS\n"),s("ul",[s("li",[s("code",[t._v('crossorigin="anonymous"')]),t._v(" 配置文件请求不必设置凭据标志")]),t._v(" "),s("li",[s("code",[t._v('crossorigin="use-credentials"')]),t._v(" 设置凭据标志，意味着出站请求会包含凭据")])])]),t._v(" "),s("li",[s("code",[t._v("defer")]),t._v(" 可选。脚本可以延迟到文档完全被解析和显示之后执行。\n"),s("ul",[s("li",[s("strong",[t._v("只对外部脚本文件有效，即使用src引入的脚本")])])])]),t._v(" "),s("li",[s("code",[t._v("integrity")]),t._v(" 可选。允许比对接收到的资源和指定的加密签名，以验证子资源完整性。")]),t._v(" "),s("li",[s("s",[s("code",[t._v("language")])]),t._v(" 已废弃。大多浏览器会忽略")]),t._v(" "),s("li",[s("code",[t._v("src")]),t._v(" 可选。要加载的外部文件\n"),s("ul",[s("li",[t._v("外部引入的js文件扩展名不一定是"),s("code",[t._v(".js")]),t._v("。为浏览器将JS扩展语言ts、jsx转义为JS提供了可能性。")]),t._v(" "),s("li",[t._v("src执行不在同一个域名时，浏览器回向制定的域名发送一个GET请求来获取资源。")])])]),t._v(" "),s("li",[s("code",[t._v("type")]),t._v(" 可选。替代"),s("code",[t._v("language")]),t._v("。表示代码中脚本语言的类型，即MIME类型。\n"),s("ul",[s("li",[t._v("默认是"),s("code",[t._v("text/javascript")]),t._v("。")]),t._v(" "),s("li",[t._v("设置"),s("code",[t._v("module")]),t._v("，代码会被当成ES6模块，此时支持"),s("code",[t._v("export")]),t._v("、"),s("code",[t._v("import")]),t._v("关键字")])])])]),t._v(" "),s("h3",{attrs:{id:"多个script标签的加载顺序是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多个script标签的加载顺序是什么"}},[t._v("#")]),t._v(" 多个script标签的加载顺序是什么？")]),t._v(" "),s("p",[t._v("如果"),s("strong",[t._v("没有使用async或defer")]),t._v("，浏览器会按照<script>在页面中出现的顺序依次解释，第二个<script>元素的代码必须在第一个<script>元素的代码解释完毕才能开始解释，第三个则必须等第二个解释完，以此类推。")]),t._v(" "),s("h3",{attrs:{id:"script标签应该放在哪里"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#script标签应该放在哪里"}},[t._v("#")]),t._v(" script标签应该放在哪里")]),t._v(" "),s("p",[t._v("浏览器页面渲染时，会在解析到<body>的起始标签时开始渲染页面，如果大量JavaScript文件都放在<head>里，也就意味着必须把所有JavaScript 代码都下载、解析和解释完成后才开始渲染页面。")]),t._v(" "),s("p",[t._v("所以通常将JS文件放在body内容的后面。而对于页面渲染前就要依赖的Javascript，可以放在head中。")]),t._v(" "),s("p",[t._v("或者可以使用"),s("code",[t._v("defer")]),t._v("标签改变脚本的解释时机。")]),t._v(" "),s("h3",{attrs:{id:"defer和async的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#defer和async的区别"}},[t._v("#")]),t._v(" defer和async的区别")]),t._v(" "),s("p",[t._v("defer属性相当于告诉浏览器，立即下载脚本，但延迟执行。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("head"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Example "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" Page"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script defer src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example1.js"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script defer src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example2.js"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("head"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("HTML5规范要求，执行时机"),s("code",[t._v("DOMContentLoaded")]),t._v("事件之前执行，多个defer的script标签会按顺序执行。")])]),t._v(" "),s("li",[s("p",[t._v("但实际中不一定会在"),s("code",[t._v("DOMContentLoaded")]),t._v("事件之前执行，多个脚本也不一定顺序执行，因此最好只包含一个"),s("code",[t._v("defer")]),t._v("脚本。")])])]),t._v(" "),s("p",[t._v("async与defer类型，属性也相当于告诉浏览器，立即下载脚本；但不保证按次序执行。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("head"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Example "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" Page"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example1.js"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example2.js"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("head"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 这里是页面内容"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("async")]),t._v("属性的目的是告诉浏览器，不必等脚本下载和执行完之后再加载页面，同样也不必等到该"),s("code",[t._v("async")]),t._v("脚本下载和执行完之后，再加载其它脚本。因此，不应该在加载期间修改DOM，因为DOM可能还未加载完，会报错或修改无效。")]),t._v(" "),s("li",[s("code",[t._v("async")]),t._v("脚本会在"),s("code",[t._v("load")]),t._v("事件前，"),s("code",[t._v("DOMContentLoaded")]),t._v("事件之前或之后执行。")])]),t._v(" "),s("blockquote",[s("p",[t._v("window 的load 事件会在页面完全加载后触发，因为要等待很多外部资源加载完成，所以会花费较长时间。")]),t._v(" "),s("p",[t._v("而DOMContentLoaded 事件会在DOM 树构建完成后立即触发，而不用等待图片、JavaScript文件、CSS 文件或其他资源加载完成。")]),t._v(" "),s("p",[t._v("相对于load 事件，DOMContentLoaded 可以让开发者在外部资源下载的同时就能指定事件处理程序，从而让用户能够更快地与页面交互。")])]),t._v(" "),s("h3",{attrs:{id:"noscript-标签的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#noscript-标签的作用"}},[t._v("#")]),t._v(" <noscript>标签的作用")]),t._v(" "),s("p",[t._v("noscript是一个浏览器页面优雅降级的处理方案。")]),t._v(" "),s("p",[t._v("浏览器不支持JavaScript或浏览器的JavaScript支持被关闭，那么就会渲染此标签中的内容。")]),t._v(" "),s("h2",{attrs:{id:"第三章-语言基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三章-语言基础"}},[t._v("#")]),t._v(" 第三章 语言基础")]),t._v(" "),s("h3",{attrs:{id:"什么是严格模式-以及作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是严格模式-以及作用"}},[t._v("#")]),t._v(" 什么是严格模式，以及作用")]),t._v(" "),s("p",[t._v("严格模式：为"),s("code",[t._v("JavaScript")]),t._v("定义了一种不同的解析与执行模式。是ES5引入的一个概念，处理了ES3的一些不规范的写法带来的隐患问题和不确定行为。")]),t._v(" "),s("p",[t._v("严格模式主要限制：")]),t._v(" "),s("ul",[s("li",[t._v("变量必须声明后再使用")]),t._v(" "),s("li",[t._v("函数的参数不能有同名属性，否则报错")]),t._v(" "),s("li",[t._v("不能适用"),s("code",[t._v("with")]),t._v("语句")]),t._v(" "),s("li",[t._v("不能对只读属性赋值，否则报错")]),t._v(" "),s("li",[t._v("不能适用前缀0表示八进制，否则报错")]),t._v(" "),s("li",[t._v("不能删除不可删除的属性，否则报错")]),t._v(" "),s("li",[t._v("不能删除变量"),s("code",[t._v("delete prop")]),t._v("，会报错，只能删除属性"),s("code",[t._v("delete global[prop]")])]),t._v(" "),s("li",[s("code",[t._v("eval")]),t._v("不会再它的外层作用域引入变量")]),t._v(" "),s("li",[s("code",[t._v("eval")]),t._v("和"),s("code",[t._v("arguments")]),t._v("不能被重新赋值")]),t._v(" "),s("li",[s("code",[t._v("arguments")]),t._v("不会自动反映函数参数的变化")]),t._v(" "),s("li",[t._v("不能使用"),s("code",[t._v("arguments.callee")]),t._v("和"),s("code",[t._v("arguments.caller")])]),t._v(" "),s("li",[t._v("禁止"),s("code",[t._v("this")]),t._v("指向全局对象")]),t._v(" "),s("li",[t._v("不能使用"),s("code",[t._v("fn.caller")]),t._v("和"),s("code",[t._v("fn.arguments")]),t._v("获取函数调用的堆栈")]),t._v(" "),s("li",[t._v("增加了保留字，如"),s("code",[t._v("protected")]),t._v("、"),s("code",[t._v("static")]),t._v("、"),s("code",[t._v("interface")])])]),t._v(" "),s("p",[t._v("尤其注意"),s("code",[t._v("this")]),t._v("的限制，ES6模块中，顶层的"),s("code",[t._v("this")]),t._v("指向"),s("code",[t._v("undefined")]),t._v("，即不应该在顶层代码中使用"),s("code",[t._v("this")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"声明变量var、let、const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明变量var、let、const"}},[t._v("#")]),t._v(" 声明变量var、let、const")]),t._v(" "),s("p",[s("strong",[t._v("var")])]),t._v(" "),s("ul",[s("li",[t._v("初始化未赋值时，默认为undefined")]),t._v(" "),s("li",[t._v("使用var操作符定义的变量会成为函数的局部变量，即"),s("strong",[t._v("var声明的变量是函数作用域")])]),t._v(" "),s("li",[t._v("函数内定义变量但省略var时，会创建一个全局变量（能在函数外访问到）")]),t._v(" "),s("li",[t._v("关键字声明的变量会自动提升到函数作用域顶部，即"),s("strong",[t._v("提升（hoist）")])]),t._v(" "),s("li",[t._v("同一个作用域中，可反复多次声明一个变量，后声明的可覆盖之前声明的。因为存在提升，相当于多个声明做了合并。")]),t._v(" "),s("li",[t._v("在全局作用域中声明的变量会成为window对象的属性")])]),t._v(" "),s("p",[s("strong",[t._v("let")])]),t._v(" "),s("ul",[s("li",[t._v("与var声明类似，但是最主要的区别是"),s("strong",[t._v("let 声明的范围是块作用域，而var 声明的范围是函数作用域。")]),t._v(" "),s("ul",[s("li",[t._v("同一个块作用域中，不允许多次（冗余）声明一个变量；否则报错"),s("code",[t._v("SyntaxError")]),t._v("。")]),t._v(" "),s("li",[t._v("let可以嵌套使用相同标识，JavaScript引擎会记录变量声明的标识和所在的作用域。")]),t._v(" "),s("li",[t._v("var和let混合声明同一个变量也会有冗余报错。")])])]),t._v(" "),s("li",[s("strong",[t._v("let声明变量不会在作用域中提升")]),t._v("。所以在let声明变量之前使用该变量存在暂时性死区。")]),t._v(" "),s("li",[t._v("let在全局作用域中声明的变量不会成为window对象的属性。var声明的则会。")])]),t._v(" "),s("p",[s("strong",[t._v("const")])]),t._v(" "),s("ul",[s("li",[t._v("const与let行为基本一致，唯一一个重要区别是，它声明时必须初始化变量，且无法再修改。尝试修改会报错\n"),s("ul",[s("li",[t._v("const这个特性只适用于它指向的变量的引用。如果指向一个对象，修改对象里面的值，并不会报错")]),t._v(" "),s("li",[s("code",[t._v("for in")]),t._v("和"),s("code",[t._v("for of")]),t._v("中建议使用它")])])]),t._v(" "),s("li",[t._v("const变量是单一类型且不可修改的，JavaScript运行时编译器可以将所有实例替换成实际值，而不会通过查询表进行变量查找。（V8引擎就执行这种优化）")])]),t._v(" "),s("p",[t._v("它们的使用建议是，优先使用const，let次之；不使用var")]),t._v(" "),s("h3",{attrs:{id:"下面两个for循环的输出分别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下面两个for循环的输出分别是什么"}},[t._v("#")]),t._v(" 下面两个for循环的输出分别是什么？")]),t._v(" "),s("p",[t._v("考察let和var的特性")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("第一个循环输出是55555，第二个循环输出是01234。")]),t._v(" "),s("ul",[s("li",[t._v("var声明的变量是函数作用域的，存在声明变量提升，循环定义的循环体变量会渗透到循环体外部，循环结束时，就只有最后一个var i = 5。异步执行的"),s("code",[t._v("setTimeout")]),t._v("输出都会是5")]),t._v(" "),s("li",[t._v("let声明的变量是块作用域的，每次创建都会在for循环快内部，每次循环内部都会保存自己的变量"),s("code",[t._v("let i")]),t._v("值，setTimeout都会在每次循环体的作用域中获取到不同的变量实例")])]),t._v(" "),s("p",[t._v("同样适用于"),s("code",[t._v("for in")]),t._v("和"),s("code",[t._v("for of")]),t._v("循环，但建议此时使用"),s("code",[t._v("const")]),t._v("替代"),s("code",[t._v("let")])]),t._v(" "),s("h3",{attrs:{id:"js中有哪些数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js中有哪些数据类型"}},[t._v("#")]),t._v(" JS中有哪些数据类型")]),t._v(" "),s("p",[t._v("JS中有7种数据类型，其中包括"),s("strong",[t._v("6种简单数据类型（基本类型）"),s("strong",[t._v("和")]),t._v("1种复杂数据类型（引用类型）")])]),t._v(" "),s("p",[t._v("基本类型：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Undefined")]),t._v(" 声明变量未初始化时的值")]),t._v(" "),s("li",[s("code",[t._v("Null")]),t._v(" 是一个空指针对象")]),t._v(" "),s("li",[s("code",[t._v("Boolean")])]),t._v(" "),s("li",[s("code",[t._v("String")])]),t._v(" "),s("li",[s("code",[t._v("Number")])]),t._v(" "),s("li",[s("code",[t._v("Symbol")]),t._v("符号是原始值，且符号实例是唯一、不可变的。Symbol是用来创建唯一标识符，进而用作非字符串形式的对象属性，不会发生属性冲突的危险")])]),t._v(" "),s("p",[t._v("引用类型："),s("code",[t._v("Object")])]),t._v(" "),s("ul",[s("li",[t._v("它是派生其他对象的基类。")]),t._v(" "),s("li",[t._v("Object实例都有的属性和方法\n"),s("ul",[s("li",[t._v("constructor")]),t._v(" "),s("li",[s("code",[t._v("hasOwnProperty(propertyName)")])]),t._v(" "),s("li",[s("code",[t._v("isPrototypeOf(Obj)")])]),t._v(" "),s("li",[s("code",[t._v("propertyIsEnumerable(propertyName)")])]),t._v(" "),s("li",[s("code",[t._v("toLocalString()")])]),t._v(" "),s("li",[s("code",[t._v("toString()")])]),t._v(" "),s("li",[s("code",[t._v("valueOf()")])])])])]),t._v(" "),s("h3",{attrs:{id:"typeof是函数还是操作符-它的作用是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typeof是函数还是操作符-它的作用是什么"}},[t._v("#")]),t._v(" typeof是函数还是操作符，它的作用是什么")]),t._v(" "),s("p",[t._v("type是操作符，不是函数。")]),t._v(" "),s("p",[t._v("它的作用是用来确定任意变量的数据类型。")]),t._v(" "),s("p",[t._v("对一个值使用typeof 操作符会返回下列字符串之一：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v('"undefined"')]),t._v("表示值未定义；")]),t._v(" "),s("li",[s("code",[t._v('"boolean"')]),t._v("表示值为布尔值；")]),t._v(" "),s("li",[s("code",[t._v('"string"')]),t._v("表示值为字符串；")]),t._v(" "),s("li",[s("code",[t._v('"number"')]),t._v("表示值为数值；")]),t._v(" "),s("li",[s("code",[t._v('"object"')]),t._v("表示值为对象（而不是函数）或null；")]),t._v(" "),s("li",[s("code",[t._v('"function"')]),t._v("表示值为函数；")]),t._v(" "),s("li",[s("code",[t._v('"symbol"')]),t._v("表示值为符号。")])]),t._v(" "),s("p",[t._v("typeof操作符判断一个变量是否为字符串、数值、布尔值或undefined 的最好方式。null或对象，那么返回"),s("code",[t._v('"object"')]),t._v("，如果对象内部实现了"),s("code",[t._v("[[Call]]")]),t._v("方法，则返回"),s("code",[t._v('"function"')])]),t._v(" "),s("h3",{attrs:{id:"nan的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nan的特点"}},[t._v("#")]),t._v(" NaN的特点")]),t._v(" "),s("p",[t._v("NaN(Not a number)表示不是一个数字。"),s("code",[t._v("isNaN()")]),t._v("函数能确定值是否不是数值。")]),t._v(" "),s("ul",[s("li",[t._v("任何涉及NaN的操作最终都会返回NaN")]),t._v(" "),s("li",[t._v("NaN不等于包括NaN在内的任何值")])]),t._v(" "),s("h3",{attrs:{id:"字符串的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串的特点"}},[t._v("#")]),t._v(" 字符串的特点")]),t._v(" "),s("ul",[s("li",[t._v("字符串包含一些字符字面量，如换行符"),s("code",[t._v("\\n")]),t._v("、制表符"),s("code",[t._v("\\t")]),t._v("、回车"),s("code",[t._v("\\r")]),t._v("等")]),t._v(" "),s("li",[t._v("字符串的长度可以通过"),s("code",[t._v("length")]),t._v("属性获取，会返回字符串中16位字符的个数。如果有些字符是双字节，那么这个值可能不准确")]),t._v(" "),s("li",[t._v("字符串是不可变的，一旦被创建就不能被销毁。要想修改某个字符串的值，必须先销毁原字符串，然后将新的字符串重新赋值给该变量。")])]),t._v(" "),s("h3",{attrs:{id:"模板字符串的本质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板字符串的本质"}},[t._v("#")]),t._v(" 模板字符串的本质")]),t._v(" "),s("p",[t._v("模板字符串不是字符串，而是一个句法表达式；")]),t._v(" "),s("p",[t._v("在定义时会立即求值并转换为字符串实例，任何插入的变量也会从它们最近的作用域中取值。")]),t._v(" "),s("p",[t._v("任何值都可以做插入的值，插入的值都会调用toString强制转换成字符串。")]),t._v(" "),s("p",[t._v("模板字符串也可做标签函数，也就是可以调用一个函数。函数的第一个参数是原始字符串数组，后面的参数是对每个表达式求值的结果，参数个数不确定，后面参数一般使用剩余操作符"),s("code",[t._v("...params")]),t._v("接收。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tagFun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" abSum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\ntagFun"),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" + ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" = ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["", " + ", " = ", ""]')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 9")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("untaggedResult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "6 + 9 = 15"')]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("taggedResult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "foobar"')]),t._v("\n")])])]),s("p",[t._v("参数个数为n，第一个参数是数组，它的元素个数为"),s("code",[t._v("n + 1")])]),t._v(" "),s("h3",{attrs:{id:"js中位操作符的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js中位操作符的原理"}},[t._v("#")]),t._v(" JS中位操作符的原理")]),t._v(" "),s("p",[t._v("JS中所有数值都是以IEEE 754 64位格式存储，但未操作符不直接应用到64位表示，而是先把值转换成32位整数，再进行操作，之后再把值转换成64位。")]),t._v(" "),s("p",[t._v("对于开发者而言，就好像只有32位整数一样，因为64位整数存储格式是不可见的。")]),t._v(" "),s("h3",{attrs:{id:"有符号的整数在js中如何表示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有符号的整数在js中如何表示"}},[t._v("#")]),t._v(" 有符号的整数在JS中如何表示")]),t._v(" "),s("p",[t._v("有符号的整数使用32位的前31位表示整数值。第32位表示数值的符号，0表示正，1表示负。第三十二位称为符号位。")]),t._v(" "),s("p",[t._v("负数以二补数（补码）的二进制编码进行存储。")]),t._v(" "),s("p",[t._v("二补数计算如下：")]),t._v(" "),s("ol",[s("li",[t._v("首选计算它的绝对值二进制")]),t._v(" "),s("li",[t._v("然后计算一补数（反码），即每个0变成1,1变成0")]),t._v(" "),s("li",[t._v("最后计算二补数（补码），给一补数加1。")])]),t._v(" "),s("p",[t._v("把负值转二进制字符串输出时候，会得到一个前面加了减号的绝对值：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "-10010"')]),t._v("\n")])])]),s("h3",{attrs:{id:"未操作符-非、与、或、异或的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#未操作符-非、与、或、异或的作用"}},[t._v("#")]),t._v(" 未操作符 非、与、或、异或的作用")]),t._v(" "),s("ul",[s("li",[t._v("按位非"),s("code",[t._v("~")]),t._v("：返回数值的一补数（反码）。最终效果就是对数值取反并减"),s("code",[t._v("1")])]),t._v(" "),s("li",[t._v("按位与"),s("code",[t._v("&")]),t._v("：将两个数对齐，基于规则两个位都是1时返回1，任何一位是0时返回0，对每一位执行与操作。")]),t._v(" "),s("li",[t._v("按位或"),s("code",[t._v("|")]),t._v("：将两个数对齐，基于规则在至少一位是1 时返回1，两位都是0 时返回0，对每一位执行或操作")]),t._v(" "),s("li",[t._v("按位异或"),s("code",[t._v("^")]),t._v("：将两个数对齐，基于规则在只在一位上是1时返回1，两位都是1或0，则返回0")])]),t._v(" "),s("h3",{attrs:{id:"左移、右移、无符号右移"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#左移、右移、无符号右移"}},[t._v("#")]),t._v(" 左移、右移、无符号右移")]),t._v(" "),s("ul",[s("li",[t._v("左移：按照指定的位数，将数值所有位向左移动，空位用0补充，保留符号位。")]),t._v(" "),s("li",[t._v("右移：按照指定位数，将数值所有位向右移动，空位用符号位补充。")]),t._v(" "),s("li",[t._v("无符号右移：对于正数，无符号右移会与有符号右移结果相同。因为都是0补充。负数时，有符号用1补充，无符号还是用0补充，那么符号位也被填充为0，就会把它当做是正值。")])]),t._v(" "),s("h3",{attrs:{id:"逻辑与-和逻辑非-的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑与-和逻辑非-的特点"}},[t._v("#")]),t._v(" 逻辑与&&和逻辑非||的特点")]),t._v(" "),s("p",[t._v("逻辑与")]),t._v(" "),s("ul",[s("li",[t._v("如果要判断的两个操作数都是真，则返回第二个；如果有一个不是真值，则返回这个值；")]),t._v(" "),s("li",[t._v("逻辑与操作符是一种短路操作符，就是如果第一个操作数决定了结果，那么永远不会对第二个操作数求值。")])]),t._v(" "),s("p",[t._v("逻辑非")]),t._v(" "),s("ul",[s("li",[t._v("如果两个值有一个真，则就直接返回真值；")]),t._v(" "),s("li",[t._v("也是短路操作符，只不过第一个操作数为真，第二个操作数就不会再求值")])]),t._v(" "),s("p",[t._v("逻辑与和非的短路特性经常在开发中用到。")]),t._v(" "),s("h3",{attrs:{id:"with语句的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#with语句的作用"}},[t._v("#")]),t._v(" with语句的作用")]),t._v(" "),s("p",[t._v("with语句的作用是将代码作用域设置为特定对象。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" qs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" hostName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hostname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上面代码中的每一行都用到了location 对象。如果使用with 语句，就可以少写一些代码：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" qs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" search"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" hostName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hostname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" href"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这里，with 语句用于连接location 对象。")]),t._v(" "),s("ul",[s("li",[t._v("这意味着在这个语句内部，每个变量首先会被认为是一个局部变量。")]),t._v(" "),s("li",[t._v("如果没有找到该局部变量，则会搜索location 对象，看它是否有一个同名的属性。")]),t._v(" "),s("li",[t._v("如果有，则该变量会被求值为location 对象的属性。")]),t._v(" "),s("li",[t._v("Vue中编译时codegen会生成with包裹的代码块。")])]),t._v(" "),s("h2",{attrs:{id:"第四章-变量、作用域与内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四章-变量、作用域与内存"}},[t._v("#")]),t._v(" 第四章 变量、作用域与内存")]),t._v(" "),s("h3",{attrs:{id:"变量保存值有什么特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量保存值有什么特点"}},[t._v("#")]),t._v(" 变量保存值有什么特点")]),t._v(" "),s("p",[t._v("变量分为两种数据类型：原始值（primitive value）和引用值（reference value）。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("保存原始值的变量是按值访问的。")]),t._v(" "),s("ul",[s("li",[t._v("因为我们操作的就是存储在变量中的实际值。")])])]),t._v(" "),s("li",[s("p",[t._v("保存引用值的变量是按引用访问的。")]),t._v(" "),s("ul",[s("li",[t._v("因为JavaScript中不允许直接访问内存位置，因此不能直接操作对象所在的内存空间。")]),t._v(" "),s("li",[t._v("操作对象时，实际操作的是对该对象的引用而非对象本身。")])])]),t._v(" "),s("li",[s("p",[t._v("原始值复制时，会创建一个全新的变量。新的变量和旧的变量是完全独立的。")])]),t._v(" "),s("li",[s("p",[t._v("引用值复制时，实际复制的是一个指针，该指针指向同一个堆内存中的对象")])])]),t._v(" "),s("h3",{attrs:{id:"什么是执行上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是执行上下文"}},[t._v("#")]),t._v(" 什么是执行上下文")]),t._v(" "),s("p",[t._v("执行上下文就是当前 JavaScript 代码执行时所在环境的抽象概念， JavaScript 中运行任何的代码都是在执行上下文中运行。")]),t._v(" "),s("p",[t._v("变量或函数的上下文决定了它们能够访问哪些数据，以及它们的行为。")]),t._v(" "),s("p",[t._v("每个上下文中都会关联一个"),s("strong",[t._v("变量对象")]),t._v("，而上下文中定义的变量和函数都会保存在这个变量对象中。")]),t._v(" "),s("p",[t._v("虽然无法通过代码访问到这个变量对象，但是后台处理数据会用到它。")]),t._v(" "),s("p",[t._v("执行上下文主要有三种，"),s("strong",[t._v("全局上下文")]),t._v("，（就是我们常用的浏览器中的window对象、Node中的global对象）、"),s("strong",[t._v("函数上下文")]),t._v("以及"),s("strong",[t._v("块级上下文")]),t._v("。还有一种"),s("strong",[t._v("变量上下文")])]),t._v(" "),s("p",[t._v("上下文在其所有代码执行完毕的时候会被销毁，关联的变量对象也会被销毁，即销毁上下文中定义的变量和函数。")]),t._v(" "),s("p",[t._v("当执行到函数时，会为这个函数创建它的上下文，函数上下文会推入到一个上下文栈中，函数执行完毕后，上下文栈会弹出该函数，将控制权返回给之前的上下文。")]),t._v(" "),s("p",[t._v("上下文代码执行时，同时会创建变量对象的作用域链。这个"),s("strong",[t._v("作用域链决定了各级上下文的代码在访问变量和函数时的顺序。")])]),t._v(" "),s("p",[t._v("代码正在执行的上下文的变量对象始终位于作用域链的最前端（因为与上下文栈关联），"),s("strong",[t._v("处于活动状态的执行上下文只有一个")]),t._v("。")]),t._v(" "),s("p",[t._v("如果上下文是函数的，那么它的**活动对象（activation object）**就会用作变量对象。活动对象最初只有一个定义变量"),s("code",[t._v("arguments")]),t._v("。")]),t._v(" "),s("p",[t._v("作用域链中的倒数第二个变量对象，就是上下文栈中从顶到底第二个上下文对应的变量对象，第三个就是上下文栈中第三个上下文对象的变量对象，以此类推，直至全局上下文。（全局上下文的变量对象始终是作用域链中最后一个变量对象。）")]),t._v(" "),s("p",[t._v("代码在执行时，标识符的解析就是通过作用域链逐级搜索标识符名完成的。搜索过程就是从作用域链最前端开始，然后逐级往后，直至找到标识符。（如果最终没找到，通常会报错）")]),t._v(" "),s("p",[t._v("如果局部上下文中有一个同名的标识符，那就不能在该上下文中引用父上下文中的同名标识符。"),s("strong",[t._v("遮蔽特性")])]),t._v(" "),s("p",[t._v("内部上下文可以通过作用域链访问到外部的一切，而外部上下文无法访问到内部的上下文中的任何东西。")]),t._v(" "),s("p",[t._v("代码辅助理解：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeColor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" anotherColor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("swapColor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tempColor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" anotherColor\n    anotherColor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" color\n    color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tempColor\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里可以访问color、anotherColor 和tempColor")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里可以访问color 和anotherColor，但访问不到tempColor")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("swapColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里只能访问color")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("上面的代码会形成自己的上下文栈，包括全局上下文window，局部上下文changeColor和swapColor；每个上下文分别对应变量对象会形成作用域链。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ccbeango/blogImages@master/JavaScript/%E7%BA%A2%E7%9A%AE%E4%B9%A6-%E5%85%A8%E5%B1%80%E4%B8%8A%E4%B8%8B%E6%96%87%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F.drawio.svg",alt:"红皮书-全局上下文和作用域"}})]),t._v(" "),s("p",[t._v("注：图中方便理解，并不是实际的结构。作用域链其实是一个包含指针的列表。")]),t._v(" "),s("p",[s("strong",[t._v("总结执行上下文")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("执行上下文分全局上下文、函数上下文、块级上下文和变量上下文（个人编写代码中不使用，内部垃圾回收会使用）。")]),t._v(" "),s("li",[t._v("代码执行流每进入一个新上下文，都会创建一个作用域链，用于搜索变量和函数。")]),t._v(" "),s("li",[t._v("函数或块的局部上下文不仅可以访问自己作用域内的变量，而且也可以访问任何包含上下文乃\n至全局上下文中的变量。")]),t._v(" "),s("li",[t._v("全局上下文只能访问全局上下文中的变量和函数，不能直接访问局部上下文中的任何数据。")]),t._v(" "),s("li",[t._v("变量的执行上下文用于确定什么时候释放内存。")])]),t._v(" "),s("h3",{attrs:{id:"执行上下文与作用域的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文与作用域的区别"}},[t._v("#")]),t._v(" 执行上下文与作用域的区别")]),t._v(" "),s("p",[t._v("执行上下文就是当前 "),s("strong",[t._v("JavaScript 代码执行期间")]),t._v("所在环境的抽象概念， JavaScript 中运行任何的代码都是在执行上下文中运行。")]),t._v(" "),s("p",[t._v("作用域是在"),s("strong",[t._v("JavaScript代码编译成机器码执行之前")]),t._v("。也就是说作用域在变量和函数定义时已经确定了。 编译器需要依赖的一个作用对象，用于查找当前环境所定义得变量和函数等，最终输出整体词法树(ast)。")]),t._v(" "),s("p",[t._v("作用域可以理解成只是一个地盘，地盘中有该作用域中的变量和函数标识符，最大的用处就是"),s("strong",[t._v("隔离变量")]),t._v("，不同作用域下的同名变量不会冲突。")]),t._v(" "),s("p",[t._v("那么我们可以看出，作用域中没有具体的变量数据，"),s("strong",[t._v("变量的数据是通过作用域对应的执行上下文环境中的变量对象来实现的")]),t._v("。")]),t._v(" "),s("p",[t._v("同一个作用域下，对同一个函数的不同的调用会产生不同的执行上下文环境，继而产生不同的变量的值，"),s("strong",[t._v("所以，作用域中变量的值是在执行过程中确定的，而作用域是在函数创建时就确定的。")])]),t._v(" "),s("p",[s("strong",[t._v("如果要查找一个作用域下某个变量的值，就需要找到这个作用域对应的执行上下文，再在上下文对应的变量对象中找到变量的值。")])]),t._v(" "),s("h3",{attrs:{id:"什么是闭包函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是闭包函数"}},[t._v("#")]),t._v(" 什么是闭包函数")]),t._v(" "),s("p",[t._v("闭包指的是"),s("strong",[t._v("那些引用了另一个函数作用域中变量的函数")]),t._v("，通常在嵌套函数中实现。")]),t._v(" "),s("p",[t._v("闭包函数使用的是作用域链。这就不得不提到执行上下文和作用域。")]),t._v(" "),s("p",[t._v("执行上下文通常有三种，一种是全局上下文（浏览器中的window对象，Node中的global对象）；另一种是函数上下文（局部上下文）；最后一种是块级上下文（局部上下文）；还有一种是变量上下文。")]),t._v(" "),s("p",[t._v("全局上下文在代码执行期间始终存在，函数上下文只在函数执行期间存在。")]),t._v(" "),s("p",[t._v("（当一个被调用执行时，会为这个函数创建它的上下文，函数上下文会推入到一个上下文栈中；函数执行完毕后，上下文栈会弹出该函数，并判断是否销毁这个上下文的活动对象，需要则销毁，然后将控制权返回给之前的上下文。）")]),t._v(" "),s("p",[t._v("每个上下文中都会关联自己的变量对象，上下文在执行时创建的变量和函数都会保存在这个变量对象中。")]),t._v(" "),s("p",[t._v("当一个函数被创建时，会创建这个函数的预作用域链，保存在函数内部的"),s("code",[t._v("[[Scope]]")]),t._v("中。")]),t._v(" "),s("p",[t._v("当函数执行时，创建这个函数的上下文和上下文关联的变量对象（函数中称为活动对象），这个变量对象会用"),s("code",[t._v("arguments")]),t._v("和其他命名参数来初始化。并复制"),s("code",[t._v("[[Scope]]")]),t._v("中的预作用域链来创建这个函数的作用域链。函数上下文的变量对象在作用域链的最前端，外部包裹函数的变量对象是内部函数作用域链中的第二个对象，再外部的是第三个，这个作用域链一直串起所有包含函数的活动对象，直至全局上下文的活动对象为止。")]),t._v(" "),s("p",[t._v("函数内部在访问变量时，就会使用给定的名称从作用域链中逐级查找变量。函数执行完毕后，函数上下文会弹出上下文栈并被销毁，并销毁上下文关联的变量对象。")]),t._v(" "),s("p",[t._v("如果是一个闭包函数，外部的包裹函数的上下文会被销毁，但是因为内部函数的作用域链中有引用外部函数的变量对象，所以外部函数的变量对象并不会被销毁。")]),t._v(" "),s("p",[t._v("那么内部函数就可以访问到外部函数作用域中的变量，实现了闭包。")]),t._v(" "),s("p",[t._v("代码和图理解：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 创建对象的对比函数\n * @param {*} key 要对比的键名 \n * @returns \n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createCompareFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" value1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" value2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" value2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" value2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" compare "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createCompareFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'grade'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compare")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("grade")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("122")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("grade")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("108")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("compare()函数被创建时，会创建自己的预作用域链保存在"),s("code",[t._v("[[Scope]]")]),t._v("中。"),s("code",[t._v("compare()")]),t._v("在执行时，会创建它自己的上下文以及上下文关联的变量对象。然后会赋值"),s("code",[t._v("[[Scope]]")]),t._v("来创建作用域链，接着将它自己的变量对象推入到作用域链的最前端。如下图所示")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ccbeango/blogImages@master/JavaScript/%E7%BA%A2%E7%9A%AE%E4%B9%A6-%E9%97%AD%E5%8C%85.drawio.svg",alt:"红皮书-闭包"}})]),t._v(" "),s("p",[t._v("图中可看到")]),t._v(" "),s("ul",[s("li",[t._v("函数在执行时，会将函数的上下文推入到上下文栈中。")]),t._v(" "),s("li",[t._v("函数的上下文都有自己的作用域链，作用域链其实是一个指针列表，每个指针就是一个作用域指向对应的变量对象，但物理上并不包含相应的对象。")]),t._v(" "),s("li",[t._v("每个上下文都有自己的变量对象，上下文可以关联到自己的变量对象。也可以通过作用域链访问到上一级的变量对象中定义的数据")])]),t._v(" "),s("h3",{attrs:{id:"javascript的垃圾回收机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript的垃圾回收机制"}},[t._v("#")]),t._v(" JavaScript的垃圾回收机制")]),t._v(" "),s("p",[t._v("JS通过自动内存管理实现内存分配和闲置资源回收。")]),t._v(" "),s("p",[t._v("基本思路是：确定哪个变量不再使用，然后释放它的内存。这个过程是周期性的，垃圾回收程序每隔一段时间，或者说在代码执行中某个预定的收集事件，就会自动运行。")]),t._v(" "),s("p",[t._v("如何确定哪个变量不再使用，即标记未使用的变量，有两种方法：")]),t._v(" "),s("ul",[s("li",[t._v("标记清理\n"),s("ul",[s("li",[t._v("垃圾运行程序运行时，会标记内存中存储的所有变量。然后，它会将上下文中所有的变量和被在上下文中变量引用的变量的标记去掉。")]),t._v(" "),s("li",[t._v("在此之后，再被加上标记的变量就是待删除的了，因为任何在上下文中的变量都访问不到它们了。")]),t._v(" "),s("li",[t._v("随后垃圾回收程序会做一次"),s("strong",[t._v("内存清理")]),t._v("，销毁带标记的所有值并回收它们的内存。")]),t._v(" "),s("li",[t._v("（到了2008 年，IE、Firefox、Opera、Chrome 和Safari 都在自己的JavaScript 实现中采用标记清理（或\n其变体），只是在运行垃圾回收的频率上有所差异。）")])])]),t._v(" "),s("li",[t._v("引用计数\n"),s("ul",[s("li",[t._v("对每个值都记录它被引用的次数。")]),t._v(" "),s("li",[t._v("如果声明一个变量并给它赋值一个引用值，那么这个值引用数为1。如果同一个值再被赋值给另一个变量，那么这个值的引用数加1。同样，如果变量不再引用这个值，那么引用书减1。")]),t._v(" "),s("li",[t._v("当一个值的引用数为0时，垃圾回收程序下次运行就会释放引用数为0的值的内存。")]),t._v(" "),s("li",[t._v("但是存在一个问题，就是"),s("strong",[t._v("循环引用")]),t._v("，比如A对象中有个指针引用B，B对象中有个指针同时又引用A。那么A和B的引用数永远不会为0，那么内存就不会释放。如果大量存在这种情况，会导致大量内存无法释放，内存泄露。")])])])]),t._v(" "),s("p",[t._v("优化内存使用方法：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("解除引用")]),t._v("：把不需要使用的变量或对象属性设置为"),s("code",[t._v("null")])]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("const")]),t._v("和"),s("code",[t._v("let")]),t._v("：都是块作用域，相比于var的函数作用域，可以尽早让垃圾回收程序介入回收。")]),t._v(" "),s("li",[t._v("合理使用隐藏类：两个类实例共享同一个构造函数和原型。避免先创建再补充，并在构造函数中一次声明所有属性。"),s("code",[t._v("delete")]),t._v("会导致生成相同的隐藏类。")]),t._v(" "),s("li",[t._v("合理规范代码，避免内存泄露。\n"),s("ul",[s("li",[t._v("不在未声明变量时就赋值，未就赋值会创建全局"),s("code",[t._v("var变量")])]),t._v(" "),s("li",[t._v("合理使用闭包")])])])]),t._v(" "),s("h2",{attrs:{id:"第五章-基本引用类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第五章-基本引用类型"}},[t._v("#")]),t._v(" 第五章 基本引用类型")]),t._v(" "),s("h3",{attrs:{id:"什么是基本引用类型-js提供的基本引用类型有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是基本引用类型-js提供的基本引用类型有哪些"}},[t._v("#")]),t._v(" 什么是基本引用类型，JS提供的基本引用类型有哪些？")]),t._v(" "),s("p",[t._v("引用类型有时候也被称为"),s("strong",[t._v("对象定义")]),t._v("，对象被视为是某个引用类型（对象定义）的"),s("strong",[t._v("实例")]),t._v("。")]),t._v(" "),s("p",[t._v("通过"),s("code",[t._v("new")]),t._v("操作符跟上"),s("strong",[t._v("构造函数")]),t._v("来创建。")]),t._v(" "),s("p",[t._v("JS提供的基本引用类型有：")]),t._v(" "),s("ul",[s("li",[t._v("Date")]),t._v(" "),s("li",[t._v("RegExp")]),t._v(" "),s("li",[t._v("原始包装类型：Boolean、Number、String")]),t._v(" "),s("li",[t._v("单例内置对象：Global、Math")])]),t._v(" "),s("h3",{attrs:{id:"date的一些特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#date的一些特性"}},[t._v("#")]),t._v(" Date的一些特性")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("Date.parse()")]),t._v("会接受一个表示日期的字符串，并解析日期为毫秒数。不是日期则返回"),s("code",[t._v("NaN")])])]),t._v(" "),s("li",[s("p",[t._v("Date构造函数接受日期字符串，Date内部调用的是"),s("code",[t._v("Date.parse()")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" someDate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'February 14, 2022'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" someDate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'February 14, 2022'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Date.now()")]),t._v(" 返回执行时日期的毫秒数")])]),t._v(" "),s("li",[s("p",[t._v("Date对象继承了Object，并重写了"),s("code",[t._v("toLocalString()")]),t._v("、"),s("code",[t._v("toString()")]),t._v("、"),s("code",[t._v("valueOf()")]),t._v("方法。如``")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("toLocalString()")]),t._v(" 返回本地环境一致的日期和事件字符串，"),s("code",[t._v("'2022/2/14 下午1:31:00'")])]),t._v(" "),s("li",[s("code",[t._v("toString()")]),t._v(" 返回带时区信息的日期和时间，而时间也是以24 小时制（0~23）表示，"),s("code",[t._v("'Mon Feb 14 2022 13:31:00 GMT+0800 (中国标准时间)'")])]),t._v(" "),s("li",[s("code",[t._v("valueOf()")]),t._v(" 返回日期毫秒数 "),s("code",[t._v("1644816660000")])])])])]),t._v(" "),s("h3",{attrs:{id:"javascript如何处理调用原始值的方法或属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript如何处理调用原始值的方法或属性"}},[t._v("#")]),t._v(" JavaScript如何处理调用原始值的方法或属性？")]),t._v(" "),s("p",[t._v("当时候原始值的属性或方法时，后台都会创建一个相应的原始包装类型对象，从而暴露出操作原始值的各种方法。")]),t._v(" "),s("p",[t._v("如有一个字符串"),s("code",[t._v("let s = hello")]),t._v("，当调用"),s("code",[t._v("s.slice()")]),t._v("方法时，后台都会执行以下三步：")]),t._v(" "),s("ol",[s("li",[t._v("创建字符串的String类型实例")]),t._v(" "),s("li",[t._v("调用实例上的特定方法")]),t._v(" "),s("li",[t._v("销毁实例")])]),t._v(" "),s("p",[t._v("后台执行可想象成")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hello\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 想象成")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n")])])]),s("p",[t._v("Number和Boolean原始包装类型同String。")]),t._v(" "),s("h3",{attrs:{id:"原始包装类型的作用是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原始包装类型的作用是什么"}},[t._v("#")]),t._v(" 原始包装类型的作用是什么")]),t._v(" "),s("p",[t._v("可以让JavaScript 中的原始值可以拥有类似对象的行为。")]),t._v(" "),s("p",[t._v("有3 种原始值包装类型：Boolean、Number 和String。")]),t._v(" "),s("p",[t._v("它们都具有如下特点。")]),t._v(" "),s("ul",[s("li",[t._v("每种包装类型都映射到同名的原始类型")]),t._v(" "),s("li",[t._v("在以读模式访问原始值时，后台会实例化一个原始值包装对象，通过这个对象可以操作数据")]),t._v(" "),s("li",[t._v("涉及原始值的语句只要一执行完毕，包装对象就会立即销毁")])]),t._v(" "),s("h3",{attrs:{id:"引用类型和原始包装类型的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用类型和原始包装类型的区别"}},[t._v("#")]),t._v(" 引用类型和原始包装类型的区别")]),t._v(" "),s("p",[t._v("主要区别在于对象的生命周期不同")]),t._v(" "),s("ul",[s("li",[t._v("引用类型创建的对象实例，会在离开它的作用域时被销毁。")]),t._v(" "),s("li",[t._v("原始包装类型创建的对象实例，只存在于它的那行代码的访问期间。\n"),s("ul",[s("li",[t._v("这也就是为什么不能给原始值添加属性和方法，因为添加上属性或方法后，下一行就已经销毁了。")])])])]),t._v(" "),s("p",[t._v("可以显示地new加上"),s("code",[t._v("Number")]),t._v("、"),s("code",[t._v("Boolean")]),t._v("、"),s("code",[t._v("String")]),t._v("构造函数来创建原始值，但一般没必要。")]),t._v(" "),s("p",[t._v("通过"),s("code",[t._v("new Object()")]),t._v("可以创建原始值和引用类型。Object内部会通过传入值的不同来返回相应的类型实例。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Sring实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Number实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" bool "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Boolean实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Obj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ccbean'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引用类型实例")]),t._v("\n")])])]),s("h3",{attrs:{id:"原始包装类型和转型函数的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原始包装类型和转型函数的区别"}},[t._v("#")]),t._v(" 原始包装类型和转型函数的区别")]),t._v(" "),s("p",[t._v("通过new调用原始包装类型的构造函数创建的是对象，typeof操作符会返回"),s("code",[t._v('"object"')])]),t._v(" "),s("p",[t._v("转型函数创建的是对应的制定值，typeof返回对应制定类型。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"25"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原始包装类型的构造函数")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转型函数")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "number"')]),t._v("\n")])])]),s("h3",{attrs:{id:"原始包装类型的一些总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原始包装类型的一些总结"}},[t._v("#")]),t._v(" 原始包装类型的一些总结")]),t._v(" "),s("h4",{attrs:{id:"boolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[t._v("#")]),t._v(" Boolean")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("重写了Object的"),s("code",[t._v("valueof()")]),t._v("方法，返回"),s("code",[t._v("true")]),t._v("或"),s("code",[t._v("false")])])]),t._v(" "),s("li",[s("p",[t._v("重写了"),s("code",[t._v("toString()")]),t._v("，返回"),s("code",[t._v('"true"')]),t._v("或"),s("code",[t._v('"false"')])])]),t._v(" "),s("li",[s("p",[t._v("原始包装类型创建的是一个Boolean对象，同其他原始包装类型一样，"),s("code",[t._v("typeof")]),t._v("返回的是"),s("code",[t._v('"object"')]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("原始值和引用值（Boolean 对象）的几个区别")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("typeof 操作符对原始值"),s("code",[t._v('"boolean"')]),t._v("，但对引用值返回"),s("code",[t._v('"object"')]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("Boolean对象是Boolean类型的实例，在使instaceof 操作符时返回true，但对原始值则返回false。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" falseObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" falseValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// boolean")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("falseObject "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("falseValue "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("p",[t._v("理解原始布尔值和Boolean对象之间的区别非常重要，"),s("strong",[t._v("强烈建议永远不要使用后者")]),t._v("。")])])])])])])]),t._v(" "),s("h4",{attrs:{id:"number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[t._v("#")]),t._v(" Number")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("重写了"),s("code",[t._v("valueOf")]),t._v("，返回Number数值的原始数值；重写了"),s("code",[t._v("toString（）")]),t._v("，返回数字字符串，支持接受一个参数作为进制。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("toFixed()")]),t._v("返回制定小数位的数值。不足则补0；超过则四舍五入。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Number.isInterger()")]),t._v("判断一个数是否能保存为整数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.00")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.01")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])])])]),t._v(" "),s("h4",{attrs:{id:"string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("length")]),t._v("属性表示字符串中字符的数量。即使字符串中包含双字节字符（而不是单字节的ASII字符），也会按照单字符来计算。")]),t._v(" "),s("li",[t._v("JavaScript的字符串由16位码元（code unit）组成。\n"),s("ul",[s("li",[t._v("字符串中的"),s("code",[t._v("length")]),t._v("表示字符串中包含多少个16位码元。")]),t._v(" "),s("li",[t._v("16位码元只能表示65535（0xFFFF）个字符，为了表示更多字符，Unicode采用一个策略，每个字符使用另外16位去选择一个"),s("strong",[t._v("增补平面")]),t._v("。每个字符使用两个16码元的策略称为"),s("strong",[t._v("代理对")]),t._v("策略。")])])]),t._v(" "),s("li",[t._v("某些Unicode字符可以有多种编码方式。字符看起来一样，但底层编码不同，为解决这个问题，Unicode提供了4种规范形式，可以将字符规范化为一致的格式："),s("code",[t._v("NFD")]),t._v("、"),s("code",[t._v("NFC")]),t._v("、"),s("code",[t._v("NFKD")]),t._v("、"),s("code",[t._v("NFKC")]),t._v("。\n"),s("ul",[s("li",[s("code",[t._v("normalize()")]),t._v("方法接受这四个值作为参数，规范化字符串。或可以判断字符串是哪种规范格式。")])])]),t._v(" "),s("li",[t._v("字符串的一些方法\n"),s("ul",[s("li",[t._v("码元方法 "),s("code",[t._v("charAt()")]),t._v(" "),s("code",[t._v("charCodeAt()")]),t._v(" "),s("code",[t._v("fromCharCode()")]),t._v(" "),s("code",[t._v("codePointAt()")]),t._v(" "),s("code",[t._v("fromCodePoint()")])]),t._v(" "),s("li",[t._v("字符串操作方法 "),s("code",[t._v("concat()")]),t._v(" "),s("code",[t._v("slice()")]),t._v(" "),s("code",[t._v("substr()")]),t._v(" "),s("code",[t._v("substring()")])]),t._v(" "),s("li",[t._v("字符串位置方法 "),s("code",[t._v("indexOf()")]),t._v(" "),s("code",[t._v("lastIndexOf()")])]),t._v(" "),s("li",[t._v("字符串包含方法 "),s("code",[t._v("startsWith()")]),t._v(" "),s("code",[t._v("endsWith()")]),t._v(" "),s("code",[t._v("includes()")])]),t._v(" "),s("li",[t._v("迭代器方法"),s("code",[t._v("[Symbol.iterator]()")])]),t._v(" "),s("li",[t._v("大小写转化 "),s("code",[t._v("toLowerCase()")]),t._v(" "),s("code",[t._v("toUpperCase()")]),t._v(" "),s("code",[t._v("toLocaleLowerCase()")]),t._v(" "),s("code",[t._v("toLocaleUpperCase()")])]),t._v(" "),s("li",[t._v("字符串（正则）模式匹配方法 "),s("code",[t._v("match()")]),t._v(" "),s("code",[t._v("search()")]),t._v(" "),s("code",[t._v("replace()")]),t._v(" "),s("code",[t._v("split()")])]),t._v(" "),s("li",[t._v("其他方法 "),s("code",[t._v("trim()")]),t._v(" "),s("code",[t._v("repeat()")]),t._v(" "),s("code",[t._v("padStart()")]),t._v(" "),s("code",[t._v("padEnd()")])])])])]),t._v(" "),s("h3",{attrs:{id:"单例内置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单例内置对象"}},[t._v("#")]),t._v(" 单例内置对象")]),t._v(" "),s("h4",{attrs:{id:"global"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#global"}},[t._v("#")]),t._v(" Global")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("它是一个兜底对象，针对的是不属于任何对象的属性和方法。")])]),t._v(" "),s("li",[s("p",[t._v("事实上，不存在全局变量和全局函数。在全局上下文中声明的变量和函数都会编程Global对象的属性。")])]),t._v(" "),s("li",[s("p",[t._v("Global也和其他变量对象一样，无法直接在代码中访问到，但是后台在解析时都会用到它。")])]),t._v(" "),s("li",[s("p",[t._v("Global对象内部有很多方法，如"),s("code",[t._v("isNaN()")]),t._v("、"),s("code",[t._v("isFinite()")]),t._v("、"),s("code",[t._v("parseInt()")]),t._v("、"),s("code",[t._v("parseFloat()")]),t._v("方法，我们在开发中可以直接使用，那么后台就会到Global上解析这些方法。")])]),t._v(" "),s("li",[s("p",[t._v("Global对象内部有很多属性，包括一些特殊值如，"),s("code",[t._v("undefined")]),t._v("、"),s("code",[t._v("NaN")]),t._v("、"),s("code",[t._v("Infinity")]),t._v("；此外，所有原生引用类型的构造函数也都是它的属性，如"),s("code",[t._v("Function")]),t._v("、"),s("code",[t._v("Object")]),t._v("、"),s("code",[t._v("Array")]),t._v("、"),s("code",[t._v("Symbol")]),t._v("、"),s("code",[t._v("Error")]),t._v("等")])]),t._v(" "),s("li",[s("p",[t._v("URI处理方法")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("ecnodeURI()")]),t._v(" "),s("code",[t._v("encodeURIComponent()")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("encodeURI()")]),t._v("不会编码属于URL 组件的特殊字符，比如冒号、斜杠、问号、\n井号")]),t._v(" "),s("li",[s("code",[t._v("encodeURIComponent()")]),t._v("会编码它发现的所有非标准字符。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" uri "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.wrox.com/illegal value.js#start"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "http://www.wrox.com/illegal%20value.js#start"')]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uri"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "http%3A%2F%2Fwww.wrox.com%2Fillegal%20value.js%23start"')]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uri"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("decodeURI()")]),t._v(" "),s("code",[t._v("decodeURIComponent()")])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("decodeURI()")]),t._v("只对使用"),s("code",[t._v("encodeURI()")]),t._v("编码过的字符解码。例如，%20 会被替换为空格，但%23 不会被替换为井号（#），因为井号不是由"),s("code",[t._v("encodeURI()")]),t._v("替换的。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("decodeURIComponent()")]),t._v("解码所有被"),s("code",[t._v("encodeURIComponent()")]),t._v("编码的字符，基本上就是解码所有特殊值。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" uri "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http%3A%2F%2Fwww.wrox.com%2Fillegal%20value.js%23start"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// http%3A%2F%2Fwww.wrox.com%2Fillegal value.js%23start")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeURI")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uri"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// http:// www.wrox.com/illegal value.js#start")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeURIComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uri"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("eval()")]),t._v(" 这个方法就是一个EcmaScript解释器。")])]),t._v(" "),s("li",[s("p",[t._v("我们可以看出，Global对象其实是全局上下文关联的变量对象。浏览器中，"),s("strong",[t._v("将window对象实现为Global对象的代理")]),t._v("。")])])]),t._v(" "),s("h4",{attrs:{id:"math"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#math"}},[t._v("#")]),t._v(" Math")]),t._v(" "),s("ul",[s("li",[t._v("Math对象上的方法比直接在JavaScript实现的快得多。因为使用了JavaScript引擎中更高效的实现和指令集。")]),t._v(" "),s("li",[t._v("一些方法：\n"),s("ul",[s("li",[t._v("最大最小值： "),s("code",[t._v("max()")]),t._v(" "),s("code",[t._v("min()")])]),t._v(" "),s("li",[t._v("舍入方法："),s("code",[t._v("ceil()")]),t._v(" "),s("code",[t._v("floor()")]),t._v(" "),s("code",[t._v("round()")]),t._v(" "),s("code",[t._v("fround()")])]),t._v(" "),s("li",[t._v("随机数："),s("code",[t._v("random()")]),t._v(" 从一组数据中获取一个随机数"),s("code",[t._v("number = Math.floor(Math.random() * total + first)")]),t._v("，选择区间就是"),s("code",[t._v("[first, total]")]),t._v("的整数")])])])]),t._v(" "),s("h2",{attrs:{id:"第六章-集合引用类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第六章-集合引用类型"}},[t._v("#")]),t._v(" 第六章 集合引用类型")]),t._v(" "),s("h3",{attrs:{id:"object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[t._v("#")]),t._v(" Object")]),t._v(" "),s("ul",[s("li",[t._v("Object类型的实例没有多少功能，但适合存储和应用程序间交换数据")]),t._v(" "),s("li",[t._v("显示创建对象有两种方法"),s("code",[t._v("obj = new Object()")]),t._v("和对象字面量"),s("code",[t._v("obj = {}")])]),t._v(" "),s("li",[t._v("Object 类型是一个基础类型，所有引用类型都从它继承了基本的行为")])]),t._v(" "),s("h3",{attrs:{id:"array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array"}},[t._v("#")]),t._v(" Array")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("数组是有序的，数组大小是动态的，每个元素可以是任意类型")])]),t._v(" "),s("li",[s("p",[t._v("创建数组"),s("code",[t._v("new Array()")]),t._v("、省略new操作符"),s("code",[t._v("Array()")]),t._v("、数组字面量"),s("code",[t._v("[]")])])]),t._v(" "),s("li",[s("p",[t._v("修改length属性，可以添加或删除元素")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个包含3个字符串的数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" colors "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"green"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \ncolors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("colors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加一个undefined")]),t._v("\n\ncolors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除'green'和undefined")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 末尾添加元素")]),t._v("\ncolors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("colors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"black"')]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Array的方法：")]),t._v(" "),s("ul",[s("li",[t._v("创建数组 "),s("code",[t._v("Array.from()")]),t._v("、"),s("code",[t._v("Array.of()")])]),t._v(" "),s("li",[t._v("检测数组 "),s("code",[t._v("Array.isArray()")])]),t._v(" "),s("li",[t._v("迭代器方法 "),s("code",[t._v("keys()")]),t._v(" "),s("code",[t._v("values()")]),t._v(" "),s("code",[t._v("entries()")])]),t._v(" "),s("li",[t._v("复制和填充方法 "),s("code",[t._v("copyWithin()")]),t._v(" "),s("code",[t._v("fill()")])]),t._v(" "),s("li",[t._v("转换方法 "),s("code",[t._v("valueof()")]),t._v("、"),s("code",[t._v("toString()")]),t._v("、"),s("code",[t._v("toLocaleString()")]),t._v(" "),s("code",[t._v("join()")])]),t._v(" "),s("li",[t._v("栈和队列方法 "),s("code",[t._v("push()")]),t._v(" "),s("code",[t._v("pop()")]),t._v(" "),s("code",[t._v("shift()")]),t._v(" "),s("code",[t._v("unshift()")])]),t._v(" "),s("li",[t._v("排序方法 "),s("code",[t._v("reverse()")]),t._v(" "),s("code",[t._v("sort()")])]),t._v(" "),s("li",[t._v("操作方法 "),s("code",[t._v("concat()")]),t._v(" "),s("code",[t._v("slice()")]),t._v(" "),s("code",[t._v("splice()")])]),t._v(" "),s("li",[t._v("搜索位置方法 "),s("code",[t._v("indexOf()")]),t._v(" "),s("code",[t._v("lastIndexOf()")]),t._v(" "),s("code",[t._v("includes()")]),t._v(" "),s("code",[t._v("find()")]),t._v(" "),s("code",[t._v("findIndex")])]),t._v(" "),s("li",[t._v("迭代方法 "),s("code",[t._v("every()")]),t._v(" "),s("code",[t._v("filter()")]),t._v(" "),s("code",[t._v("forEach()")]),t._v(" "),s("code",[t._v("map()")]),t._v(" "),s("code",[t._v("some()")])]),t._v(" "),s("li",[t._v("归并方法 "),s("code",[t._v("reduce()")]),t._v(" "),s("code",[t._v("reduceRight()")])])])])]),t._v(" "),s("h3",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" Map")]),t._v(" "),s("ul",[s("li",[t._v("Map和Object本质上相同，都是键值对的集合（Hash结构）。")]),t._v(" "),s("li",[t._v("Object只能使用字符串或Symbol作为键，Map可以使用任意数据类型作为键，包括对象。")]),t._v(" "),s("li",[t._v("创建Map集合"),s("code",[t._v("new Map()")])]),t._v(" "),s("li",[t._v("Map的属性和方法："),s("code",[t._v("size")]),t._v(" "),s("code",[t._v("set()")]),t._v(" "),s("code",[t._v("get()")]),t._v(" "),s("code",[t._v("has()")]),t._v(" "),s("code",[t._v("delete()")]),t._v(" "),s("code",[t._v("clear()")])]),t._v(" "),s("li",[t._v("用作键的对象以及其他集合类型，内部的属性发生改变时，Map的映射仍保持不变。")]),t._v(" "),s("li",[t._v("Map与Object的一个主要差异是，Map内部会维护键值对的插入顺序，因此可以根据插入顺序执行迭代操作")]),t._v(" "),s("li",[s("code",[t._v("entries()")]),t._v("方法可以获取Map的迭代器，或使用Map的"),s("code",[t._v("Symbol.iterator")]),t._v("属性获取迭代器")]),t._v(" "),s("li",[s("code",[t._v("keys()")]),t._v(" "),s("code",[t._v("values()")])]),t._v(" "),s("li",[t._v("键和值在迭代器遍历过程中可以修改；键如果是对象，键的对象属性修改不会影响内部的映射。")])]),t._v(" "),s("h3",{attrs:{id:"选择使用object还是map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择使用object还是map"}},[t._v("#")]),t._v(" 选择使用Object还是Map")]),t._v(" "),s("p",[t._v("对于大多数开发任务，使用Object还是Map，只是个人偏好问题，影响不大。")]),t._v(" "),s("p",[t._v("对于内存和性能开发者来说，Object和Map以下不同：")]),t._v(" "),s("ul",[s("li",[t._v("内存占用：Map比Object更省空间。给定大小的内存，Map大约可以比Object多存储50%的键值对。")]),t._v(" "),s("li",[t._v("插入性能：Map和Object插入性能相当。Map在所有浏览器中会稍微快一点。大量插入操作，Map性能更佳。")]),t._v(" "),s("li",[t._v("查找速度：大型Object和Map查找性能差距极小。少量键值对，Object有时更快。大量查找操作，某些情况下选Object更好。")]),t._v(" "),s("li",[t._v("Object的"),s("code",[t._v("delete")]),t._v("操作性能不佳，无法合理使用隐藏类；Map的delete()比插入和查找更快。大量删除操作，推荐使用Map。")])]),t._v(" "),s("h3",{attrs:{id:"weakmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakmap"}},[t._v("#")]),t._v(" WeakMap")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("是Map的兄弟类型，WeakMap的API是Map的子集。")])]),t._v(" "),s("li",[s("p",[t._v("WeakMap的键只能是Object或继承自Object的类型。值可以是任意类型")])]),t._v(" "),s("li",[s("p",[t._v("原始值如果想做键，可以使用原始值包装类型包装成对象")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原始值可以先包装成对象再用作键")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" stringKey "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" wm3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WeakMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\tstringKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"val1"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("方法是Map的子集："),s("code",[t._v("set()")]),t._v(" "),s("code",[t._v("get()")]),t._v(" "),s("code",[t._v("has()")]),t._v(" "),s("code",[t._v("delete()")]),t._v("  没有"),s("code",[t._v("clear()")]),t._v("方法")])]),t._v(" "),s("li",[s("p",[t._v("weak指的是，JavaScript垃圾回收程序对待”弱映射“中"),s("strong",[t._v("键")]),t._v("的方式；")]),t._v(" "),s("ul",[s("li",[t._v("键是“弱弱地拿着”，意思是这些键不属于正式引用，不会阻止垃圾回收。")]),t._v(" "),s("li",[t._v("值并不是"),s("strong",[t._v("弱弱地拿着")]),t._v("，只要键存在，键值就存在于映射中，不会被回收")]),t._v(" "),s("li",[t._v("键被垃圾回收，键值对映射就从WeakMap中消失了，成为空映射。值也会成为垃圾回收目标，之后被回收")])])]),t._v(" "),s("li",[s("p",[t._v("不存在迭代器。因为WeakMap的键值对任何时候都可能被销毁。")])]),t._v(" "),s("li",[s("p",[t._v("因为不可迭代，所以不知道对象引用的情况下，无法获取其中的值。即便可以访问到WeakMap实例，也无法看到其中内容")])]),t._v(" "),s("li",[s("p",[t._v("WeakMap只能用对象作为键，目的是保证只有通过键的对象引用才能获取值。如果使用原始值作为键，就没办法"),s("strong",[t._v("区分")]),t._v("初始化时的字符串和初始化后使用的一个相等的字符串")])]),t._v(" "),s("li",[s("p",[t._v("应用：")]),t._v(" "),s("ul",[s("li",[t._v("实现私有变量")]),t._v(" "),s("li",[t._v("DOM 节点元数据")])])])]),t._v(" "),s("h3",{attrs:{id:"set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Set也是一种集合。Set 在很多方面都像是加强的Map，这是因为它们的大多数API 和行为都是共有的")])]),t._v(" "),s("li",[s("p",[t._v("Set中元素可以是任意类型，Set的元素如果是对象或其他集合类型，在自己的内容或属性被修改时也不会改变")])]),t._v(" "),s("li",[s("p",[t._v("一些属性和方法 "),s("code",[t._v("size")]),t._v(" "),s("code",[t._v("has()")]),t._v(" "),s("code",[t._v("add()")]),t._v(" "),s("code",[t._v("delete()")]),t._v(" "),s("code",[t._v("clear()")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("add()")]),t._v("和"),s("code",[t._v("delete()")]),t._v("操作是幂等的")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("keys()")]),t._v("或"),s("code",[t._v("values()")]),t._v("方法可以获取Map的迭代器，或使用Set的"),s("code",[t._v("Symbol.iterator")]),t._v("属性获取迭代器")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("entries()")]),t._v("返回包含两个元素的数组，这两个元素相等。"),s("code",[t._v("[ [a, a], [b, b] ]")])])]),t._v(" "),s("li",[s("p",[t._v("修改集合中值的属性不会影响其作为集合值的身份。")]),t._v(" "),s("ul",[s("li",[t._v("Set中的字符串原始值不会被修改")]),t._v(" "),s("li",[t._v("修改对象的属性，对象中的属性会被修改，但对象仍然存在于集合中")])])])]),t._v(" "),s("h3",{attrs:{id:"weakset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakset"}},[t._v("#")]),t._v(" WeakSet")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("是Set的兄弟类型，WeakSet的API是Set的子集")])]),t._v(" "),s("li",[s("p",[t._v("WeakSet中的值只能是Object 或者继承自Object 的类型")])]),t._v(" "),s("li",[s("p",[t._v("一些属性和方法："),s("code",[t._v("has()")]),t._v(" "),s("code",[t._v("add()")]),t._v(" "),s("code",[t._v("delete()")])])]),t._v(" "),s("li",[s("p",[t._v("weak指的是，JavaScript垃圾回收程序对待”弱集合“中"),s("strong",[t._v("值")]),t._v("的方式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("这些值是“弱弱地拿着”的。意思就是，这些值不属于正式的引用，不会阻止垃圾回收")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("add()")]),t._v("方法初始化了一个新对象，并将它用作一个值。因为没有指向这个对象的其他引用，所以当\n这行代码执行完成后，这个对象值就会被当作垃圾回收。然后，这个值就从弱集合中消失了，使其成为\n一个空集合。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ws "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WeakSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行完后会被垃圾回收")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("不存在迭代器")])]),t._v(" "),s("li",[s("p",[t._v("WeakSet相比于WeakMap作用不大；不过弱集合在给对象打标签时还是有价值的")])])]),t._v(" "),s("h3",{attrs:{id:"有哪些原生类型提供了默认迭代器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有哪些原生类型提供了默认迭代器"}},[t._v("#")]),t._v(" 有哪些原生类型提供了默认迭代器")]),t._v(" "),s("p",[t._v("内置的原生类型实现迭代器的有：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("String")])]),t._v(" "),s("li",[s("p",[t._v("Array")])]),t._v(" "),s("li",[s("p",[t._v("TypedArray（定型数组）")])]),t._v(" "),s("li",[s("p",[t._v("Map")])]),t._v(" "),s("li",[s("p",[t._v("Set")])]),t._v(" "),s("li",[s("p",[t._v("函数的arguments对象")])]),t._v(" "),s("li",[s("p",[t._v("NodeList等DOM 集合类型")])])]),t._v(" "),s("h2",{attrs:{id:"第七章-迭代器与生成器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第七章-迭代器与生成器"}},[t._v("#")]),t._v(" 第七章 迭代器与生成器")]),t._v(" "),s("h3",{attrs:{id:"为什么会有迭代器模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么会有迭代器模式"}},[t._v("#")]),t._v(" 为什么会有迭代器模式")]),t._v(" "),s("p",[t._v("循环是迭代的基础，具有迭代的特点：知道执行迭代的次数、每次迭代执行相同的操作、迭代顺序固定。")]),t._v(" "),s("p",[t._v("迭代会在一个有序的集合上进行，数组是迭代集合上一个典型的例子。")]),t._v(" "),s("p",[t._v("迭代时可以通过递增索引获取每一项，但有问题：")]),t._v(" "),s("ul",[s("li",[t._v("迭代前需要事先知道如何使用数据结构。每次迭代需要先获取数组对象，然后通过索引取值，这种方式不适用于所有数据结构")]),t._v(" "),s("li",[t._v("遍历顺序不是数据结构固有的。通过递增索引适用于数组结构，但不适用于其它具有隐式顺序的结构。")])]),t._v(" "),s("p",[t._v("也就是说开发者"),s("strong",[t._v("需要事先单独记录索引，知道数据结构，然后通过循环执行迭代")]),t._v("。这种迭代只适用于数组。")]),t._v(" "),s("p",[t._v("数组的"),s("code",[t._v("forEach()")]),t._v("向迭代迈进了一步，这个方法解决了"),s("strong",[t._v("单独记录索引")]),t._v("和"),s("strong",[t._v("通过数组对象取值")]),t._v("的问题。但"),s("strong",[t._v("无法标识何时迭代终止")])]),t._v(" "),s("p",[t._v("所以在有迭代器之前，执行迭代必须使用循环或其他辅助结构。")]),t._v(" "),s("p",[t._v("而迭代器模式，开发者"),s("strong",[t._v("无需知道如何迭代就能实现迭代操作")]),t._v("。内部的迭代方式可能多种多样，除了默认的，开发者也可以自己实现。外部执行迭代全是相同的。")]),t._v(" "),s("h3",{attrs:{id:"什么是迭代器模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是迭代器模式"}},[t._v("#")]),t._v(" 什么是迭代器模式")]),t._v(" "),s("p",[t._v("迭代器模式描述了一个方案，即把有些结构称为"),s("strong",[t._v("可迭代对象（iterable）")]),t._v("，因为它们实现了"),s("strong",[t._v("Iterable接口")]),t._v("，而且可以通过"),s("strong",[t._v("迭代器Iterator")]),t._v("消费。")]),t._v(" "),s("p",[t._v("任何实现了Iterable接口的数据结构就是可迭代对象。可以被实现Iterator接口的结构（迭代器）消费。")]),t._v(" "),s("p",[t._v("每个迭代器都会关联一个可迭代对象，迭代器无需了解其关联的可迭代对象的结构，只需要知道如何取得连续的值。")]),t._v(" "),s("p",[t._v("这种概念上的分离，正式是Iterable和Iterator的强大之处，即迭代器模式的强大之处。")]),t._v(" "),s("p",[t._v("可迭代对象是一个抽象说法。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("基本上，可以把可迭代对象理解成数组或集合这样的集合类型对象。")])]),t._v(" "),s("li",[s("p",[t._v("但不一定是集合对象，也可以仅仅是具有类似数组行为的其它数据结构。如")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"什么是可迭代协议-iterable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是可迭代协议-iterable"}},[t._v("#")]),t._v(" 什么是可迭代协议（Iterable）")]),t._v(" "),s("p",[t._v("实现Iterable接口需要两点：")]),t._v(" "),s("ul",[s("li",[t._v("支持迭代的自我识别")]),t._v(" "),s("li",[t._v("支持创建Iterator接口的对象，即支持创建迭代器（对象）")])]),t._v(" "),s("p",[t._v("在EcmaScript中，可迭代对象上暴露一个属性Symbol.iterator，该属性是一个函数，即迭代器工厂函数。调用该函数必须返回一个新的迭代器（对象）。")]),t._v(" "),s("h3",{attrs:{id:"什么是迭代器-iterator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是迭代器-iterator"}},[t._v("#")]),t._v(" 什么是迭代器（Iterator）")]),t._v(" "),s("p",[t._v("迭代器是一种一次性使用的对象，用于迭代与其关联的可迭代对象。")]),t._v(" "),s("p",[t._v("迭代器API使用"),s("code",[t._v("next()")]),t._v("方法在可迭代对象中遍历数据。")]),t._v(" "),s("p",[t._v("每次成功调用"),s("code",[t._v("next()")]),t._v("，都会返回IteratorResult对象，该对象有两个属性：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("done")]),t._v(" 表示是否还可以再次调用next()取得下一个值")]),t._v(" "),s("li",[s("code",[t._v("value")]),t._v(" 包含可迭代对象的下一个值（done为false）或undefined（done为true）")])]),t._v(" "),s("p",[t._v("迭代器的特点：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("迭代器并不知道可迭代对象到底有多大，只要迭代器达到"),s("code",[t._v("done: true")]),t._v("，再调用"),s("code",[t._v("next()")]),t._v("就一直返回相同值"),s("code",[t._v("{done : true, value: undefined}")])])]),t._v(" "),s("li",[s("p",[t._v("每个迭代器都表示是可迭代对象的一次性的有序遍历。不同迭代器之间没有联系，只会独立遍历可迭代对象。")])]),t._v(" "),s("li",[s("p",[t._v("迭代器与可迭代对象是分离的。迭代器仅使用游标来记录遍历可迭代对象的历程。如果可迭代对象在迭代期间被修改了，那么迭代器也会反映相应的变化。")])]),t._v(" "),s("li",[s("p",[t._v("迭代器维护着一个指向可迭代对象的引用，因此迭代器会阻止垃圾回收程序回收可迭代对象")])])]),t._v(" "),s("p",[t._v("自定义迭代器：任何实现Iterator接口的对象，都可作为迭代器使用，很多内置类型就实现了Iterator接口。Iterator接口必须有"),s("code",[t._v("next()")]),t._v("方法，可选"),s("code",[t._v("return()")]),t._v("方法用于指定迭代器提前关闭时的执行逻辑。")]),t._v(" "),s("p",[t._v("下面实现了迭代器：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可迭代对象，因为实现了Iterable接口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Counter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("limit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("limit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" limit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实现Iterable接口")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      limit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("limit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回的对象实现了Iterator接口")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Iterator接口必须实现的方法")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" limit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("done")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("done")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Exiting early'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("done")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"可接收可迭代对象的原生语言特性有哪些-即-迭代器的应用场合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可接收可迭代对象的原生语言特性有哪些-即-迭代器的应用场合"}},[t._v("#")]),t._v(" 可接收可迭代对象的原生语言特性有哪些 即 迭代器的应用场合")]),t._v(" "),s("p",[t._v("一些场合下，原生语言结构会在后台调用提供的可迭代对象的迭代器工厂函数"),s("code",[t._v("[Symbol.iterator]()")]),t._v("，从而创建一个迭代器。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("for-of")]),t._v(" 循环")]),t._v(" "),s("li",[t._v("数组解构")]),t._v(" "),s("li",[t._v("扩展操作符")]),t._v(" "),s("li",[s("code",[t._v("Array.from()")])]),t._v(" "),s("li",[t._v("创建集合Set")]),t._v(" "),s("li",[t._v("创建映射Map")]),t._v(" "),s("li",[s("code",[t._v("Promise.all()")]),t._v("和"),s("code",[t._v("Promise.race()")]),t._v("都接收Promise组成的可迭代对象")]),t._v(" "),s("li",[s("code",[t._v("yield*")]),t._v(" 操作符，在生成器中使用")])]),t._v(" "),s("h3",{attrs:{id:"什么是生成器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是生成器"}},[t._v("#")]),t._v(" 什么是生成器")]),t._v(" "),s("p",[t._v("生成器拥有在一个函数块内暂停和恢复代码执行的能力。")]),t._v(" "),s("p",[t._v("生成器影响深远，如使用生成器可自定义迭代器和实现协程。")]),t._v(" "),s("p",[t._v("生成器的形式是一个函数，函数名称前加一个星号"),s("code",[t._v("*")]),t._v("表示它是一个生成器函数。")]),t._v(" "),s("ul",[s("li",[t._v("标识生成器的星号不受两边空格的影响。")]),t._v(" "),s("li",[t._v("可以定义函数的地方，就可以定义生成器")])]),t._v(" "),s("p",[t._v("调用生成器函数，会产生一个"),s("strong",[t._v("生成器（对象）")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("生成器对象一开始处于暂停（suspended）的状态")]),t._v(" "),s("li",[t._v("生成器对象既实现了Iterable接口，也实现了Iterator接口；所以，"),s("strong",[t._v("生成器对象既是可迭代对象，也是迭代器对象")]),t._v("。")]),t._v(" "),s("li",[t._v("生成器对象的默认迭代器是自引用的。\n"),s("ul",[s("li",[t._v("因为生成器对象实现了Iterable接口，也实现了Iterator接口")]),t._v(" "),s("li",[t._v("所以调用Iterable接口"),s("code",[t._v("[Symbol.iterator]()")]),t._v("返回的迭代器对象，是本身生成器对象。")])])])]),t._v(" "),s("p",[t._v("生成器对象一开始处于暂停（suspended）的状态。调用"),s("code",[t._v("next()")]),t._v("方法，可以让生成器开始或恢复执行。")]),t._v(" "),s("ul",[s("li",[t._v("每次成功调用"),s("code",[t._v("next()")]),t._v("，都会返回IteratorResult对象，该对象有两个属性：\n"),s("ul",[s("li",[s("code",[t._v("done")]),t._v(" 表示是否还可以再次调用next()取得下一个值")]),t._v(" "),s("li",[s("code",[t._v("value")]),t._v(" 是生成器函数的返回值，默认"),s("code",[t._v("undefined")]),t._v("。")])])]),t._v(" "),s("li",[t._v("函数体为空的生成器函数中间不会停留，调用一次"),s("code",[t._v("next()")]),t._v("就会让生成器状态变成"),s("code",[t._v("done: true")])]),t._v(" "),s("li",[t._v("生成器函数只在初次调用"),s("code",[t._v("next()")]),t._v("方法后开始执行。因为调用生成器函数是返回生成器对象，生成器对象调用"),s("code",[t._v("next()")]),t._v("后才会开始迭代执行。")])]),t._v(" "),s("p",[s("code",[t._v("yeild")]),t._v("关键字：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("yield")]),t._v(" 关键字可以让生成器停止和开始执行。")]),t._v(" "),s("li",[t._v("生成器函数在遇到yield关键字之前会正常执行。遇到这个关键字后，执行会停止，函数作用域的状态会被保留。停止执行的生成器函数的内部代码即可迭代对象只能通过在生成器对象上调用next()方法来恢复执行")]),t._v(" "),s("li",[t._v("yield 关键字有点像函数的中间返回语句，它生成的值会出现在next()方法返回的对象里。通过yield 关键字退出的生成器函数会处在done: false 状态；通过return 关键字退出的生成器函数会处于done: true 状态。")]),t._v(" "),s("li",[t._v("生成器函数的内部执行流程针对每个生成器对象区分作用域。每个生成器对象是相互是独立的")]),t._v(" "),s("li",[t._v("yield 关键字只能在生成器函数内部使用，且必须直接位于生成器函数定义中。")]),t._v(" "),s("li",[t._v("生成器对象作为可迭代对象。直接调用"),s("code",[t._v("next()")]),t._v("作用不大，可作为可迭代对象使用")]),t._v(" "),s("li",[t._v("yield使用不限次数")]),t._v(" "),s("li",[t._v("yield关键字可以作为函数的中间参数使用；暂停的生成器函数，会接收next()传递的第一个参数值")]),t._v(" "),s("li",[t._v("使用星号"),s("code",[t._v("*")]),t._v("增强yield行为，"),s("code",[t._v("yield*")]),t._v("能迭代一个可迭代对象；"),s("code",[t._v("yield*")]),t._v("实际上只是将一个可迭代对象序列化为一连串可以单独产出的值，所以这跟把yield放到一个循环里没什么不同")]),t._v(" "),s("li",[t._v("yield*的值是关联迭代器返回done: true 时的value 属性。对于普通迭代器来说，这个值是undefined；对于生成器函数产生的迭代器来说，这个值就是生成器函数返回的值。")])]),t._v(" "),s("p",[t._v("生成器适合作为默认迭代器。因为生成器对象实现了Iterable接口，调用生成器函数会产生迭代器。")]),t._v(" "),s("p",[t._v("提前终止迭代器："),s("code",[t._v("return()")]),t._v("和"),s("code",[t._v("throw()")]),t._v("都会强制生成器进入关闭状态。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("return()")]),t._v("方法，终止迭代器对象的值。\n"),s("ul",[s("li",[t._v("与迭代器不同，生成器进入关闭状态的，就无法恢复了。后续调用"),s("code",[t._v("next()")]),t._v("会返回"),s("code",[t._v("done: true")]),t._v("的状态")]),t._v(" "),s("li",[s("code",[t._v("for-of")]),t._v("循环等内置语言结构，会忽略"),s("code",[t._v("done: true")]),t._v("的"),s("code",[t._v("IteratorResult")]),t._v("内部返回值")])])]),t._v(" "),s("li",[s("code",[t._v("thrwo()")]),t._v("方法\n"),s("ul",[s("li",[t._v("会在暂停的时候将一个提供的错误注入到生成器对象中。如果错误未被处理，生成器就会关闭。")]),t._v(" "),s("li",[t._v("假如生成器函数内部处理了这个错误，那么生成器就不会关闭，而且还可以恢复执行，错误\n处理会跳过对应的yield。")])])])]),t._v(" "),s("h3",{attrs:{id:"说一说迭代器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说一说迭代器"}},[t._v("#")]),t._v(" 说一说迭代器")]),t._v(" "),s("p",[t._v("说到迭代器，首先要说到可迭代对象，可迭代对象是一个可以由任意对象实现的接口，支持连续获取对象产出的每一个值。任何实现"),s("code",[t._v("Iterable")]),t._v("接口的对象都有一个"),s("code",[t._v("Symbol.iterator")]),t._v(" 属性，这个属性引用默认迭代器工厂函数，调用之后会返回一个实现Iterator接口的对象，即迭代器对象。")]),t._v(" "),s("p",[t._v("迭代器是一种一次性使用的对象，用于迭代与其关联的可迭代对象。每个迭代器表示对可迭代对象的一次有序遍历，迭代器内部有一个指针指向可迭代对象，用做游标来记录遍历的历程。")]),t._v(" "),s("p",[t._v("迭代器中的"),s("code",[t._v("next()")]),t._v("方法可用来遍历可迭代对象，调用此方法会返回一个"),s("code",[t._v("IteratorResult")]),t._v("对象，这个对象包含一个"),s("code",[t._v("done")]),t._v("属性和一个"),s("code",[t._v("value")]),t._v("属性，"),s("code",[t._v("done")]),t._v("是一个布尔值，表示是否还有更多值可以访问；"),s("code",[t._v("value")]),t._v("包含迭代器返回的当前值。")]),t._v(" "),s("p",[t._v("可以通过反复调用"),s("code",[t._v("next()")]),t._v("方法来迭代可迭代对象。也可以通过原生语法来迭代可迭代对象，如"),s("code",[t._v("for-of")]),t._v(" 循环、数组解构、"),s("code",[t._v("yield*")]),t._v("。")]),t._v(" "),s("p",[t._v("迭代器的作用就是：")]),t._v(" "),s("ul",[s("li",[t._v("一是为各种数据结构，提供一个统一的、简便的访问接口；")]),t._v(" "),s("li",[t._v("二是使得数据结构的成员有序；")])]),t._v(" "),s("h3",{attrs:{id:"说一说生成器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说一说生成器"}},[t._v("#")]),t._v(" 说一说生成器")]),t._v(" "),s("p",[t._v("生成器是一种特殊的函数，函数名称前加一个星号"),s("code",[t._v("*")]),t._v("表示它是一个生成器函数。生成器有在函数内部暂停和恢复代码执行的能力。")]),t._v(" "),s("p",[t._v("生成器函数调用之后会返回一个生成器对象。")]),t._v(" "),s("p",[t._v("生成器对象上实现了"),s("code",[t._v("Iterable")]),t._v("接口，因此可用在任何消费可迭代对象的地方，如"),s("code",[t._v("for-of")]),t._v("循环、或者作为自实现可迭代对象的迭代器工厂函数。")]),t._v(" "),s("p",[t._v("生成器对象也实现了"),s("code",[t._v("Iterator")]),t._v("接口，因此生成器也是一个迭代器对象，也有"),s("code",[t._v("next()")]),t._v("方法。这个方法可以恢复生成器函数内部代码的执行。")]),t._v(" "),s("p",[t._v("每次成功调用"),s("code",[t._v("next()")]),t._v("，都会返回"),s("code",[t._v("IteratorResult")]),t._v("对象，这个对象包含一个"),s("code",[t._v("done")]),t._v("属性和一个"),s("code",[t._v("value")]),t._v("属性，"),s("code",[t._v("done")]),t._v("是一个布尔值，表示是否还有更多值可以访问；"),s("code",[t._v("value")]),t._v(" 是生成器函数的返回值，或"),s("code",[t._v("yield")]),t._v("关键字产生的值。")]),t._v(" "),s("p",[s("code",[t._v("yield")]),t._v("关键字是生成器函数内部支持的关键字，这个关键字能暂停生成器函数的执行。使用"),s("code",[t._v("yield")]),t._v("关键字还可以通过"),s("code",[t._v("next()")]),t._v("方法接收输入和产生输出。")]),t._v(" "),s("p",[s("code",[t._v("yield")]),t._v("后加星号"),s("code",[t._v("*")]),t._v("即"),s("code",[t._v("yield*")]),t._v("可以用来消费可迭代对象，也就可以用来组合处理迭代器和其它生成器。")]),t._v(" "),s("p",[t._v("生成器的关键在于，既可以暂停和恢复函数内部的执行，还可以向函数内输入数据和函数体外输出数据。这就为异步编程提供了一种新的解决方法，这也就有了之后的"),s("code",[t._v("async/await")]),t._v("异步编程。")]),t._v(" "),s("h2",{attrs:{id:"第八章-对象、类与面向对象编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第八章-对象、类与面向对象编程"}},[t._v("#")]),t._v(" 第八章 对象、类与面向对象编程")]),t._v(" "),s("h3",{attrs:{id:"什么是对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是对象"}},[t._v("#")]),t._v(" 什么是对象")]),t._v(" "),s("p",[t._v("对象是一组属性的无序集合。本质就是一张Hash表。")]),t._v(" "),s("p",[t._v("对象的每个属性和方法都用一个名称来标识，这个名称再映射到一个值。")]),t._v(" "),s("h3",{attrs:{id:"什么是对象的属性描述符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是对象的属性描述符"}},[t._v("#")]),t._v(" 什么是对象的属性描述符")]),t._v(" "),s("p",[t._v("属性描述符是一些内部特性，用来描述属性的特征。这些特性外部无法访问到，用中括号加特性的名称标识，如"),s("code",[t._v("[[Enumerable]]")]),t._v("。")]),t._v(" "),s("p",[t._v("对象的属性分为两种：数据属性和访问器属性。")]),t._v(" "),s("p",[s("strong",[t._v("数据属性")])]),t._v(" "),s("p",[t._v("数据属性有4个属性描述符")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("[[Configurable]]")]),t._v(" 默认为"),s("code",[t._v("true")]),t._v("。表示属性是否可以通过"),s("code",[t._v("delete")]),t._v("删除并重新定义、是否可以修改它的其它属性描述符、是否可以改为访问器属性。一旦设置成"),s("code",[t._v("false")]),t._v("，对应的属性不能再做任何修改。")]),t._v(" "),s("li",[s("code",[t._v("[[Enumerable]]")]),t._v(" 默认"),s("code",[t._v("true")]),t._v("。表示属性是否可以通过"),s("code",[t._v("for-in")]),t._v("循环返回")]),t._v(" "),s("li",[s("code",[t._v("[[Writable]]")]),t._v(" 默认"),s("code",[t._v("true")]),t._v("。表示属性的值是否可以被修改")]),t._v(" "),s("li",[s("code",[t._v("[[Value]]")]),t._v(" 默认"),s("code",[t._v("undefined")]),t._v("。 包含属性实际的值，值会从这个位置读取，也会写入这个位置。")])]),t._v(" "),s("p",[t._v("对象中创建的属性默认是数据属性，即创建属性时候，JavaScript引擎默认就会设置数据属性的4个属性描述符。")]),t._v(" "),s("p",[s("strong",[t._v("访问器属性")])]),t._v(" "),s("p",[t._v("访问器属性不包含数据值。但包含一个获取（getter）函数和一个设置（setter）函数，但都是非必须的。")]),t._v(" "),s("p",[t._v("访问器属性有4个属性描述符")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("[[Configurable]]")]),t._v(" 同上。")]),t._v(" "),s("li",[s("code",[t._v("[[Enumerable]]")]),t._v(" 同上。")]),t._v(" "),s("li",[s("code",[t._v("[[Get]]")]),t._v(" 获取（getter）函数，在读取属性时调用。非必须，默认为"),s("code",[t._v("undefined")])]),t._v(" "),s("li",[s("code",[t._v("[[Set]]")]),t._v(" 设置（setter）函数。在设置属性时调用。非必须，默认为"),s("code",[t._v("undefined")])])]),t._v(" "),s("p",[t._v("访问器属性的典型应用场景：设置一个值会有其它副作用，即设置一个值会导致一些其它的变化。")]),t._v(" "),s("h3",{attrs:{id:"对象的属性描述符方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的属性描述符方法"}},[t._v("#")]),t._v(" 对象的属性描述符方法")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Object.defineProperty()")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在一个对象上定义或修改一个属性的属性描述符")])]),t._v(" "),s("li",[s("p",[t._v("方法接收三个参数：要给其添加或修改属性的对象、属性的描述和一个属性描述符对象。属性描述符对象包含"),s("code",[t._v("configurable")]),t._v("、"),s("code",[t._v("enumerable")]),t._v("、"),s("code",[t._v("writable")]),t._v(" 和"),s("code",[t._v("value")]),t._v("，跟相关属性描述符一一对应。根据要修改的特征，可以设置其中一个或多个值。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("configurable")]),t._v("设置成"),s("code",[t._v("false")]),t._v("，即描述符"),s("code",[t._v("[[Configurable]]")]),t._v("设置成"),s("code",[t._v("false")]),t._v("，对应的属性不能再做任何修改。")])]),t._v(" "),s("li",[s("p",[t._v("调用此方法设置属性，第三个参数不指定"),s("code",[t._v("configurable")]),t._v("、"),s("code",[t._v("enumerable")]),t._v("、"),s("code",[t._v("writable")]),t._v("，默认情况下都是"),s("code",[t._v("false")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("一般不需要调用此方法，但是要理解理解JavaScript对象，就要理解这些概念。")])])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Object.defineProperties()")])])]),t._v(" "),s("ul",[s("li",[t._v("在一个对象上同时定义多个属性，并分别定义它们的属性描述符。")]),t._v(" "),s("li",[t._v("方法接收两个参数：要给其添加或修改属性的对象和多个描述符对象组成的对象。")]),t._v(" "),s("li",[t._v("和"),s("code",[t._v("Object.defineProperty()")]),t._v("作用相同，唯一区别是这个方法可以同时定义多个属性。")])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Object.getOwnPropertyDescriptor()")])])]),t._v(" "),s("ul",[s("li",[t._v("作用：获取实例对象中指定属性的属性描述符。")]),t._v(" "),s("li",[t._v("方法接收两个参数：属性所在的对象和要取得其描述符的属性名。\n"),s("ul",[s("li",[t._v("返回值是一个对象，对于访问器属性包含configurable、enumerable、get 和set 属性")]),t._v(" "),s("li",[t._v("对于数据属性包含configurable、enumerable、writable 和value 属性")])])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Object.getOwnPropertyDescriptors()")])])]),t._v(" "),s("ul",[s("li",[t._v("获取实例对象上所有属性的属性描述符。")]),t._v(" "),s("li",[t._v("这个方法实际上会在每个自有属性上调用"),s("code",[t._v("Object.getOwnPropertyDescriptor()")]),t._v("并在一个新对象中返回它们")])]),t._v(" "),s("h3",{attrs:{id:"对象的其它方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的其它方法"}},[t._v("#")]),t._v(" 对象的其它方法")]),t._v(" "),s("h4",{attrs:{id:"合并对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并对象"}},[t._v("#")]),t._v(" 合并对象")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Object.assign()")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("方法接收：一个目标对象和一个或多个源对象")])]),t._v(" "),s("li",[s("p",[t._v("将源对象上可枚举且自有属性复制到目标对象上。包括：字符串和Symbol为键的属性")])]),t._v(" "),s("li",[s("p",[t._v("相同属性名会被最后一个源对象上的覆盖")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("该方法是浅拷贝，如果属性是对象，只会复制对象的引用。")])])]),t._v(" "),s("li",[s("p",[t._v("不能在两个对象间转移获取函数和设置函数。对每个符合条件的属性，这个方法会使用源对象上的"),s("code",[t._v("[[Get]]")]),t._v("取得属性的值，然后使用目标对象上的"),s("code",[t._v("[[Set]]")]),t._v("设置属性的值。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" dest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 获取函数与设置函数\n*/")]),t._v("\ndest "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Invoked dest setter with param ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nsrc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Invoked src getter'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用src 的获取方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 调用dest 的设置方法并传入参数"foo"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为这里的设置函数不执行赋值操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以实际上并没有把值转移过来")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { set a(val) {...} }")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("如果中间出错，可能会复制部分内容，不会回滚。它是一个尽力而为、可能只会完成部分复制的方法")])])]),t._v(" "),s("h4",{attrs:{id:"相等判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相等判断"}},[t._v("#")]),t._v(" 相等判断")]),t._v(" "),s("p",[s("strong",[t._v("Object.is()")])]),t._v(" "),s("ul",[s("li",[t._v("判断两个值是否是全等。")]),t._v(" "),s("li",[t._v("与全等操作符 === 相似，但同时考虑了一些边界情况： -0、+0、0、NaN在"),s("code",[t._v("===")]),t._v("操作符下认为是不相等的。但"),s("code",[t._v("Object.is()")]),t._v("认为相等。")])]),t._v(" "),s("h3",{attrs:{id:"创建对象的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建对象的方法"}},[t._v("#")]),t._v(" 创建对象的方法")]),t._v(" "),s("p",[s("strong",[t._v("方法1")]),t._v(" 操作符new加上Object构造函数")]),t._v(" "),s("p",[t._v("Object构造函数，创建后再添加属性")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nperson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccbean"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nperson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nperson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Software Engineer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nperson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("方法二")]),t._v(" 对象字面量")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccbean"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("job")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Software Engineer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("缺点：具有同样接口的多个对象，要编写很多重复代码")]),t._v(" "),s("p",[s("strong",[t._v("方法三")]),t._v(" 工厂模式")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createPerson")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createPerson")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccbean"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Software Engineer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createPerson")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tom"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Doctor"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("解决了创建多个类似对象重复代码问题。")]),t._v(" "),s("p",[t._v("缺点：新创建对象的标识问题，即新创建的对象是什么类型。")]),t._v(" "),s("p",[s("strong",[t._v("方法四")]),t._v(" 构造函数模式")]),t._v(" "),s("p",[t._v("自定义构造函数，以函数的形式为自己的对象类型定义属性和方法。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccbean"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Software Engineer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tom"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Doctor"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nperson1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nperson2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("person1和person2 分别保存着Person 的不同实例。这两个对象都有一个constructor 属性指向Person。")]),t._v(" "),s("p",[t._v("**对象的"),s("code",[t._v("constructor")]),t._v("用于标识对象的类型，实际上这个constructor属性实际在构造函数的原型对象prototype上。**不过一般用"),s("code",[t._v("instanceof")]),t._v("操作符来确定对象的类型。")]),t._v(" "),s("p",[t._v("与工厂模式的区别：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("函数名首字母大写")])]),t._v(" "),s("li",[s("p",[t._v("没有显示地创建对象")])]),t._v(" "),s("li",[s("p",[t._v("属性和方法直接赋值给了"),s("code",[t._v("this")])])]),t._v(" "),s("li",[s("p",[t._v("没有"),s("code",[t._v("return")])])])]),t._v(" "),s("p",[t._v("相比于工厂模式，优点在于能够确定实例被标识为特定类型。")]),t._v(" "),s("p",[t._v("缺点是：不同实例上的方法同名但不相等。也就是相同逻辑的方法重复定义。")]),t._v(" "),s("p",[s("strong",[t._v("方法五")]),t._v(" 原型模式")]),t._v(" "),s("p",[t._v("函数上有一个属性"),s("code",[t._v("prototype")]),t._v("，这个属性是一个对象，是通过构造函数创建的对象的原型。")]),t._v(" "),s("p",[t._v("这个对象包含了特定引用类型的实例（构造函数的实例）共享的属性和方法。")]),t._v(" "),s("p",[t._v("原来在构造函数中赋值给对象实例的值，可以直接赋值给它们的原型。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccbean"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Software Engineer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nperson1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nperson2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sayName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" person2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sayName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[t._v("解决了相同逻辑的方法重复定义的问题。也就是，原型上定义属性和方法是由所有的实例共享的。")]),t._v(" "),s("p",[t._v("缺点：弱化了向构造函数传递参数的能力；原型对象上的所有属性和方法都是共享的，没有单独属于实例上的属性和方法。")]),t._v(" "),s("p",[t._v("所以这也是开发中通常不单独使用原型模式的原因。而是使用原型模式加继承。")]),t._v(" "),s("h3",{attrs:{id:"调用构造函数时-内部执行的流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调用构造函数时-内部执行的流程"}},[t._v("#")]),t._v(" 调用构造函数时，内部执行的流程")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("首先，会在内存中创建一个新对象")])]),t._v(" "),s("li",[s("p",[t._v("新对象内部的特性"),s("code",[t._v("[[Prototype]]")]),t._v("被赋值为构造函数的"),s("code",[t._v("prototype")]),t._v("属性。通过"),s("code",[t._v("__proto__")]),t._v("访问到原型")])]),t._v(" "),s("li",[s("p",[t._v("构造函数内部的"),s("code",[t._v("this")]),t._v("指向这个新对象。")])]),t._v(" "),s("li",[s("p",[t._v("执行构造函数内部的代码（给新对象添加属性）")])]),t._v(" "),s("li",[s("p",[t._v("如果构造函数返回非空对象，则返回该对象；否则，返回刚创建的新对象。")])])]),t._v(" "),s("h3",{attrs:{id:"什么是原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是原型"}},[t._v("#")]),t._v(" 什么是原型")]),t._v(" "),s("p",[t._v("无论何时，只要创建一个函数，就会按照特定的规则为这个函数创建一个"),s("code",[t._v("prototype")]),t._v("属性，指向原型对象。")]),t._v(" "),s("p",[t._v("原型对象包含这个函数当做构造函数调用时，实例化出来的对象的原型。")]),t._v(" "),s("p",[t._v("原型上包含的属性和方法可以被实例化对象共享。")]),t._v(" "),s("p",[t._v("在自定义构造函数时，原型对象上只会自动有一个"),s("code",[t._v("constructor")]),t._v("属性，指回与之关联的构造函数。其它的所有方法都继承自Object的原型对象即"),s("code",[t._v("Object.prototype")]),t._v("。然后构造函数会添加自己的其它属性和方法。（Object原型的原型指向null，即"),s("code",[t._v("Object.prototype.__proto__ === null")]),t._v("）")]),t._v(" "),s("p",[t._v("每次调用一个构造函数创建新实例，这个实例内部的"),s("code",[t._v("[[Prototype]]")]),t._v("特性就会指向构造函数的原型对象。无法直接访问到这个属性，但是在Node和一些浏览器中（Firefox、Safari 、Chrome）可以通过"),s("code",[t._v("__proto__")]),t._v("访问到对象的原型。")]),t._v(" "),s("p",[t._v("构造函数和原型之间有直接联系，即构造函数通过prototype 属性链接到原型对象。实例和构造函数的原型之间有直接联系，但实例和构造函数之间没有。")]),t._v(" "),s("p",[t._v("构造函数、原型对象和实例对象，是三个完全不同的对象：")]),t._v(" "),s("ul",[s("li",[t._v("构造函数中有属性"),s("code",[t._v("prototype")]),t._v("指向与之关联的原型对象")]),t._v(" "),s("li",[t._v("原型对象上有属性"),s("code",[t._v("constructor")]),t._v("指向与之关联的构造函数")]),t._v(" "),s("li",[t._v("实例对象上有"),s("code",[t._v("[[Prototype]]")]),t._v("指向与构造函数关联的原型对象")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ccbeango/blogImages@master/JavaScript/%E7%BA%A2%E7%9A%AE%E4%B9%A6-%E5%8E%9F%E5%9E%8B.drawio.svg",alt:"红皮书-原型"}})]),t._v(" "),s("p",[t._v("上图展示了"),s("code",[t._v("Person")]),t._v("构造函数、"),s("code",[t._v("Person")]),t._v("的原型对象和"),s("code",[t._v("Person")]),t._v("现有两个实例之间的关系。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Person.prototype")]),t._v("指向原型对象，而"),s("code",[t._v("Person.prototype.contructor")]),t._v("指回"),s("code",[t._v("Person")]),t._v("构造函数。")]),t._v(" "),s("li",[t._v("原型对象包含"),s("code",[t._v("constructor")]),t._v("属性和其他后来添加的属性。")]),t._v(" "),s("li",[s("code",[t._v("Person")]),t._v("的两个实例"),s("code",[t._v("person1")]),t._v("和"),s("code",[t._v("person2")]),t._v("都只有一个内部属性"),s("code",[t._v("[[Prototype]]")]),t._v("指回"),s("code",[t._v("Person.prototype")]),t._v("，而且两者都与构造函数没有直接联系。")])]),t._v(" "),s("h3",{attrs:{id:"instanceof操作符的本质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#instanceof操作符的本质"}},[t._v("#")]),t._v(" instanceof操作符的本质")]),t._v(" "),s("p",[s("strong",[t._v("操作符"),s("code",[t._v("instanceof")]),t._v("的本质是检查实例的原型链中是否包含指定构造函数的原型。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SuperType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SubType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("h3",{attrs:{id:"对象的原型相关方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的原型相关方法"}},[t._v("#")]),t._v(" 对象的原型相关方法")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Object.isPrototypeOf()")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("方法接收：一个对象作为参数。")])]),t._v(" "),s("li",[s("p",[t._v("作用：确定原型和实例的关系。也就是确定两个对象的关系。")])]),t._v(" "),s("li",[s("p",[t._v("本质上，"),s("code",[t._v("isPrototypeOf()")]),t._v("会在传入对象的"),s("code",[t._v("[[Prototype]]")]),t._v("（传入对象的原型）指向调用它的对象时返回"),s("code",[t._v("true")]),t._v("。只要调用对象的原型链中包含这个原型，这个方法就返回true。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传入对象person1的原型是否是Person构造函数关联的原型")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Object.getPrototypeOf()")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("方法接收：一个对象作为参数。")])]),t._v(" "),s("li",[s("p",[t._v("作用：返回（获取）传入参数的内部特性"),s("code",[t._v("[[Prototype]]")]),t._v("的值，即返回传入对象的原型。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Ccbean"')]),t._v("\n")])])])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Object.setPrototypeOf()")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("方法接收：一个对象作为参数。")])]),t._v(" "),s("li",[s("p",[t._v("作用：向实例的内部特性"),s("code",[t._v("[[Prototype]]")]),t._v("写入一个新值，即改变（重写）对象的原型。")])]),t._v(" "),s("li",[s("p",[t._v("不推荐使用，"),s("code",[t._v("Object.setPrototypeOf()")]),t._v("可能会严重影响代码性能。推荐使用"),s("code",[t._v("Object.create()")])])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Object.create()")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("方法可接收两个参数：")]),t._v(" "),s("ul",[s("li",[t._v("作为新对象原型的对象、给新对象定义属性描述符的对象")]),t._v(" "),s("li",[t._v("与"),s("code",[t._v("Object.defineProperties()")]),t._v("的第二个参数一样。每个新增属性都通过各自的描述符来描述，以这种方式添加的属性会遮蔽原型对象上的同名属性。")])])]),t._v(" "),s("li",[s("p",[t._v("作用：创建一个新对象，同时使用传入的参数对象作为新对象的原型。即创建新对象，并指定其原型为传入对象。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Nicholas"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("friends")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Shelby"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Court"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Van"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" anotherPerson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Greg"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Matt")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("anotherPerson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("anotherPerson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Greg")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("anotherPerson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("friends"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Shelby,Court,Van"')]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"多个对象实例间共享属性和方法的原理是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多个对象实例间共享属性和方法的原理是什么"}},[t._v("#")]),t._v(" 多个对象实例间共享属性和方法的原理是什么")]),t._v(" "),s("p",[t._v("在通过对象访问属性时，会按照这个属性的名称开始搜索。")]),t._v(" "),s("p",[t._v("搜索首先会从这个对象实例上开始查找，如果在这个实例上找到了这个属性，那么就会返回这个属性名对应的值。")]),t._v(" "),s("p",[t._v("如果没有找到，搜索会沿着"),s("code",[t._v("[[Prototype]]")]),t._v("指针进入原型对象进行查找，然后在原型对象上找到对应属性后，再返回对应的值。")]),t._v(" "),s("h3",{attrs:{id:"对象上属性的遮蔽特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象上属性的遮蔽特性"}},[t._v("#")]),t._v(" 对象上属性的遮蔽特性")]),t._v(" "),s("p",[t._v("通过读取原型上的值来共享属性和方法，但是不能通过实例重写这些值。")]),t._v(" "),s("p",[t._v("只要在对象上添加一个属性，那么这个属性就会"),s("strong",[t._v("遮蔽")]),t._v("（shadow）原型上的同名属性，也就是说虽然不会修改它，但会屏蔽对它的访问。")]),t._v(" "),s("p",[t._v("因为在标识符解析过程中，当找到对应属性后，会直接返回这个属性的值，不再继续搜索。")]),t._v(" "),s("p",[t._v("可以通过操作符"),s("code",[t._v("delete")]),t._v("删除实例上的属性，恢复标识符解析过程能够继续搜索到实例对象的原型上。")]),t._v(" "),s("h3",{attrs:{id:"对象的属性相关方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象的属性相关方法"}},[t._v("#")]),t._v(" 对象的属性相关方法")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Object.hasOwnProperty()")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("方法接收一个参数：一个属性名")])]),t._v(" "),s("li",[s("p",[t._v("作用：用于确定某个属性是否是在实例上。属性可能不在实例上，而在原型上；或既不在实例上，也不在原型上")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Object.keys()")])])]),t._v(" "),s("ul",[s("li",[t._v("方法接收一个对象作为参数")]),t._v(" "),s("li",[t._v("作用：返回该对象上所有可枚举的实例属性名的字符串数组。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Ccbean"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Software Engineer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "name,age,job,sayName"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Rob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p1keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[name,age]"')]),t._v("\n")])])]),s("p",[s("strong",[s("code",[t._v("Object.getOwnPropertyNames()")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("方法接收一个对象作为参数")])]),t._v(" "),s("li",[s("p",[t._v("作用：返回对象上的所有实例属性名的字符串数组，无论是否可枚举。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" keys "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyNames")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[constructor,name,age,job,sayName]"')]),t._v("\n")])])]),s("p",[t._v("返回的结果中包含了一个不可枚举的属性constructor")])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Object.getOwnPropertySymbols()")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("方法接收一个对象作为参数")])]),t._v(" "),s("li",[s("p",[t._v("作用：返回对象上的Symbol属性名的数组")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" k1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'k1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'k2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'k1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'k2'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertySymbols")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [Symbol(k1), Symbol(k2)]")]),t._v("\n")])])])])]),t._v(" "),s("p",[s("code",[t._v("for-in")]),t._v("循环、"),s("code",[t._v("Object.keys()")]),t._v("、"),s("code",[t._v("Object.getOwnPropertyNames()")]),t._v("、"),s("code",[t._v("Object.getOwnPropertySymbols()")]),t._v("以及"),s("code",[t._v("Object.assign()")]),t._v("在"),s("strong",[t._v("属性枚举顺序")]),t._v("方面有很大区别。")]),t._v(" "),s("p",[s("code",[t._v("for-in")]),t._v("循环和"),s("code",[t._v("Object.keys()")]),t._v("的枚举顺序是不确定的，取决于JavaScript 引擎，可能因浏览器而异。")]),t._v(" "),s("p",[s("code",[t._v("Object.getOwnPropertyNames()")]),t._v("、"),s("code",[t._v("Object.getOwnPropertySymbols()")]),t._v("和"),s("code",[t._v("Object.assign()")]),t._v("的枚举顺序是确定性的。先以升序枚举数值键，然后以插入顺序枚举字符串和符号键。在对象字面量中定义的键以它们逗号分隔的顺序插入。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" k1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'k1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  k2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'k2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("first")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'first'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sym2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("second")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'second'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sym2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("third "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'third'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyNames")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["0", "1", "2", "3", "first", "second", "third"]')]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertySymbols")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [Symbol(k1), Symbol(k2)]")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Object.entries()")])]),t._v(" "),s("p",[s("strong",[t._v("Object.values()")])]),t._v(" "),s("h3",{attrs:{id:"in操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#in操作符"}},[t._v("#")]),t._v(" in操作符")]),t._v(" "),s("p",[s("code",[t._v("in")]),t._v("操作符有两种使用方法：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("单独使用：无论属性在对象实例上还是原型上，都会返回true")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" person1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("在"),s("code",[t._v("for-in")]),t._v("循环中使用：返回实例对象和实例对象的原型对象上可以被枚举的所有属性的属性名。")])])]),t._v(" "),s("p",[s("strong",[t._v("确定某个属性是否位于原型上的方法")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasPrototypeProperty")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"原型上添加属性方法和重写原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型上添加属性方法和重写原型"}},[t._v("#")]),t._v(" 原型上添加属性方法和重写原型")]),t._v(" "),s("p",[s("strong",[t._v("方法一 原型对象上添加属性和方法")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccbean"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Software Engineer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("开发中，常常见到此种写法。")]),t._v(" "),s("p",[s("strong",[t._v("方法二 重写原型对象")])]),t._v(" "),s("p",[t._v("不推荐使用，一是可能需要手动维护"),s("code",[t._v("constructor")]),t._v("属性的指向；更关键的是会破坏原型链。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccbean"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("job")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Software Engineer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" friend "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("friend "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("friend "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("friend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" Person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("friend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[t._v("这种写法减少代码冗余，也从视觉上更好地封装原型功能。")]),t._v(" "),s("p",[s("code",[t._v("Person.prototype")]),t._v("被设置为一个新的对象。但是，这个新原型对象中的"),s("code",[t._v("constructor")]),t._v("属性不再指向"),s("code",[t._v("Person")]),t._v("。在创建函数时，也会创建"),s("code",[t._v("prototype")]),t._v("属性指向原型对象，同时给原型对象自动添加"),s("code",[t._v("constructor")]),t._v("属性，指向构造函数。这种写法重写了原型对象，此时，"),s("code",[t._v("constructor")]),t._v("属性指向了Object构造函数。")]),t._v(" "),s("p",[t._v("此时通过操作符"),s("code",[t._v("instanceof")]),t._v("仍然可以正确返回结果，因为实例对象和原型之间关系不受影响。但"),s("strong",[t._v("切断了最初原型和构造函数之间的关系")]),t._v("，详见下面分析。")]),t._v(" "),s("p",[t._v("解决办法：新重写的原型上手动修改"),s("code",[t._v("constructor")]),t._v("属性，指向原构造函数。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 手动添加关联")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccbean"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("job")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Software Engineer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上述存在一个问题，添加的"),s("code",[t._v("constructor")]),t._v("属性是可枚举的，可以通过"),s("code",[t._v("Object.defineProperty")]),t._v("来定义此属性：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccbean"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("job")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Software Engineer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 恢复constructor 属性")]),t._v("\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"constructor"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("enumerable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Person\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("重写原型对象的另一个问题，"),s("strong",[t._v("切断了最初原型和构造函数之间的联系")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" friend1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccbean"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("job")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Software Engineer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfriend1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" friend2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfriend2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确")]),t._v("\n")])])]),s("p",[t._v("重写构造函数上的原型之后再创建的实例才会引用新的原型。而在此之前创建的实例仍然会引用最初的原型。")]),t._v(" "),s("p",[s("code",[t._v("friend1")]),t._v("实例是在重写原型之前实例化的，所以"),s("code",[t._v("friend1")]),t._v("实例的"),s("code",[t._v("[[Prototype]]")]),t._v("原型对象指向的还是原来的原型，而不是新的原型。")]),t._v(" "),s("p",[s("code",[t._v("friend2")]),t._v("实例是在重写原型之后实例化的，所以"),s("code",[t._v("friend2")]),t._v("实例的"),s("code",[t._v("[[Prototype]]")]),t._v("原型对象指向的是新的原型，所以有"),s("code",[t._v("sayName()")]),t._v("方法。")]),t._v(" "),s("h3",{attrs:{id:"什么是原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是原型链"}},[t._v("#")]),t._v(" 什么是原型链")]),t._v(" "),s("p",[t._v("原型链是EcmaScript的主要继承方式。基本思想就是通过原型继承多个引用类型的属性和方法。")]),t._v(" "),s("p",[t._v("构造函数、原型和实例是三个完全不同的对象，它们之间的关系是，每个构造函数都有一个属性"),s("code",[t._v("prototype")]),t._v("指向原型，原型上有一个属性"),s("code",[t._v("constructor")]),t._v("指回构造函数，而实例内部有一个指针"),s("code",[t._v("[[Prototype]]")]),t._v("指回原型。")]),t._v(" "),s("p",[t._v("原型链的基本思想是：一个构造函数的原型是另一个引用类型的实例，那么原型内部也就有内部指针"),s("code",[t._v("[[Prototype]]")]),t._v("指向另一个原型。另一个原型也有一个指针"),s("code",[t._v("constructor")]),t._v("指向另一个构造函数。这样就形成了实例和另一个原型之间构造了一条原型链。")]),t._v(" "),s("p",[t._v("在读取实例上的属性时，首先会在实例对象上搜索，如果没有找到，就会搜索实例的原型，通过原型链，搜索就可以继续向上，搜索原型的原型，搜索会一直持续到原型链末端（Object的原型），直至找到属性。一旦找到，就会立即停止，不再搜索未搜索的原型链部分，这也就有了遮蔽特性。")]),t._v(" "),s("p",[t._v("默认情况下所有对象都继承自Object，这也是通过原型链实现的。任何函数的默认原型都是一个Object实例，也就是说这个Object实例中也有一个指针"),s("code",[t._v("[[Prototype]]")]),t._v("指向Object的原型"),s("code",[t._v("Object.prototype")]),t._v("。")]),t._v(" "),s("p",[t._v("代码理解：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'parent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getParentValue")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sonValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'son'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getSonValue")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sonValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sonInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sonInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getParentValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// parent")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sonInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSonValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// son")]),t._v("\n")])])]),s("p",[t._v("上面代码就是通过原型链实现继承，关键在于"),s("code",[t._v("Son")]),t._v("没有使用默认原型，而是将其替换成一个新的对象。这个新的对象正好是"),s("code",[t._v("Parent")]),t._v("的实例。这样，"),s("code",[t._v("Son")]),t._v("就实现了能从"),s("code",[t._v("Parent")]),t._v("的实例中继承属性和方法，同时能够与"),s("code",[t._v("Parent")]),t._v("的原型产生联系。")]),t._v(" "),s("p",[t._v("最终，"),s("code",[t._v("sonInstance")]),t._v("实例能通过"),s("code",[t._v("[[Prototype]]")]),t._v("指针找到"),s("code",[t._v("Son.prototype")]),t._v("，而"),s("code",[t._v("Son.prototype")]),t._v("又指向"),s("code",[t._v("Parent")]),t._v("实例。Parent实例的"),s("code",[t._v("[[Prototype]]")]),t._v("指针又指向"),s("code",[t._v("Parent")]),t._v("的原型"),s("code",[t._v("Parent.prototype")]),t._v("。")]),t._v(" "),s("p",[t._v("需要注意的是：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Son.prototype")]),t._v("是"),s("code",[t._v("Parent")]),t._v("的实例，而"),s("code",[t._v("parentValue")]),t._v("是Parent的实例属性，因此"),s("code",[t._v("parentValue")]),t._v("在它上面。而"),s("code",[t._v("getParentValue()")]),t._v("是一个原型方法，在"),s("code",[t._v("Parent")]),t._v("的上")]),t._v(" "),s("li",[s("code",[t._v("Son.prototype.constructor")]),t._v("指向"),s("code",[t._v("Parent")]),t._v("构造函数。因为"),s("code",[t._v("Son.prototype")]),t._v("被重写后，新原型中没有"),s("code",[t._v("constructor")]),t._v("属性；根据原型链查找，Son的原型是Parent实例，其中的"),s("code",[t._v("[[Prototype]]")]),t._v("指针，指向了Parent的原型"),s("code",[t._v("Parent.prototype")]),t._v("，而"),s("code",[t._v("Parent.prototype")]),t._v("对象中的"),s("code",[t._v("constructor")]),t._v("属性指向Parent构造函数。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ccbeango/blogImages@master/JavaScript/%E7%BA%A2%E7%9A%AE%E4%B9%A6-%E5%8E%9F%E5%9E%8B%E9%93%BE.drawio.svg",alt:"红皮书-原型链"}})]),t._v(" "),s("h3",{attrs:{id:"js中实现继承的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js中实现继承的方法"}},[t._v("#")]),t._v(" JS中实现继承的方法")]),t._v(" "),s("p",[s("strong",[t._v("方法1")]),t._v(" 原型链继承")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sonValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'son'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例化Son无法给Parent传参")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" instance1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" instance2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ninstance1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'black'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实力属性成为另一个对象的原型属性，出现了共享")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "red,blue,green,black"')]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "red,blue,green,black"')]),t._v("\n")])])]),s("p",[t._v("原型链继承的问题：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("一个实例作为另一个构造函数的原型，那么这个实例上的属性会变成另一个对象的原型上的属性。")])]),t._v(" "),s("li",[s("p",[t._v("子类型实例化时无法给父类型的构造函数传参。")])])]),t._v(" "),s("p",[t._v("所以原型链继承一般不会单独使用。")]),t._v(" "),s("p",[s("strong",[t._v("方法二")]),t._v(" 盗用构造函数")]),t._v(" "),s("p",[t._v("在子类构造函数中，调用父类构造函数。")]),t._v(" "),s("p",[t._v("因为函数就是在特定上下文中执行代码的简单对象，所以可以利用"),s("code",[t._v("apply()")]),t._v("或"),s("code",[t._v("call()")]),t._v("方法以新创建的对象为上下文执行构造函数。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" instance1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" instance2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ninstance1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"black"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "red,blue,green,black"')]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "red,blue,green"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子类不能访问父类原型上定义方法")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sayName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),s("p",[t._v("优点是：可以在子类构造函数中，向父类构造函数传参")]),t._v(" "),s("p",[t._v("缺点是：")]),t._v(" "),s("ul",[s("li",[t._v("不同实例上的方法同名但不相等，也就是相同逻辑的方法重复定义。（与构造函数模式有相同的问题）")]),t._v(" "),s("li",[t._v("子类不能访问父类原型上定义方法。因为子类的原型还是指向自己原生的对象原型。")])]),t._v(" "),s("p",[s("strong",[t._v("方法三")]),t._v(" 组合继承")]),t._v(" "),s("p",[t._v("综合原型链和盗用构造函数。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先继承")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二次调用父构造函数 实例化时（new Son()）执行到此处")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一次调用父构造函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayAge")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" instance1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jack"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ninstance1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"black"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "red,blue,green,black"')]),t._v("\ninstance1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "jack";')]),t._v("\ninstance1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayAge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 29")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" instance2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tom"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "red,blue,green"')]),t._v("\ninstance2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "tom";')]),t._v("\ninstance2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayAge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 27")]),t._v("\n")])])]),s("p",[t._v("组合继承弥补了原型链和盗用构造函数的不足，是JavaScript 中使用最多的继承模式。而且组合继承也保留了"),s("code",[t._v("instanceof")]),t._v("操作符和"),s("code",[t._v("isPrototypeOf()")]),t._v("方法识别合成对象的能力。")]),t._v(" "),s("p",[t._v("不过，上面的代码，父构造函数始终会被调用两次。")]),t._v(" "),s("ul",[s("li",[t._v("第一次是重写"),s("code",[t._v("Son")]),t._v("的原型时，会将Parent的实例属性"),s("code",[t._v("name")]),t._v("、"),s("code",[t._v("colors")]),t._v("作为Son的原型属性")]),t._v(" "),s("li",[t._v("第二次是Son在实例化时，这时也会在新创建的实例对象上添加属性"),s("code",[t._v("name")]),t._v("、"),s("code",[t._v("colors")]),t._v("，遮蔽原型上的同名属性。")])]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("存在效率问题，父构造函数始终会被调用两次。")])]),t._v(" "),s("li",[s("p",[t._v("使用父类构造函数的实例作为子类的原型。")]),t._v(" "),s("ul",[s("li",[t._v("导致父类构造函数中的实例属性作为子类的原型属性。")]),t._v(" "),s("li",[t._v("子类实例化时实例对象上会再创建同名属性遮蔽它。")])])])]),t._v(" "),s("p",[s("strong",[t._v("方法四")]),t._v(" 原型式继承")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("Object.create()")]),t._v("方法实现继承，这个方法的作用就是创建新对象，并指定其原型为传入对象。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Nicholas"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("friends")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Shelby"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Court"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Van"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" anotherPerson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Greg"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nanotherPerson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("friends"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Rob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Matt")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("anotherPerson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("anotherPerson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Greg")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" yetAnotherPerson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nyetAnotherPerson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Linda"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nyetAnotherPerson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("friends"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Barbie"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("friends"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Shelby,Court,Van,Rob,Barbie"')]),t._v("\n")])])]),s("p",[t._v("适用的场景是主要关注实例对象，不需要单独创建构造函数，就可以通过原型实现继承。")]),t._v(" "),s("p",[s("strong",[t._v("方法五")]),t._v(" 寄生式继承")]),t._v(" "),s("p",[t._v("创建一个实现继承的函数，以某种方式增强对象，然后返回这个对象。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createPerson")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("original")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" clone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("original"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过调用函数创建一个新对象")]),t._v("\n  clone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayHi")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以某种方式增强这个对象")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" clone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回这个对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccbean"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("friends")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Shelby"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Court"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Van"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" anotherPerson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createPerson")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nanotherPerson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "hi"')]),t._v("\n")])])]),s("p",[t._v("类似于原型式继承，只是做了继承部分的封装。")]),t._v(" "),s("p",[t._v("同样适用的场景是主要关注实例对象，而不在乎类型和构造函数的场景。")]),t._v(" "),s("p",[t._v("缺点：通过寄生式继承给对象添加函数会导致函数难以重用，与构造函数模式类似。")]),t._v(" "),s("p",[s("strong",[t._v("方法六")]),t._v(" 寄生式组合继承")]),t._v(" "),s("p",[s("strong",[t._v("此方法是引用类型继承的最佳模式")])]),t._v(" "),s("p",[t._v("使用父类原型的副本作为子类原型，再通过盗用构造函数继承实例属性，")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父构造函数只调用一次")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayAge")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" instance1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jack"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ninstance1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"black"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "red,blue,green,black"')]),t._v("\ninstance1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "jack";')]),t._v("\ninstance1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayAge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 29")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" instance2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tom"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("colors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "red,blue,green"')]),t._v("\ninstance2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "tom";')]),t._v("\ninstance2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayAge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 27")]),t._v("\n")])])]),s("p",[t._v("优点：父构造函数只调用一次，这样可以避免将父类构造函数中的实例属性作为子类的原型属性。")]),t._v(" "),s("h3",{attrs:{id:"组合继承和寄生式组合继承的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组合继承和寄生式组合继承的区别"}},[t._v("#")]),t._v(" 组合继承和寄生式组合继承的区别")]),t._v(" "),s("p",[t._v("区别在于子类原型的不同：")]),t._v(" "),s("ul",[s("li",[t._v("组合继承使用父类构造函数的实例作为子类的原型。")]),t._v(" "),s("li",[t._v("寄生式组合继承使用父类原型的副本实例作为子类的原型。")])]),t._v(" "),s("p",[t._v("这样可以避免组合继承的问题：将父类构造函数中的实例属性作为子类的原型属性；")]),t._v(" "),s("p",[t._v("两者都会结合盗用构造函数，将父类构造函数中的实例属性，复制到子类的实例属性中。")]),t._v(" "),s("p",[t._v("总结：差别只在子类原型赋值的时候：一个使用父类构造函数的实例；另一个使用父类原型的副本实例。")]),t._v(" "),s("h2",{attrs:{id:"class类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class类"}},[t._v("#")]),t._v(" class类")]),t._v(" "),s("h3",{attrs:{id:"class的本质是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class的本质是什么"}},[t._v("#")]),t._v(" class的本质是什么")]),t._v(" "),s("p",[t._v("ES6 的类都仅仅是封装了ES5构造函数和原型继承的语法糖而已。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类声明")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类表达式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Animal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("类表达式的类名称是可选的。在把类表达式赋值给变量后，可以通过name 属性取得类表达式的名称字符串。但不能在类表达式作用域外部访问这个标识符。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" Person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PersonName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("identify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PersonName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("identify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PersonName PersonName")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PersonName")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不能在类的外部访问到")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PersonName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: PersonName is not defined")]),t._v("\n")])])]),s("h3",{attrs:{id:"类和函数构造函数的相同点和不同点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类和函数构造函数的相同点和不同点"}},[t._v("#")]),t._v(" 类和函数构造函数的相同点和不同点")]),t._v(" "),s("p",[t._v("类和函数构造函数一样，本质上也是函数，只是一个特殊函数。所以有以下相同特点：")]),t._v(" "),s("ul",[s("li",[t._v("声明一个类，"),s("code",[t._v("typeof")]),t._v("操作符会返回"),s("code",[t._v('"function"')])]),t._v(" "),s("li",[t._v("类中也有标识符"),s("code",[t._v("prototype")]),t._v("，指向它的原型。而原型对象上也有"),s("code",[t._v("constructor")]),t._v("属性指向类本身。")]),t._v(" "),s("li",[t._v("和函数构造函数相同，可以用"),s("code",[t._v("instanceof")]),t._v("检测实例的原型链中是否包含构造函数的原型。")]),t._v(" "),s("li",[t._v("类可以作为参数传递和返回")]),t._v(" "),s("li",[t._v("类也可以被立即调用，和"),s("code",[t._v("IIFE")]),t._v("同理。")]),t._v(" "),s("li",[t._v("类中定义的方法（普通方法、getter、setter），会被添加为类的原型"),s("code",[t._v("prototype")]),t._v("上。即类中定义的方法会当做类的原型方法。")]),t._v(" "),s("li",[t._v("类上的静态方法，会直接添加到类的对象上，即类是特殊函数，本身也是一个对象。")]),t._v(" "),s("li",[t._v("构造函数内部定义的属性和方法，会作为类的实例方法")])]),t._v(" "),s("p",[t._v("不同的是：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("函数定义存在提升；类定义不存在提升；")])]),t._v(" "),s("li",[s("p",[t._v("函数是函数作用域的；类是块作用域的；")])]),t._v(" "),s("li",[s("p",[t._v("类构造函数必须使用"),s("code",[t._v("new")]),t._v("操作符，否则报错。函数构造函数如果不使用"),s("code",[t._v("new")]),t._v("调用，"),s("code",[t._v("this")]),t._v("就会指向全局上下文。")])]),t._v(" "),s("li",[s("p",[t._v("默认情况下，类中的代码都是在严格模式下执行的；函数是非严格模式下的；")])])]),t._v(" "),s("h3",{attrs:{id:"类中的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类中的方法"}},[t._v("#")]),t._v(" 类中的方法")]),t._v(" "),s("p",[t._v("类中的方法都不是必须的，可以有的方法有：")]),t._v(" "),s("ul",[s("li",[t._v("构造函数方法")]),t._v(" "),s("li",[t._v("实例方法")]),t._v(" "),s("li",[s("code",[t._v("setter")]),t._v("方法")]),t._v(" "),s("li",[s("code",[t._v("getter")]),t._v("方法")]),t._v(" "),s("li",[t._v("静态方法")])]),t._v(" "),s("p",[t._v("实例方法和静态方法支持迭代器和生成器方法。")]),t._v(" "),s("h4",{attrs:{id:"构造函数方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造函数方法"}},[t._v("#")]),t._v(" 构造函数方法")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("constructor")]),t._v("用于在类中定义构造函数。")])]),t._v(" "),s("li",[s("p",[t._v("方法名"),s("code",[t._v("constructor")]),t._v("会告诉解释器在使用"),s("code",[t._v("new")]),t._v("操作符创建类的新实例时，应该调用这个函数。")])]),t._v(" "),s("li",[s("p",[t._v("构造函数不定义时，相当于默认将构造函数定义为空函数。")])]),t._v(" "),s("li",[s("p",[t._v("构造函数实例化流程，和函数构造函数相同。")])]),t._v(" "),s("li",[s("p",[t._v("类构造函数"),s("code",[t._v("constructor")]),t._v("没有特别之处，只是在"),s("code",[t._v("new")]),t._v("实例化时，默认调用的方法。所以实例化后，仍然可以在实例上调用此方法。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用类创建一个新实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError: Class constructor Person cannot be invoked without 'new'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用对类构造函数的引用创建一个新实例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("p1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h4",{attrs:{id:"实例、原型和类成员"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例、原型和类成员"}},[t._v("#")]),t._v(" 实例、原型和类成员")]),t._v(" "),s("p",[s("strong",[t._v("实例成员")])]),t._v(" "),s("ul",[s("li",[t._v("类构造函数"),s("code",[t._v("constructor")]),t._v("内部，可以给类的实例添加实例属性；创建实例后，可以继续给实例添加属性；就相当于在函数构造函数中添加给"),s("code",[t._v("this")]),t._v("的属性。")])]),t._v(" "),s("p",[s("strong",[t._v("原型方法")])]),t._v(" "),s("ul",[s("li",[t._v("类中定义的普通方法、getter、setter会添加到类的原型上，即被当做类的原型方法。")]),t._v(" "),s("li",[t._v("类块中不能定义原始值或对象")]),t._v(" "),s("li",[t._v("类中的方法名等同于对象属性，能使用：字符串、Symbol、计算的值")])]),t._v(" "),s("h3",{attrs:{id:"静态方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[t._v("#")]),t._v(" 静态方法")]),t._v(" "),s("ul",[s("li",[t._v("类上的静态方法，会直接添加到类的对象上，即类是特殊函数，本身也是一个对象。也就是说可以通过"),s("code",[t._v("static")]),t._v("在类上添加属性和方法。")])]),t._v(" "),s("h3",{attrs:{id:"class类的继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class类的继承"}},[t._v("#")]),t._v(" class类的继承")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("使用"),s("code",[t._v("extends")]),t._v("关键字实现继承")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("super")]),t._v("关键字可以引用父类的原型。仅限于子类中使用，而且仅仅限于类构造函数、实例方法、静态方法三种方法的内部。")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("super")]),t._v(" 只能在子类构造函数、实例方法和静态方法中使用。")])]),t._v(" "),s("li",[s("p",[t._v("子类中使用"),s("code",[t._v("super()")]),t._v("可以调用父类构造函数。"),s("code",[t._v("super()")]),t._v("相当于"),s("code",[t._v("super.constructor()")]),t._v("的简写。")])]),t._v(" "),s("li",[s("p",[t._v("不能单独引用"),s("code",[t._v("super")]),t._v("关键字，要么用它调用构造函数、静态方法或实例方法")])]),t._v(" "),s("li",[s("p",[t._v("调用"),s("code",[t._v("super()")]),t._v("会调用父类构造函数，并将返回的实例赋值给"),s("code",[t._v("this")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("super()")]),t._v("的行为如同调用构造函数，可以通过它给父类构造函数传参")])]),t._v(" "),s("li",[s("p",[t._v("如果子类没有定义构造函数，在实例化子类时，会自动调用"),s("code",[t._v("super()")]),t._v("，而且会传入所有传给子类的参数给父类构造函数。")])]),t._v(" "),s("li",[s("p",[t._v("在类构造函数中，不能在调用"),s("code",[t._v("super()")]),t._v("之前引用"),s("code",[t._v("this")])])]),t._v(" "),s("li",[s("p",[t._v("子类中显式定义了构造函数，那么必须调用super()；或者返回一个对象，很少这样用")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("new.target")]),t._v("是一个指针，指向通过"),s("code",[t._v("new")]),t._v("关键字调用的类或函数。")])])]),t._v(" "),s("h2",{attrs:{id:"第九章-代理与反射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第九章-代理与反射"}},[t._v("#")]),t._v(" 第九章 代理与反射")]),t._v(" "),s("h3",{attrs:{id:"什么是代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是代理"}},[t._v("#")]),t._v(" 什么是代理")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("代理是目标对象的抽象。代理用作目标对象的替身，完全独立于目标对象。目标对象既可以独立操作，也可以通过代理操作。")])]),t._v(" "),s("li",[s("p",[t._v("创建代理使用"),s("code",[t._v("Proxy")]),t._v("构造函数。这个构造函数接收两个参数：目标对象和处理程序对象。")]),t._v(" "),s("ul",[s("li",[t._v("处理程序对象中不添加任何捕获器可创建空代理，所有操作都会无障碍传播到目标对象，什么额外的操作也不做。")])])]),t._v(" "),s("li",[s("p",[t._v("代理对象上执行的任何操作都会应用到目标对象；唯一可感知的不同就是代码中操作的是代理对象，但"),s("strong",[t._v("本质上是通过代理对象作用到了目标对象")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'target'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" handler "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// id 属性会访问同一个值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 本质上proxy.id访问到了target.id")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// target")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// target")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给目标属性赋值会反映在两个对象上")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为两个对象访问的是同一个值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 本质上proxy.id访问到了target.id")]),t._v("\ntarget"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给代理属性赋值会反映在两个对象上")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为这个赋值会转移到目标对象")]),t._v("\nproxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bar")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bar")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hasOwnProperty()方法在的两个地方（分别target和proxy的原型链上，本质都在Object的原型上）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 都会应用到目标对象")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因此不能使用instanceof 操作符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 严格相等可以用来区分代理和目标")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("代理的主要目的是可以定义捕获器。捕获器是在处理程序对象中定义的JavaScript对象的基本操作拦截器。处理程序对象中可以定义一个或多个捕获器，每个捕获器都有对应的一种基本操作，可以直接或间接在代理程序上调用。在代理对象上调用这些基本的操作时，代理可以在这些操作传播到目标对象之前先调用捕获器函数，从而拦截并修改相应的行为。")])]),t._v(" "),s("li",[s("p",[t._v("每个捕获器都有相应的参数，基于这些参数可以重建被捕获方法的原始行为。所有捕获器都可以基于参数重建被捕获方法的原始行为，但是并不是所有的捕获方法都很简单，手动重建原始行为是不现实的。这就用到了反射。")])]),t._v(" "),s("li",[s("p",[t._v("开发者并不需要手动重建原始行为，Reflect对象上封装了原始行为，可以通过调用Reflect对象上的同名方法来轻松重建原始行为。")])]),t._v(" "),s("li",[s("p",[t._v("Reflect对象上有与Proxy对象上同名的反射方法。这些方法与Proxy对象上的方法具有相同的名称和函数签名，而且具有同"),s("strong",[t._v("被拦截方法")]),t._v("相同的行为。")])]),t._v(" "),s("li",[s("p",[t._v("使用捕获器几乎可以改变所有基本方法的行为，但必须遵循"),s("strong",[t._v("捕获器不变式")]),t._v("（trap invariant）。捕获器不变式因方法不同而异，但"),s("strong",[t._v("通常都会防止捕获器定义出现过于反常的行为")]),t._v("。如下面代码定义"),s("code",[t._v("foo")]),t._v("属性不可配置不可读，但是捕获器返回"),s("code",[t._v("qux")]),t._v("，行为反常，会报错；")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("configurable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("writable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" handler "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'qux'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("Reflect上的静态方法"),s("code",[t._v("Reflect.revocable()")]),t._v("方法支持撤销代理对象与目标对象的关联。撤销代理的操作是不可逆的。而且，撤销函数"),s("code",[t._v("revoke()")]),t._v("是幂等的，调用多少次的结果都一样。撤销代理之后再调用代理会抛出TypeError。")]),t._v(" "),s("p",[t._v("撤销函数和代理对象是在实例化时同时生成的")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" handler "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'intercepted'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" revoke "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("revocable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// intercepted")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bar")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("revoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("支持多层代理，也就是说给代理设置代理。这样就可以在一个目标对象之上构建多层拦截网。")])])]),t._v(" "),s("h3",{attrs:{id:"什么是反射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是反射"}},[t._v("#")]),t._v(" 什么是反射")]),t._v(" "),s("ul",[s("li",[t._v("每个捕获器都有相应的参数，基于这些参数可以重建被捕获方法的原始行为。所有捕获器都可以基于参数重建被捕获方法的原始行为，但是并不是所有的捕获方法都很简单，手动重建原始行为是不现实的。")]),t._v(" "),s("li",[t._v("开发者并不需要手动重建原始行为，Reflect对象上封装了原始行为，可以通过调用Reflect对象上的同名方法来轻松重建原始行为。")]),t._v(" "),s("li",[t._v("Reflect对象上有与Proxy对象上同名的反射方法。这些方法与Proxy对象上的方法具有相同的名称和函数签名，而且具有同"),s("strong",[t._v("被拦截方法")]),t._v("相同的行为。也就是说，不管Proxy怎么修改目标对象默认行为，你总可以在Reflect上获取默认行为。")]),t._v(" "),s("li",[s("strong",[t._v("但是反射API并不限于捕获处理程序；大多数反射API 方法在Object 类型上有对应的方法。")])])]),t._v(" "),s("p",[t._v("反射方法与对象上的方法有些行为上是不同的：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("修改某些Object方法的返回结果，让其变得更合理。有些反射方法返回称作"),s("strong",[t._v("状态标记")]),t._v("的布尔值，表示意图执行的操作是否成功。而Object在无法定义属性时，会抛出一个错误。")]),t._v(" "),s("ul",[s("li",[t._v("如在定义新属性时如果发生问题，"),s("code",[t._v("Reflect.defineProperty()")]),t._v("会返回false，而不是向"),s("code",[t._v("Object.defineProperty()")]),t._v("抛出错误。")]),t._v(" "),s("li",[t._v("下面的方法都会返回状态标记：\n"),s("ul",[s("li",[s("code",[t._v("Reflect.defineProperty()")])]),t._v(" "),s("li",[s("code",[t._v("Reflect.preventExtensions()")])]),t._v(" "),s("li",[s("code",[t._v("Reflect.setPrototypeOf()")])]),t._v(" "),s("li",[s("code",[t._v("Reflect.set()")])]),t._v(" "),s("li",[s("code",[t._v("Reflect.deleteProperty()")])])])])])]),t._v(" "),s("li",[s("p",[t._v("用函数行为替代操作符。")]),t._v(" "),s("ul",[s("li",[t._v("某些Object操作是命令式，比如"),s("code",[t._v("in")]),t._v("和"),s("code",[t._v("delete")]),t._v("操作符，而"),s("code",[t._v("Reflect.has()")]),t._v("和"),s("code",[t._v("Reflect.deleteProperty()")]),t._v("让它们变成了函数行为。")]),t._v(" "),s("li",[t._v("下面的方法可替代操作符\n"),s("ul",[s("li",[s("code",[t._v("Reflect.get()")]),t._v("：可以替代对象属性访问操作符。")]),t._v(" "),s("li",[s("code",[t._v("Reflect.set()")]),t._v("：可以替代"),s("code",[t._v("=")]),t._v("赋值操作符。")]),t._v(" "),s("li",[s("code",[t._v("Reflect.has()")]),t._v("：可以替代"),s("code",[t._v("in")]),t._v("操作符或"),s("code",[t._v("with()")])]),t._v(" "),s("li",[s("code",[t._v("Reflect.deleteProperty()")]),t._v("：可以替代"),s("code",[t._v("delete")]),t._v("操作符。")]),t._v(" "),s("li",[s("code",[t._v("Reflect.construct()")]),t._v("：可以替代"),s("code",[t._v("new")]),t._v("操作符。")])])])])]),t._v(" "),s("li",[s("p",[t._v("安全地应用函数。")]),t._v(" "),s("ul",[s("li",[t._v("在通过"),s("code",[t._v("apply")]),t._v(" 方法调用函数时，被调用的函数可能也定义了自己的apply属性，虽然可能性极小。为避免此问题，可以用定义在Function 原型上的apply 方法。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myFunc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thisVal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" argumentList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("这种可怕的代码完全可以使用Reflect.apply 来避免：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Reflect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myFunc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thisVal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" argumentsList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"代理的一些编程模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代理的一些编程模式"}},[t._v("#")]),t._v(" 代理的一些编程模式")]),t._v(" "),s("h4",{attrs:{id:"跟踪访问属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跟踪访问属性"}},[t._v("#")]),t._v(" 跟踪访问属性")]),t._v(" "),s("p",[t._v("通过捕获get、set 和has 等操作，可以知道对象属性什么时候被访问、被查询。把实现相应捕获器的某个对象代理放到应用中，可以监控这个对象何时在何处被访问过。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jake'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Getting ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("property"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Setting ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("property"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nproxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Getting name")]),t._v("\nproxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Setting age=27")]),t._v("\n")])])]),s("h4",{attrs:{id:"隐藏属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐藏属性"}},[t._v("#")]),t._v(" 隐藏属性")]),t._v(" "),s("p",[t._v("访问某些属性时，返回"),s("code",[t._v("undefind")]),t._v("或"),s("code",[t._v("false")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hiddenProperties "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" targetObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("bar")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("baz")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("targetObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hiddenProperties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hiddenProperties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get()")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baz"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// has()")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'baz'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("h4",{attrs:{id:"隐藏属性-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐藏属性-2"}},[t._v("#")]),t._v(" 隐藏属性")]),t._v(" "),s("p",[t._v("因为所有赋值操作都会触发set()捕获器，所以可以根据所赋的值决定是允许还是拒绝赋值。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("onlyNumbersGoHere")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nproxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onlyNumbersGoHere "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onlyNumbersGoHere"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nproxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onlyNumbersGoHere "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onlyNumbersGoHere"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),s("h4",{attrs:{id:"函数与构造函数参数验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数与构造函数参数验证"}},[t._v("#")]),t._v(" 函数与构造函数参数验证")]),t._v(" "),s("p",[t._v("跟保护和验证对象属性类似，也可对函数和构造函数参数进行审查。比如，可以让函数只接收某种类型的值：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("median")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("nums")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数参数验证")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("median"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thisArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" argumentsList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arg "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" argumentsList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" arg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Non-number argument provided'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Reflect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'7'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error: Non-number argument provided")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造函数参数验证")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("construct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" argumentsList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newTarget")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argumentsList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'User cannot be instantiated without id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("construct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Error: User cannot be instantiated without id")]),t._v("\n")])])]),s("h4",{attrs:{id:"数据绑定与可观察对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据绑定与可观察对象"}},[t._v("#")]),t._v(" 数据绑定与可观察对象")]),t._v(" "),s("p",[t._v("通过代理可以把运行时中原本不相关的部分联系到一起。这样就可以实现各种模式，从而让不同的代码互操作。")]),t._v(" "),s("p",[t._v("比如，可以将被代理的类绑定到一个全局实例集合，让所有创建的实例都被添加到这个集合中：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" userList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("construct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newUser "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("construct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    userList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newUser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" newUser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'John'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jacob'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jingleheimerschmidt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [User {}, User {}, User{}]")]),t._v("\n")])])]),s("p",[t._v("还可以把集合绑定到一个事件分派程序，每次插入新实例时都会发送消息：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" userList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("newValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nproxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'John'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// John")]),t._v("\nproxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jacob'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Jacob")]),t._v("\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"说一说代理和反射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说一说代理和反射"}},[t._v("#")]),t._v(" 说一说代理和反射")]),t._v(" "),s("p",[t._v("代理是目标对象的抽象层。代理用作目标对象的替身，完全独立于目标对象。目标对象既可以独立操作，也可以通过代理操作。")]),t._v(" "),s("p",[t._v("代理的主要目的是可以定义包含捕获器的处理程序对象，这些捕获器可以拦截大部分JavaScript的基本操作和方法。在这些捕获器程序中，在遵循"),s("strong",[t._v("捕获器不变式")]),t._v("的前提下，可以修改任何操作的行为。")]),t._v(" "),s("p",[t._v("反射是一套封装了与捕获器拦截操作相对应的方法。可以把反射API看做是一套基本操作，这些操作是大部分JavaScript对象API的基础。")]),t._v(" "),s("p",[t._v("可以使用代理来创建各种编码模式，如：跟踪属性访问、隐藏属性、阻止修改或删除属性、函数参数验证、构造函数参数验证、数据绑定、观察对象等。")]),t._v(" "),s("h2",{attrs:{id:"第十章-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第十章-函数"}},[t._v("#")]),t._v(" 第十章 函数")]),t._v(" "),s("h3",{attrs:{id:"函数的本质是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的本质是什么"}},[t._v("#")]),t._v(" 函数的本质是什么")]),t._v(" "),s("p",[t._v("函数实际上是一个对象，是"),s("code",[t._v("Function")]),t._v("类型的实例，"),s("code",[t._v("Function")]),t._v("也有属性和方法，和其它引用类型一样。")]),t._v(" "),s("p",[t._v("因为函数是对象，所以函数名其实是指向函数对象的指针，而且不一定与函数本身紧密绑定。")]),t._v(" "),s("h3",{attrs:{id:"定义函数有哪些方法-这些方法有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义函数有哪些方法-这些方法有什么区别"}},[t._v("#")]),t._v(" 定义函数有哪些方法？这些方法有什么区别")]),t._v(" "),s("p",[t._v("定义函数有4种方法： 函数声明、函数表达式（匿名函数）、箭头函数、使用"),s("code",[t._v("Function")]),t._v("构造函数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数声明")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数表达式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 箭头函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Funtion构造函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"return num1 + num2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不推荐")]),t._v("\n")])])]),s("p",[t._v("平常开发中，不推荐使用Funtion构造函数来定义函数，因为这段代码会被解释两次：第一次是将它当作常规ECMAScript 代码；第二次是解释传给构造函数的字符串。这显然会影响性能。不过，"),s("strong",[t._v("把函数想象为对象，把函数名想象为指针是很重要的，这种语法很好地诠释了这些概念")]),t._v("。")]),t._v(" "),s("p",[t._v("（函数表达式看起来就像一个普通的变量定义和赋值，即创建一个函数再把它赋值给一个变量functionName。这样创建的函数叫作匿名函数（anonymous funtion），因为function 关键字后面没有标识符。未赋值给其他变量的匿名函数的name属性是空字符串）")]),t._v(" "),s("p",[t._v("上面4中方法，本质上都是实例化函数对象，也就是创建函数。但是有一些差别：")]),t._v(" "),s("p",[t._v("函数声明和函数表达式区别是，函数声明存在"),s("strong",[t._v("函数声明提升")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("在任何代码执行之前，JavaScript 引擎会先执行一遍扫描，读取函数声明，把发现的函数声明提升到源代码树的顶部，并在执行上下文中生成函数定义，保存到关联的在变量对象中。这个过程叫作"),s("strong",[t._v("函数声明提升")]),t._v("。因此即使函数定义出现在调用它们的代码之后，引擎也会把函数声明提升到顶部。")]),t._v(" "),s("li",[t._v("函数表达式必须等到代码执行到它那一行，才会在函数上下文中生成函数定义。因此必须在使用前声明。")]),t._v(" "),s("li",[t._v("除了函数什么时候真正有定义这个区别之外，这两种语法是等价的。")])]),t._v(" "),s("p",[t._v("函数声明和函数表达式定义的函数都是标准函数。特殊对象是"),s("code",[t._v("this")]),t._v("，它在标准函数和箭头函数中有不同的行为：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在标准函数中，this指向的是把函数当成方法调用的上下文。")]),t._v(" "),s("ul",[s("li",[t._v("函数名只是保存指针的变量。因此全局定义的sayColor()函数和o.sayColor()是同一个函数，只不过执行的上下文不同。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'red'")]),t._v("\no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sayColor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sayColor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'blue'")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("在箭头函数中，this指向的是定义箭头函数的上下文。也就是说，箭头函数中this会保留定义该函数时的上下文。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayColor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'red'")]),t._v("\no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sayColor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sayColor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'red'")]),t._v("\n")])])])])]),t._v(" "),s("p",[t._v("箭头函数：")]),t._v(" "),s("ul",[s("li",[t._v("箭头函数不能使用"),s("code",[t._v("arguments")]),t._v("、"),s("code",[t._v("super")]),t._v("和"),s("code",[t._v("new.target")])]),t._v(" "),s("li",[t._v("箭头函数不能用作构造函数")]),t._v(" "),s("li",[t._v("箭头函数没有"),s("code",[t._v("prototype")]),t._v("属性。")])]),t._v(" "),s("h3",{attrs:{id:"函数名的一些特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数名的一些特点"}},[t._v("#")]),t._v(" 函数名的一些特点")]),t._v(" "),s("p",[t._v("函数名本质上是指向函数对象的指针，所以它和其它包含对象指针的变量行为相同。也就是说，"),s("strong",[t._v("函数名就是一个变量")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("一个函数可以有多个函数名")])]),t._v(" "),s("li",[s("p",[t._v("使用不带括号的函数名会访问函数指针，而不会执行函数。")])]),t._v(" "),s("li",[s("p",[t._v("函数对象上都有一个只读属性"),s("code",[t._v("name")]),t._v("，保存一个"),s("strong",[t._v("函数标识符")]),t._v("即一个字符串化的变量名（函数名）")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("大多数情况下，有函数名，name为函数名；没有函数名，name为空字符串")])]),t._v(" "),s("li",[s("p",[t._v("如果函数是使用"),s("code",[t._v("Function")]),t._v("构造函数创建，name为"),s("code",[t._v("'anonymous'")])])]),t._v(" "),s("li",[s("p",[t._v("如果是访问器属性的"),s("code",[t._v("setter")]),t._v("或"),s("code",[t._v("getter")]),t._v("函数、或使用"),s("code",[t._v("bind()")]),t._v("实例化，那么标识符前会加上前缀"),s("code",[t._v("set")]),t._v("、"),s("code",[t._v("get")]),t._v("、"),s("code",[t._v("bound")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bound foo")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" dog "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("years")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("years"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("newAge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("years "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newAge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" propertyDescriptor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("propertyDescriptor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get age")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("propertyDescriptor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set age")]),t._v("\n")])])])])])])]),t._v(" "),s("h3",{attrs:{id:"函数的参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的参数"}},[t._v("#")]),t._v(" 函数的参数")]),t._v(" "),s("ul",[s("li",[t._v("函数的参数可以是任意类型，定义的参数个数和传入的参数个数也不需要一致")]),t._v(" "),s("li",[t._v("这是因为，函数的参数在内部表现为一个数组。函数被调用时，总会接收一个数组，但函数并不关心这个数组中包含什么。数组是空的或者超出个数要求，都没问题。")]),t._v(" "),s("li",[t._v("在非箭头函数中，"),s("strong",[t._v("函数内部可以通过arguments对象获取传进来的值")]),t._v("。箭头函数中，无法使用"),s("code",[t._v("arguments")]),t._v("访问参数")]),t._v(" "),s("li",[t._v("arguments对象是一个类数组对象，可通过中括号"),s("code",[t._v("[]")]),t._v("语法来访问到其中的元素，即传进来参数的实际值。"),s("code",[t._v("arguments.length")]),t._v("能确定传进来的参数个数。")]),t._v(" "),s("li",[t._v("函数定义时的参数即命名参数，只是为了方便才写出来的，并不是必须要写出来。（在ECMAScript 中的命名参数不会创建让之后的调用必须匹配的函数签名。这是因为根本不存在验证命名参数的机制）")]),t._v(" "),s("li",[s("code",[t._v("arguments")]),t._v("对象可以和命名参数一起使用。")]),t._v(" "),s("li",[t._v("非严格模式下，"),s("code",[t._v("arguments")]),t._v("对象的中元素的值始终与命名参数同步；但它们访问的并不是同一块内存地址，它们的内存是分开的，只不过会保持同步而已。")]),t._v(" "),s("li",[t._v("如果只传了一个参数，然后把"),s("code",[t._v("arguments[1]")]),t._v("设置为某个值，那么这个值并不会反映到第二个命名参数。因为"),s("code",[t._v("arguments")]),t._v(" 对象的长度是根据函数调用时传入的参数个数确定的，而非定义函数时给出的命名参数个数确定的。")]),t._v(" "),s("li",[t._v("函数的命名参数没有传值，默认是undefined。类似于定义了变量而没有初始化")]),t._v(" "),s("li",[t._v("严格模式下\n"),s("ul",[s("li",[t._v("给"),s("code",[t._v("arguments")]),t._v("中的元素赋值，并不会同步到命名参数；")]),t._v(" "),s("li",[t._v("函数中尝试重写arguments对象会导致语法错误，代码不会执行。")])])]),t._v(" "),s("li",[t._v("函数的参数支持扩展和收集。")])]),t._v(" "),s("h3",{attrs:{id:"js中函数有没有重载-为什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js中函数有没有重载-为什么"}},[t._v("#")]),t._v(" JS中函数有没有重载，为什么")]),t._v(" "),s("p",[t._v("没有重载。")]),t._v(" "),s("p",[t._v("其它语言中，一个函数可以有两个定义，只要签名（接收参数的类型和数量）不同就行。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("JS中函数没有签名，因为参数是由包含零个或多个值的数组表示的。")])]),t._v(" "),s("li",[s("p",[t._v("函数没有签名，自然就没有重载。")])]),t._v(" "),s("li",[s("p",[t._v("两个同名函数，后定义的会覆盖先定义的。")])])]),t._v(" "),s("p",[t._v("把函数名当成指针也能理解为什么没有重载")]),t._v(" "),s("ul",[s("li",[t._v("函数名只是一个指向函数对象的指针，函数名和其它包含指向其它对象类型指针的变量名没什么区别")]),t._v(" "),s("li",[t._v("所以，定义两个同名函数时，就会导致后定义的重写先定义的")])]),t._v(" "),s("h3",{attrs:{id:"函数的默认参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的默认参数"}},[t._v("#")]),t._v(" 函数的默认参数")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在使用默认参数时，"),s("code",[t._v("arguments")]),t._v("对象的值不反映参数的默认值，只反映传给函数的参数。跟ES5严格模式一样，修改命名参数也不会影响arguments 对象，它始终以调用函数时传入的值为准。")])]),t._v(" "),s("li",[s("p",[t._v("默认参数值并不限于原始值或对象类型，也可以使用调用函数返回的值。当默认参数使用调用函数返回的值，函数的默认参数只有在函数被调用时才会求值，不会在函数定义时求值。而且，计算默认值的函数只有在调用函数但未传相应参数时才会被调用。")])]),t._v(" "),s("li",[s("p",[t._v("给多个参数定义默认值实际上跟使用let 关键字顺序声明变量一样。")])]),t._v(" "),s("li",[s("p",[t._v("因为参数是按顺序初始化的，所以后定义默认值的参数可以引用先定义的参数。")])]),t._v(" "),s("li",[s("p",[t._v("参数初始化顺序遵循“暂时性死区”规则，即前面定义的参数不能引用后面定义的。")])]),t._v(" "),s("li",[s("p",[t._v("参数存在于自己的作用域中，它们不能引用函数体的作用域。")])])]),t._v(" "),s("h3",{attrs:{id:"函数可以作为值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数可以作为值"}},[t._v("#")]),t._v(" 函数可以作为值")]),t._v(" "),s("p",[t._v("函数名就是一个变量，所以函数可以作为另一个函数的参数，也可以作为一个函数的返回值。")]),t._v(" "),s("p",[t._v("任何时候，只要函数被当作值来使用，它就是一个函数表达式。")]),t._v(" "),s("h3",{attrs:{id:"函数的属性和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数的属性和方法"}},[t._v("#")]),t._v(" 函数的属性和方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("arguments")]),t._v("主要用于包含函数的参数。但还包含了其它属性：\n"),s("ul",[s("li",[s("code",[t._v("arguments.length")]),t._v("，函数调用时，传进来的参数个数。")]),t._v(" "),s("li",[s("code",[t._v("arguments.callee")]),t._v("，是一个指向包含"),s("code",[t._v("arguments")]),t._v("对象函数的指针。严格模式下，不能访问该值，否则报错")]),t._v(" "),s("li",[s("code",[t._v("arguments.caller")]),t._v("，非严格模式下始终是"),s("code",[t._v("undefined")]),t._v("；严格模式下访问会报错。这是为了分清"),s("code",[t._v("arguments.caller")]),t._v("和函数的caller故意为之。")])])]),t._v(" "),s("li",[s("code",[t._v("this")]),t._v(" "),s("ul",[s("li",[t._v("在标准函数中，this指向的是把函数当成方法调用的上下文。")]),t._v(" "),s("li",[t._v("在箭头函数中，this指向的是定义该函数时的上下文。")]),t._v(" "),s("li",[t._v("this指向的就是函数的执行上下文。如果访问"),s("code",[t._v("this.color")]),t._v("，那么上下文对象就会从关联的变量对象中获取到具体的值。")])])]),t._v(" "),s("li",[s("code",[t._v("caller")]),t._v(" 引用的是调用当前函数的函数，或者如果是在全局作用域中调用的则为null。\n"),s("ul",[s("li",[t._v("如果要降低耦合度，则可以通过arguments.callee.caller 来引用同样的值。")])])]),t._v(" "),s("li",[s("code",[t._v("new.target")]),t._v(" 区分函数是作为构造函数被调用，还是作为普通函数被调用。\n"),s("ul",[s("li",[t._v("如果是通过"),s("code",[t._v("new")]),t._v("关键字作为构造函数被调用，"),s("code",[t._v("new.target")]),t._v("指向被调用的构造函数")]),t._v(" "),s("li",[t._v("如果作为普通函数被调用，"),s("code",[t._v("new.target")]),t._v("的值为"),s("code",[t._v("undefined")])])])]),t._v(" "),s("li",[s("code",[t._v("prototype")]),t._v(" 指向原型对象。保存引用类型所有实例方法的地方。\n"),s("ul",[s("li",[t._v("这意味着"),s("code",[t._v("toString()")]),t._v("、"),s("code",[t._v("valueOf()")]),t._v("等方法实际上都保存在"),s("code",[t._v("prototype")]),t._v("上，进而由所有实例共享")])])]),t._v(" "),s("li",[s("code",[t._v("length")]),t._v(" 表示函数定义的命名参数个数。")]),t._v(" "),s("li",[s("code",[t._v("[[Scope]]")]),t._v(" 保存函数定义的预作用域链")]),t._v(" "),s("li",[s("code",[t._v("apply()")]),t._v(" 指定调用时函数体内部的this对象值。\n"),s("ul",[s("li",[t._v("第一个参数是函数内this的值，第二个参数可以是数组或"),s("code",[t._v("arguments")]),t._v("对象。")]),t._v(" "),s("li",[t._v("非严格模式下，第一个参数则指定为 "),s("code",[t._v("null")]),t._v(" 或 "),s("code",[t._v("undefined")]),t._v(" 时会自动替换为指向全局对象。指定为原始值会被原始包装类型包装。")]),t._v(" "),s("li",[t._v("**"),s("code",[t._v("apply")]),t._v("和"),s("code",[t._v("call()")]),t._v("的强大之处在于控制函数调用上下文，即控制函数体内this值的能力。**也就是可以将任意对象设置为任意函数的上下文。")])])]),t._v(" "),s("li",[s("code",[t._v("call()")]),t._v(" 与"),s("code",[t._v("apply()")]),t._v("相似，不同之处在于传参形式不同。第一个参数相同；剩下的参数要逐个传递，也就是必须要将参数一个个列出来。")]),t._v(" "),s("li",[s("code",[t._v("bind()")]),t._v(" 创建一个新的函数实例，其"),s("code",[t._v("this")]),t._v("值绑定到传给bind的对象。")]),t._v(" "),s("li",[t._v("继承并重写的方法\n"),s("ul",[s("li",[s("code",[t._v("toString()")]),t._v("、"),s("code",[t._v("toLocaleString()")]),t._v(" 返回函数字符串")]),t._v(" "),s("li",[s("code",[t._v("valueOf()")]),t._v(" 返回函数本身")])])])]),t._v(" "),s("h3",{attrs:{id:"什么是尾调用、尾调用优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是尾调用、尾调用优化"}},[t._v("#")]),t._v(" 什么是尾调用、尾调用优化")]),t._v(" "),s("p",[t._v("尾调用就是外部函数的返回值是一个内部函数的返回值。")]),t._v(" "),s("p",[t._v("尾调用优化的关键是如果函数的逻辑允许基于尾调用将其销毁，则引擎会这么做。也就是说，引擎发现销毁尾调用函数的外部函数调用栈帧不会影响尾调用函数，那么就销毁外部函数。")]),t._v(" "),s("p",[t._v("尾调用优化的条件：")]),t._v(" "),s("ul",[s("li",[t._v("代码必须在严格模式下执行")]),t._v(" "),s("li",[t._v("外部函数的返回值是对尾调用函数的调用。即尾调用必须直接返回")]),t._v(" "),s("li",[t._v("外调用函数返回后不需要执行额外的逻辑。")]),t._v(" "),s("li",[t._v("尾调用函数不是引用外部函数作用域中自由变量的闭包。")])]),t._v(" "),s("p",[s("strong",[t._v("尾调用优化为什么必须在严格模式下执行？")])]),t._v(" "),s("p",[t._v("之所以要求严格模式，主要因为在非严格模式下函数调用中允许使用"),s("code",[t._v("f.arguments")]),t._v("和"),s("code",[t._v("f.caller")]),t._v("，而它们都会引用外部函数的栈帧。显然，这意味着不能应用优化了。因此尾调用优化要求必须在严格模式下有效，以防止引用这些属性。")]),t._v(" "),s("h3",{attrs:{id:"什么是立即调用的函数表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是立即调用的函数表达式"}},[t._v("#")]),t._v(" 什么是立即调用的函数表达式")]),t._v(" "),s("p",[t._v("立即调用的函数表达式（IIFE，Immediately Invoked Function Expression）")]),t._v(" "),s("p",[t._v("函数定义包含在一个括号中，所以会被解释为函数表达式（匿名函数）。紧跟在第一组括号后面的第二组括号会立即调用前面的函数表达式。这就叫作IIFE。")]),t._v(" "),s("p",[t._v("ES6之前，常使用IIFE可以用来模拟块级作用域。")]),t._v(" "),s("p",[t._v("IIFE是现在模块的基石，各种模块模式都离不开IIFE。")]),t._v(" "),s("p",[t._v("Node中的CommonJS模块实现，以及CMD、AMD都用到了IIFE。")]),t._v(" "),s("h2",{attrs:{id:"第十一章-异步编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第十一章-异步编程"}},[t._v("#")]),t._v(" 第十一章 异步编程")]),t._v(" "),s("h3",{attrs:{id:"回调函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回调函数"}},[t._v("#")]),t._v(" 回调函数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" success"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" failure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Must provide number as first argument'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("success")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("failure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("successCallback")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Success: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("failureCallback")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Failure: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" successCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" failureCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" successCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" failureCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Success: 6（大约1000 毫秒之后）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Failure: Must provide number as first argument（大约1000 毫秒之后）")]),t._v("\n")])])]),s("p",[t._v("问题在于，代码复杂会导致回调地狱。")]),t._v(" "),s("h3",{attrs:{id:"什么是promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是promise"}},[t._v("#")]),t._v(" 什么是Promise")]),t._v(" "),s("p",[t._v("Promise是ES6新增的引用类型。是一个构造函数，所以也是一个对象。")]),t._v(" "),s("p",[t._v("它是一个构造函数，所以可以通过操作符"),s("code",[t._v("new")]),t._v("来实例化，接收一个函数即执行器函数作为参数。")]),t._v(" "),s("p",[t._v("Promise是一个有状态的对象，可能有3个状态：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("pending")]),t._v(" 是一个初始化状态。"),s("code",[t._v("new Promise()")]),t._v("初始化状态。")]),t._v(" "),s("li",[s("code",[t._v("fulfilled")]),t._v(" 表示完成（成功）状态")]),t._v(" "),s("li",[s("code",[t._v("rejected")]),t._v(" 表示拒绝（失败）状态")])]),t._v(" "),s("p",[t._v("状态可以从"),s("code",[t._v("pending")]),t._v("状态转化成"),s("code",[t._v("fulfilled")]),t._v("或"),s("code",[t._v("rejected")]),t._v("状态，且不可逆。")]),t._v(" "),s("p",[t._v("而且状态也不一定会从"),s("code",[t._v("pending")]),t._v("转化为其它两种状态，可能会永远处于"),s("code",[t._v("pending")]),t._v("状态。")]),t._v(" "),s("p",[t._v("这个状态是Promise内部私有的，外部不可读取也不可修改。这是为了避免外部读取到状态，以同步方式处理Promise对象。起到了隔离外部的同步代码。")]),t._v(" "),s("p",[t._v("Promise的状态可以在执行器函数内部进行修改。执行器函数有两个作用：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("第一个是初始化Promise的异步行为。也就是将异步操作封装在此函数中，但初始化操作是同步执行的。")])]),t._v(" "),s("li",[s("p",[t._v("第二个是控制状态的最终转换。只有调用Promise的实例的"),s("code",[t._v("then()")]),t._v("方法，才会获取到最终状态。")])])]),t._v(" "),s("p",[t._v("其中控制状态转换是用到了执行器的两个函数参数实现的。通常两个参数叫"),s("code",[t._v("resolve()")]),t._v("和"),s("code",[t._v("reject()")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("调用"),s("code",[t._v("resolve()")]),t._v("可以把Promise的状态切换成完成态"),s("code",[t._v("fulfilled")]),t._v("。")]),t._v(" "),s("li",[t._v("调用"),s("code",[t._v("reject()")]),t._v("可以把Promise的状态切换成拒绝态"),s("code",[t._v("rejected")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"promise的实例方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise的实例方法"}},[t._v("#")]),t._v(" Promise的实例方法")]),t._v(" "),s("p",[s("strong",[t._v("期约实例的方法是连接外部同步代码与内部异步代码之间的桥梁。")])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Promise.prototype.then()")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Promise的原型上有"),s("code",[t._v("then()")]),t._v("方法，这个方法实现了"),s("code",[t._v("Thenable")]),t._v("方法。")])]),t._v(" "),s("li",[s("p",[t._v("实现"),s("code",[t._v("Thenable")]),t._v("接口，最简单的类：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thenable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("该方法接收两个参数："),s("code",[t._v("onResolved")]),t._v("处理程序和"),s("code",[t._v("onRejected")]),t._v("处理程序。这两个参数是可选的，非函数类型的参数会被忽略。不需要传的参数，可以传"),s("code",[t._v("undefined")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("onResolved()")]),t._v("的返回值会通过"),s("code",[t._v("Promise.resolve()")]),t._v("包装来生成新"),s("code",[t._v("Promise")]),t._v("实例。如果没有提供"),s("code",[t._v("onResolved()")]),t._v("，则"),s("code",[t._v("Promise.resolve()")]),t._v("就会包装上一个"),s("code",[t._v("Promise")]),t._v("实例完成态的值。如果"),s("code",[t._v("onResolved()")]),t._v("没有显式的返回语句，则"),s("code",[t._v("Promise.resolve()")]),t._v("会包装默认的返回值"),s("code",[t._v("undefined")]),t._v("。如果显示返回，则"),s("code",[t._v("Promise.resolve()")]),t._v("会包装这个值。如果"),s("code",[t._v("onReject()")]),t._v("中抛出异常，则返回失败态"),s("code",[t._v("rejected")])]),t._v(" "),s("li",[s("code",[t._v("onRejected()")]),t._v(" 对返回值也进行"),s("code",[t._v("Promise.resovle()")]),t._v("包装")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("then()")]),t._v("方法返回一个新的Promise实例。因为这个新的Promise实例基于"),s("code",[t._v("onResolved()")]),t._v("函数的返回值构建。")])]),t._v(" "),s("li",[s("p",[t._v("因为会返回新的Promise实例，所以支持连续"),s("code",[t._v("then()")]),t._v("的点操作，下面方法也都支持。")])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Promise.prototype.catch()")])])]),t._v(" "),s("ul",[s("li",[t._v("该方法是"),s("code",[t._v("then(undefined, onRejected)")]),t._v("的语法糖")])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Promise.prototype.finally()")])])]),t._v(" "),s("ul",[s("li",[t._v("方法用于给"),s("code",[t._v("Promise")]),t._v("添加"),s("code",[t._v("onFinally")]),t._v("处理程序，无论何时状态都会失败。这个方法可以避免"),s("code",[t._v("onResolved")]),t._v(" 和"),s("code",[t._v("onRejected")]),t._v(" 处理程序中出现冗余代码。")]),t._v(" "),s("li",[t._v("finally()的返回结果就是对父Promise的传递")])]),t._v(" "),s("h3",{attrs:{id:"promise的静态方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise的静态方法"}},[t._v("#")]),t._v(" Promise的静态方法")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Promise.resolve()")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("该方法接收一个参数作为完成态的值。")])]),t._v(" "),s("li",[s("p",[t._v("作用是直接实例化一个完成态"),s("code",[t._v("fulfilled")]),t._v("的Promise实例对象。（Promise最初状态不一定是"),s("code",[t._v("pending")]),t._v("状态。）")])]),t._v(" "),s("li",[s("p",[t._v("如果接收一个Promise作为参数，那么就是一个空包装。"),s("code",[t._v("Promise.resolve()")]),t._v("是一个幂等操作，会保留作为参数传入的Promise的状态。")])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Promise.reject()")])])]),t._v(" "),s("ul",[s("li",[t._v("方法接收一个参数作为拒绝态的值。")]),t._v(" "),s("li",[t._v("作用是直接实例化一个拒绝态"),s("code",[t._v("rejected")]),t._v("的Promise实例对象，并抛出一个异步错误")]),t._v(" "),s("li",[t._v("如果接收一个Promise作为参数，不会做空包装，而是直接返回当做参数传入的Promise对象。")])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Promise.all()")])])]),t._v(" "),s("ul",[s("li",[t._v("方法接收一个可迭代对象")]),t._v(" "),s("li",[t._v("作用是在一组"),s("code",[t._v("Pormise")]),t._v("全部解决之后再返回它的状态。如果全完成，则会返回所有成功结果的顺序数组；只要失败，则返回那个失败的状态，只返回第一个失败的原因。")]),t._v(" "),s("li",[t._v("方法会默认执行所有的"),s("code",[t._v("Promise")]),t._v("。每个执行互不影响")])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Promise.race()")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("方法接收一个可迭代对象，返回一个新期约")])]),t._v(" "),s("li",[s("p",[t._v("一组集合中最先解决或拒绝的期约的镜像")])]),t._v(" "),s("li",[s("p",[t._v("无论"),s("code",[t._v("resolve")]),t._v("或"),s("code",[t._v("reject")]),t._v("，只要是第一个落定的，就会当成"),s("code",[t._v("race()")]),t._v("的状态返回")])]),t._v(" "),s("li",[s("p",[t._v("方法会默认执行所有的"),s("code",[t._v("Promise")]),t._v("。每个执行互不影响")])])]),t._v(" "),s("h3",{attrs:{id:"下面代码为什么try-catch无法捕获promise的错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下面代码为什么try-catch无法捕获promise的错误"}},[t._v("#")]),t._v(" 下面代码为什么try/catch无法捕获Promise的错误")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UnhandledPromiseRejectionWarning: Error: bar")]),t._v("\n")])])]),s("p",[t._v("这里的同步代码之所以没有捕获"),s("code",[t._v("Promise")]),t._v("抛出的错误，是因为它没有通过异步模式捕获错误。")]),t._v(" "),s("p",[s("strong",[t._v("Promise真正的异步特性：它们是同步对象（在同步执行模式中使用），但也是异步执行模式的媒介。")])]),t._v(" "),s("p",[s("strong",[t._v("当Promise进入完成或拒绝状态时，与该状态相关的处理程序仅仅会被排期到事件循环的微任务中处理，而非立即执行。")])]),t._v(" "),s("p",[t._v("所以，Promise的错误并没有抛到执行同步代码的线程里，而是在"),s("strong",[t._v("事件循环的微任务中")]),t._v("处理的。")]),t._v(" "),s("p",[t._v("因此，try/catch 块并不能捕获该错误。")]),t._v(" "),s("p",[t._v("代码一旦开始以异步模式执行，则唯一与之交互的方式就是使用异步结构，即"),s("code",[t._v("Promise")]),t._v("或"),s("code",[t._v("async/await")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"async-await异步执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-await异步执行"}},[t._v("#")]),t._v(" async/await异步执行")]),t._v(" "),s("p",[s("code",[t._v("async")]),t._v("函数如果使用"),s("code",[t._v("return")]),t._v("关键字返回值，那么这个值就会被"),s("code",[t._v("Promise.resolve()")]),t._v("包裹成Promise实例。如果没有返回值或返回"),s("code",[t._v("undefined")]),t._v("，则会返回"),s("code",[t._v("Promise.resolve()")]),t._v("包裹的"),s("code",[t._v("undefined")])]),t._v(" "),s("p",[s("code",[t._v("async")]),t._v("函数中的错误抛出会返回拒绝态"),s("code",[t._v("rejected")]),t._v("的"),s("code",[t._v("Promise")]),t._v("实例")]),t._v(" "),s("p",[s("code",[t._v("await")]),t._v(" 关键字会暂停执行异步函数后面的代码，让出JavaScript 运行时的执行线程。这个行为与生成器函数中的yield 关键字是一样的。")]),t._v(" "),s("p",[s("code",[t._v("await")]),t._v("关键字同样是尝试“解包”对象的值，然后将这个值传给表达式，再异步恢复异步函数的执行。")]),t._v(" "),s("p",[s("code",[t._v("await")]),t._v("和"),s("code",[t._v("return")]),t._v("关键字都期待一个"),s("code",[t._v("Thenable")]),t._v("接口对象，但常规值也可以。如果是实现"),s("code",[t._v("thenable")]),t._v("接口的对象，则这个对象可以由"),s("code",[t._v("await")]),t._v("来“解包”。如果不是，则这个值就被包裹成完成态"),s("code",[t._v("fulfilled")]),t._v("的Promise。")]),t._v(" "),s("p",[s("code",[t._v("Promise.reject()")]),t._v("返回的错误不会被"),s("code",[t._v("async")]),t._v("函数捕获，因为异步错误无法在同步代码中获取。前面加上"),s("code",[t._v("await")]),t._v("关键字可以捕获错误。")]),t._v(" "),s("p",[t._v("JavaScript 运行时在碰到await 关键字时，会记录在哪里暂停执行。等到await 右边的值可用了，JavaScript 运行时会向微任务队列中推送一个任务，这个任务会恢复异步函数的执行。")]),t._v(" "),s("p",[t._v("因此，即使后面跟着一个立即可用的值，函数的其余部分也会被异步求值。")]),t._v(" "),s("h3",{attrs:{id:"说一说async-await"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说一说async-await"}},[t._v("#")]),t._v(" 说一说async/await")]),t._v(" "),s("p",[s("code",[t._v("async")]),t._v("函数是生成器的语法糖。"),s("code",[t._v("async")]),t._v("函数对生成器函数做了改进：")]),t._v(" "),s("ul",[s("li",[t._v("内置执行器。生成器函数执行必须依靠执行器，如调用生成器函数后，生成迭代器对象，手动调用迭代器的"),s("code",[t._v("next()")]),t._v("方法，或使用"),s("code",[t._v("for-of")]),t._v("等语法。 "),s("code",[t._v("async")]),t._v("函数具有内置执行器，只需要添加"),s("code",[t._v("await")]),t._v("关键字，内部会自动进行异步执行处理。")]),t._v(" "),s("li",[t._v("更好的语意支持。比起星号"),s("code",[t._v("*")]),t._v("和"),s("code",[t._v("yield")]),t._v("关键字，语意更清晰。"),s("code",[t._v("async")]),t._v("表示函数有异步操作，"),s("code",[t._v("await")]),t._v("表示紧跟在后面的表达式需要等待结果。")]),t._v(" "),s("li",[s("code",[t._v("async")]),t._v("函数的返回值是"),s("code",[t._v("Promise")]),t._v("实例，返回值都是"),s("code",[t._v("Promise.resolve()")]),t._v("包裹的Promise实例。而生成器函数的返回值是一个迭代器对象。")]),t._v(" "),s("li",[s("code",[t._v("async")]),t._v("函数可以看作多个异步操作，包装成的一个 Promise 对象，而"),s("code",[t._v("await")]),t._v("关键字就是内部"),s("code",[t._v("then")]),t._v("命令的语法糖。")])]),t._v(" "),s("h2",{attrs:{id:"第二十六章-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二十六章-模块"}},[t._v("#")]),t._v(" 第二十六章 模块")]),t._v(" "),s("h3",{attrs:{id:"模块模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块模式"}},[t._v("#")]),t._v(" 模块模式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("模块模式背后的思想是：把逻辑拆分，各自封装，相互独立，每个块自行决定对外暴露什么，同时决定自行引入执行哪些外部代码。")])]),t._v(" "),s("li",[s("p",[t._v("模块标识符是所有模块系统通用的概念。模块系统本质是键/值实体，其中模块都有一个引用它的标识符。这个标识符在模拟系统中是字符串，最终解析的实际模块系统是中是文件的实际路径。")])]),t._v(" "),s("li",[s("p",[t._v("模块系统的核心是管理依赖；本地模块声明外部模块依赖，模块系统检视这些模块，保证能被正常加载并初始化；")])]),t._v(" "),s("li",[s("p",[t._v("模块加载：当一个外部模块被指定为依赖时，本地模块期望在执行它时，依赖已准备好并已初始化。")]),t._v(" "),s("ul",[s("li",[t._v("在浏览器中，只有所有依赖都加载完成，才可以执行入口文件")]),t._v(" "),s("li",[t._v("模块加载是顺序的、单线程的，必须指定一个模块作为入口（entry point），也是代码执行的起点。")]),t._v(" "),s("li",[t._v("模块必须等依赖加载完之后才能被加载。")])])]),t._v(" "),s("li",[s("p",[t._v("动态依赖：模块支持动态加载，但代价是增加了对模块进行静态分析的难度。")])]),t._v(" "),s("li",[s("p",[t._v("静态分析：模块中包含的发送到浏览器的JavaScript 代码经常会被静态分析，分析工具会检查代码结构并在不实际执行代码的情况下推断其行为。对静态分析友好的模块系统可以让模块打包系统更容易将代码处理为较少的文件。它支持在智能编辑器里智能自动完成，这也就是开发中写好的代码能自动出现友好提示或错误提示的原因。")])]),t._v(" "),s("li",[s("p",[t._v("模块支持循环依赖，模块的加载器会执行"),s("strong",[t._v("深度优先的依赖加载")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./moduleD'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./moduleB'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'moduleA'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./moduleA'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./moduleC'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'moduleB'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./moduleB'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./moduleD'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'moduleC'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./moduleA'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./moduleC'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'moduleD'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("如果"),s("code",[t._v("moduleA")]),t._v("作为入口文件，那么输出顺序为：moduleB、moduleC、moduleD、moduleA，满足深度优先的依赖加载。")]),t._v(" "),s("p",[t._v("如果moduleC 最先加载，那么输出顺序为：moduleD、moduleA、")]),t._v(" "),s("p",[t._v("moduleB、moduleC，也同样满足深度有限加载。")])]),t._v(" "),s("li",[s("p",[t._v("立即执行函数IIFE是模块加载的基础。然后出现了CommonJS、AMD、UMD等社区模块方案。")])])]),t._v(" "),s("h2",{attrs:{id:"dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),s("h3",{attrs:{id:"什么是dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是dom"}},[t._v("#")]),t._v(" 什么是DOM")]),t._v(" "),s("p",[t._v("DOM（Document Object Model）即文档对象模型，是一个应用编程接口。")]),t._v(" "),s("ul",[s("li",[t._v("DOM 将整个页面抽象为一组分层节点。HTML 或XML 页面的每个组成部分都是一种节点，包含不同的数据。")]),t._v(" "),s("li",[t._v("通过DOM创建表示文档的树，使用DOMAPI，可以让开发者轻松控制文档结构，删除、添加、替换、修改。")])]),t._v(" "),s("p",[t._v("W3C为保证Web跨平台的本性，避免厂商各行其是导致Web分裂，制定了DOM标准。")]),t._v(" "),s("h3",{attrs:{id:"dom包含哪些内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom包含哪些内容"}},[t._v("#")]),t._v(" DOM包含哪些内容")]),t._v(" "),s("p",[t._v("DOM有四个版本：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("DOM1（最初版本），包含：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("DOM Core")]),t._v(" 提供映射XML文档，从而方便访问和操作文档")]),t._v(" "),s("li",[s("strong",[t._v("DOM HTML")]),t._v(" 扩展前者，并增加了特定于HTML的对象和方法")])])]),t._v(" "),s("li",[s("p",[t._v("DOM2，包含：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("DOM视图")]),t._v("：描述追踪文档的不同视图接口。如应用CSS样式前后的文档")]),t._v(" "),s("li",[t._v("**DOM事件 **： 描述事件和事件处理的接口")]),t._v(" "),s("li",[s("strong",[t._v("DOM样式")]),t._v("：描述处理元素CSS样式的接口")]),t._v(" "),s("li",[s("strong",[t._v("DOM遍历和范围")]),t._v("：描述遍历和操作DOM 树的接口。")])])]),t._v(" "),s("li",[s("p",[t._v("DOM3，包含：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("DOM Load and Save")]),t._v("： 统一加载和保存文档的接口")]),t._v(" "),s("li",[s("strong",[t._v("DOM Validation")]),t._v("：验证文档的接口")]),t._v(" "),s("li",[s("strong",[t._v("DOM Core的扩展")]),t._v(" 支持了XML1.0的所有新特性，包括XML Infoset、XPath 和XML Base")])])]),t._v(" "),s("li",[s("p",[t._v("DOM4：W3C 不再按照Level 来维护DOM，而是作为DOM Living Standard 来维护，其快照称为DOM4。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Mutation Observers")]),t._v("：用于替代Mutation Events。观察整个文档、DOM树的一部分、或某个元素。还可以观察元素属性、子节点、文本或前三者任意组合变化。")])])])]),t._v(" "),s("h2",{attrs:{id:"bom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bom"}},[t._v("#")]),t._v(" BOM")]),t._v(" "),s("h3",{attrs:{id:"什么是bom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是bom"}},[t._v("#")]),t._v(" 什么是BOM")]),t._v(" "),s("p",[t._v("BOM（Browser Object Model）即浏览器对象模型，是一个访问和操作浏览器的接口。它是唯一一个没有标准的JavaScript实现。")]),t._v(" "),s("p",[t._v("BOM主要针对的是浏览器窗口和子窗口，不过大家把特定于浏览器的扩展都归在BOM的范畴。")]),t._v(" "),s("p",[t._v("BOM包括：")]),t._v(" "),s("ul",[s("li",[t._v("window对象：浏览器实例，BOM对象的基础。\n"),s("ul",[s("li",[t._v("代表浏览器窗口和页面可见区域")]),t._v(" "),s("li",[t._v("同时也被复用为EcmaScript的Global对象")])])]),t._v(" "),s("li",[t._v("location对象：当前窗口加载中加载文档的信息以及导航功能")]),t._v(" "),s("li",[t._v("navigator对象：浏览器相关信息，通常用于确定浏览器类型")]),t._v(" "),s("li",[t._v("screen对象：客户端显示器信息，如屏幕像素宽度、高度")]),t._v(" "),s("li",[t._v("history对象：表示浏览器的导航历史记录，开发者可以以编程方式实现导航，也可以修改历史记录")])])])}),[],!1,null,null,null);s.default=e.exports}}]);