(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{406:function(t,e,v){"use strict";v.r(e);var a=v(1),s=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"react学习-四-脚手架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react学习-四-脚手架"}},[t._v("#")]),t._v(" React学习（四）—— 脚手架")]),t._v(" "),e("h2",{attrs:{id:"前端工程复杂化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端工程复杂化"}},[t._v("#")]),t._v(" 前端工程复杂化")]),t._v(" "),e("p",[t._v("如果我们只是开发几个小的demo，那么永远不需要考虑一些复杂的问题：")]),t._v(" "),e("ul",[e("li",[t._v("目录结构如何组织划分")]),t._v(" "),e("li",[t._v("如何管理文件之间的相互依赖")]),t._v(" "),e("li",[t._v("如何管理第三方模块的依赖")]),t._v(" "),e("li",[t._v("项目发布前端如何压缩、打包项目")])]),t._v(" "),e("p",[t._v("现代的前端项目越来越复杂了：")]),t._v(" "),e("ul",[e("li",[t._v("不再是之前那样，再HTML中一如几个"),e("code",[t._v("css")]),t._v("文件，引入几个编写的"),e("code",[t._v("js")]),t._v("文件或者第三方的"),e("code",[t._v("js")]),t._v("文件这么简单；")]),t._v(" "),e("li",[t._v("比如现在"),e("code",[t._v("css")]),t._v("可能是使用"),e("code",[t._v("less")]),t._v("、"),e("code",[t._v("sass")]),t._v("等预处理器进行编写的，我们需要将它们转成普通的css才能被浏览器解析；")]),t._v(" "),e("li",[t._v("比如"),e("code",[t._v("JavaScript")]),t._v("代码不再只是编写几个文件中，而是通过模块化的方式，被组成在"),e("strong",[t._v("成百上千")]),t._v("个文件中，我们需要通过模块化的技术来管理它们之间的相互依赖；")]),t._v(" "),e("li",[t._v("比如项目需要依赖很多的第三方库，如何更好的管理它们（比如管理它们的依赖、版本升级等）")])]),t._v(" "),e("p",[t._v("为了解决上面的这些问题，需要学习一些工具，比如babel、webpack、gulp，配置它们的转换规则，打包依赖，热更新等一些内容；")]),t._v(" "),e("p",[t._v("现在，还没开始工程化编写React，就需要首先学习一系列其他工具；脚手架的出现，可以解决上面的一系列问题。记得最开始学React的时候，不知道脚手架工具，网上找其他人的博客，复制粘贴各种Webpack配置，到最后总算折腾出来了，但是对于一个初学者来说，开发体验很不友好。有了脚手架，我们可以绕过很多问题。")]),t._v(" "),e("h2",{attrs:{id:"脚手架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#脚手架"}},[t._v("#")]),t._v(" 脚手架")]),t._v(" "),e("p",[t._v("传统的脚手架是建筑学的一种结构，在搭建楼房、建筑物时，临时搭建出来的一个框架。")]),t._v(" "),e("p",[t._v("在编程中，提到脚手架"),e("code",[t._v("Scaffold")]),t._v("，其实是一种工具，帮助我们快速生成项目的工程化结构；每个项目完成的效果不同，但它们的基本工程化结构是很相似的，所以没有必要每次都从零开始搭建，完全可以使用一些工具，帮助我们生成基本的工程化模板；不同的项目，在这个模板的基础之上进行项目开发或者进行一些配置的简单修改即可。这样也可以间接保证项目的基本结构一致性。")]),t._v(" "),e("p",[t._v("脚手架让项目从搭建到开发，再到部署，整个流程变得快速和便捷。")]),t._v(" "),e("p",[t._v("前端流行的三大框架都有自己的脚手架：")]),t._v(" "),e("ul",[e("li",[t._v("Vue脚手架"),e("code",[t._v("vue-cli")])]),t._v(" "),e("li",[t._v("Angular脚手架"),e("code",[t._v("angular-cli")])]),t._v(" "),e("li",[t._v("React脚手架"),e("code",[t._v("create-react-app")])])]),t._v(" "),e("p",[t._v("什么是"),e("code",[t._v("npm")]),t._v("，全称Node Package Manager，即node包管理器，作用是帮助我们管理一些依赖包。")]),t._v(" "),e("p",[t._v("另外，还有一个Node包管理工具"),e("code",[t._v("yarn")]),t._v("，"),e("code",[t._v("yarn")]),t._v("是由Facebook、Google、Exponent 和 Tilde 联合推出了一个新的 JS 包管理工具。"),e("code",[t._v("yarn")]),t._v(" 是为了弥补"),e("code",[t._v("npm")]),t._v("的一些缺陷而出现的，早期的"),e("code",[t._v("npm")]),t._v("存在很多的缺陷，比如安装依赖速度很慢、版本依赖混乱等等一系列的问题；虽然从"),e("code",[t._v("npm")]),t._v("5版本开始，进行了很多的升级和改进，但是依然很多人喜欢使用"),e("code",[t._v("yarn")]),t._v("；React脚手架默认也是使用yarn。")]),t._v(" "),e("h3",{attrs:{id:"创建react项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建react项目"}},[t._v("#")]),t._v(" 创建React项目")]),t._v(" "),e("p",[t._v("创建React项目的命令如下：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("create-react-app 项目名称\n")])])]),e("p",[t._v("注意：项目名称不能包含大写字母。阮老师有讲这一点"),e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2017/02/filename-should-be-lowercase.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("为什么文件名要小写？"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("进入项目可看到如下初始化结构：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/ccbeango/blogImages/React/React%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B505.png",alt:"image-20210108071901560"}})]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[t._v("02_learning_scaffold\t\t\n├── package.json\n├── public\t\t\t\t\t\t\t\t 公共资源目录\n│   ├── favicon.ico\t\t\t\t \t应用程序顶部的icon图标\n│   ├── index.html\t\t\t\t\t项目入口文件\n│   ├── logo192.png\t\t\t\t\t在manifest.json引用的文件\n│   ├── logo512.png\t\t\t\t\t在manifest.json引用的文件\n│   ├── manifest.json        和Web App配置相关\n│   └── robots.txt\t\t\t\t\t指定搜索引擎可以或者无法爬取哪些文件\n├── README.md\n├── src\n│   ├── App.css\t\t\t\t\t\t\tAPP组件相关的样式\n│   ├── App.js\t\t\t\t\t\t\tAPP组件的代码文件\n│   ├── App.test.js\t\t\t\t\tAPP组件的测试代码文件\n│   ├── index.css\t\t\t\t\t\t全局样式文件\n│   ├── index.js\t\t\t\t\t\t整个应用程序的入口文件\n│   ├── logo.svg\t\t\t\t\t\t启动项目，项目中的图标\n│   ├── reportWebVitals.js\t \n│   └── setupTests.js\t\t\t\t 测试初始化文件\n└── yarn.lock\n")])])]),e("h3",{attrs:{id:"了解pwa"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#了解pwa"}},[t._v("#")]),t._v(" 了解PWA")]),t._v(" "),e("p",[t._v("之前的React版中中，"),e("code",[t._v("src")]),t._v("目录下会生成一个"),e("code",[t._v("serviceWorker.js")]),t._v("的文件（React16.13.1），这个文件的作用就是PWA。（React17.0.1中看不到了）。")]),t._v(" "),e("p",[t._v("PWA全称Progressive Web App，即渐进式WEB应用；一个 PWA 应用首先是一个网页, 可以通过 Web 技术编写出一个网页应用；一个 PWA 应用首先是一个网页, 可以通过 Web 技术编写出一个网页应用，随后添加上"),e("code",[t._v("App Manifest")]),t._v("和"),e("code",[t._v("Service Worker")]),t._v("来实现 PWA 的安装和离线等功能；这种Web存在的形式，也称之为Web App；")]),t._v(" "),e("p",[t._v("PWA解决的问题：")]),t._v(" "),e("ul",[e("li",[t._v("可以将应用添加至主屏幕，点击主屏幕图标可以实现启动动画以及隐藏地址栏。如安卓手机中，通过Chrome浏览一个PWA应用网页，可以将其添加到主屏幕，主屏幕也将会出现这个应用图标，下次可直接通过此图标访问PWA应用，就像手机上安装了一个新的APP一样。")]),t._v(" "),e("li",[t._v("实现离线缓存功能，即使用户手机没有网络，也可以使用一些离线功能")]),t._v(" "),e("li",[t._v("实现了消息推送，如安卓手机任务栏中的消息通知，PWA也可实现。")]),t._v(" "),e("li",[t._v("以及一系列类似于Native App相关的功能")])]),t._v(" "),e("p",[e("code",[t._v("manifest.json")]),t._v("文件作用主要和Web App应用有关，主要是对安装到设备上的PWA应用做一些配置。")]),t._v(" "),e("h3",{attrs:{id:"脚手架中的webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#脚手架中的webpack"}},[t._v("#")]),t._v(" 脚手架中的Webpack")]),t._v(" "),e("p",[t._v("Webpack 是一个现代 JavaScript 应用程序的静态模块打包器"),e("code",[t._v("module bundler")]),t._v("；当Webpack处理应用程序时，它会递归地构建一个依赖关系图"),e("code",[t._v("dependency graph")]),t._v("，其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个"),e("code",[t._v("bundle")]),t._v("。")]),t._v(" "),e("p",[t._v("具体的Webpack，会有之后的学习记录。")]),t._v(" "),e("p",[t._v("在使用脚手架创建一个应用时，默认情况下Webpack相关配置都被隐藏起来了。")]),t._v(" "),e("p",[t._v("配置可以通过"),e("code",[t._v('"eject": "react-scripts eject"')]),t._v("暴露出来。执行"),e("code",[t._v("yarn eject")]),t._v("即可，这个操作是不可逆的。")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[t._v("02_learning_scaffold\n├── config\n│   ├── env.js\n│   ├── getHttpsConfig.js\n│   ├── jest\n│   ├── modules.js\n│   ├── paths.js\n│   ├── pnpTs.js\n│   ├── webpack.config.js\n│   └── webpackDevServer.config.js\n├── package.json\n├── public\n│   ├── favicon.ico\n│   ├── index.html\n│   ├── logo192.png\n│   ├── logo512.png\n│   ├── manifest.json\n│   └── robots.txt\n├── README.md\n├── scripts\n│   ├── build.js\n│   ├── start.js\n│   └── test.js\n├── src\n│   ├── App.css\n│   ├── App.js\n│   ├── App.test.js\n│   ├── index.css\n│   ├── index.js\n│   ├── logo.svg\n│   ├── reportWebVitals.js\n│   └── setupTests.js\n└── yarn.lock\n")])])]),e("p",[t._v("然后我们可以看到，项目中多了"),e("code",[t._v("/scripts")]),t._v("和"),e("code",[t._v("/config")]),t._v("两个目录，以及"),e("code",[t._v("package.json")]),t._v("和"),e("code",[t._v("yarn.lock")]),t._v("文件的变动。")])])}),[],!1,null,null,null);e.default=s.exports}}]);