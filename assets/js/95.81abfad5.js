(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{411:function(n,e,t){"use strict";t.r(e);var r=t(1),a=Object(r.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"react学习-九-高阶组件和组件补充"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react学习-九-高阶组件和组件补充"}},[n._v("#")]),n._v(" React学习（九）——高阶组件和组件补充")]),n._v(" "),e("h2",{attrs:{id:"高阶组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高阶组件"}},[n._v("#")]),n._v(" 高阶组件")]),n._v(" "),e("h3",{attrs:{id:"认识高阶组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#认识高阶组件"}},[n._v("#")]),n._v(" 认识高阶组件")]),n._v(" "),e("p",[n._v("什么是高阶组件呢？相信很多同学都听说过，也用过 "),e("code",[n._v("高阶函数")]),n._v("，它们非常相似，所以我们可以先来回顾一下什么是 "),e("code",[n._v("高阶函数")]),n._v("。")]),n._v(" "),e("p",[n._v("高阶函数的至少满足以下条件之一：")]),n._v(" "),e("ul",[e("li",[n._v("接受一个或多个函数作为输入；")]),n._v(" "),e("li",[n._v("输出一个函数；")])]),n._v(" "),e("p",[n._v("JavaScript中比较常见的filter、map、reduce都是高阶函数。")]),n._v(" "),e("p",[n._v("那么什么是高阶组件呢？")]),n._v(" "),e("ul",[e("li",[n._v("高阶组件的英文是 "),e("strong",[n._v("Higher-Order Components")]),n._v("，简称为 "),e("code",[n._v("HOC")]),n._v("；")]),n._v(" "),e("li",[n._v("官方的定义："),e("strong",[n._v("高阶组件是参数为组件，返回值为新组件的函数")]),n._v("；")])]),n._v(" "),e("p",[n._v("我们可以进行如下的解析：")]),n._v(" "),e("ul",[e("li",[n._v("首先， "),e("code",[n._v("高阶组件")]),n._v(" 本身不是一个组件，而是一个函数；")]),n._v(" "),e("li",[n._v("其次，这个函数的参数是一个组件，返回值也是一个组件；")])]),n._v(" "),e("p",[n._v("高阶组件的调用过程类似于这样：")]),n._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("const")]),n._v(" EnhancedComponent "),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[n._v("higherOrderComponent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("WrappedComponent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n")])])]),e("p",[n._v("高阶函数的编写过程类似于这样：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function higherOrderComponent(WrapperComponent) {\n  return class NewComponent extends PureComponent {\n    render() {\n      return <WrapperComponent/>\n    }\n  }\n}\n")])])]),e("p",[n._v("在ES6中，类表达式中类名是可以省略的（匿名类），所以可以可以写成下面的写法：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function higherOrderComponent(WrapperComponent) {\n  return class extends PureComponent {\n    render() {\n      return <WrapperComponent/>\n    }\n  }\n}\n")])])]),e("p",[n._v("另外，组件的名称都可以通过displayName来修改，在dev阶段可以在devtool中看到对应名字：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function higherOrderComponent(WrapperComponent) {\n  class NewComponent extends PureComponent {\n    render() {\n      return <WrapperComponent/>\n    }\n  }\n  NewComponent.displayName = 'Ccbeango';\n  return NewComponent；\n}\n")])])]),e("p",[n._v("完整的代码，我们可以这样来编写：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("import React, { PureComponent } from 'react';\n\nfunction higherOrderComponent(WrapperComponent) {\n  class NewComponent extends PureComponent {\n    render() {\n      // this.props扩展接收传递的参数\n      return <WrapperComponent {...this.props}/>\n    }\n  }\n\n  // NewComponent.displayName = 'Ccbeango';\n  return NewComponent;\n}\n\nclass App extends PureComponent {\n  render() {\n    return (\n      <div>\n        App\n      </div>\n    )\n  }\n}\n\nexport default higherOrderComponent(App);\n")])])]),e("p",[n._v("高阶组件并不是React API的一部分，它是基于React的组合特性而形成的设计模式；")]),n._v(" "),e("p",[n._v("高阶组件在一些React第三方库中非常常见：")]),n._v(" "),e("ul",[e("li",[n._v("比如redux中的connect；")]),n._v(" "),e("li",[n._v("比如react-router中的withRouter；")])]),n._v(" "),e("h3",{attrs:{id:"高阶组件的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高阶组件的使用"}},[n._v("#")]),n._v(" 高阶组件的使用")]),n._v(" "),e("h4",{attrs:{id:"props的增强"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props的增强"}},[n._v("#")]),n._v(" props的增强")]),n._v(" "),e("p",[e("strong",[n._v("不修改原有代码的情况下，添加新的props")])]),n._v(" "),e("p",[n._v("这里是劫持props做操作。")]),n._v(" "),e("p",[n._v("假如有如下案例：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("import React, { PureComponent } from 'react';\n\nfunction enhanceComponent(WrapperComponent, otherProps) {\n  class NewComponent extends PureComponent {\n    render() {\n      return <WrapperComponent {...this.props} {...otherProps} />\n    }\n  }\n\n  // NewComponent.displayName = 'Ccbeango';\n  return NewComponent;\n}\n\nclass Person extends PureComponent {\n  render () {\n    return (\n      <h2>Home: {this.props.name}-年龄：{this.props.age}-身高{this.props.height}</h2>\n    );\n  }\n}\n\nconst EnhancePerson = enhanceComponent(Person, { height: '1.83' });\nconst EnhancePerson2 = enhanceComponent(Person, { height: '1.77' });\n\nclass App extends PureComponent {\n  render() {\n    return (\n      <div>\n        App\n        <EnhancePerson name=\"ccbean\" age=\"18\" />\n        <EnhancePerson2 name=\"tom\" age=\"20\" />\n      </div>\n    )\n  }\n}\n\nexport default App;\n")])])]),e("p",[n._v("我们可以通过一个高阶组件，让使用者在不破坏原有结构的情况下对某个组件增强props：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function enhanceProps(WrapperCpn, otherProps) {\n  // 函数式组件\n  return props => <WrapperCpn {...props} {...otherProps} />\n}\n\nconst EnhanceHeader = enhanceProps(Header, {height: 1.88})\n\nfunction enhanceComponent(WrapperComponent, otherProps) {\n  return class NewComponent extends PureComponent {\n    render() {\n      return <WrapperComponent {...this.props} {...otherProps} />\n    }\n  }\n}\n")])])]),e("p",[e("strong",[n._v("利用高阶组件来共享Context")])]),n._v(" "),e("p",[n._v("利用高阶组件来共享Context属性")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('import React, { PureComponent, createContext } from \'react\';\n\nconst UserContext = createContext({\n  nickname: "默认",\n  level: -1\n})\n\nfunction Header(props) {\n  return (\n    <UserContext.Consumer>\n      {\n        value => {\n          const { nickname, level } = value;\n          return <h2>Header {"昵称:" + nickname + "等级" + level}</h2>\n        }\n      }\n    </UserContext.Consumer>\n  )\n}\n\nfunction Footer(props) {\n  return (\n    <UserContext.Consumer>\n      {\n        value => {\n          const { nickname, level } = value;\n          return <h2>Footer {"昵称:" + nickname + "等级" + level}</h2>\n        }\n      }\n    </UserContext.Consumer>\n  )\n}\n\nconst EnhanceHeader = enhanceProps(Header, { height: 1.88 })\n\nexport default class App extends PureComponent {\n  render() {\n    return (\n      <div>\n        <UserContext.Provider value={{ nickname: "why", level: 90 }}>\n          <Header />\n          <Footer />\n        </UserContext.Provider>\n      </div>\n    )\n  }\n}\n')])])]),e("p",[n._v("利用高阶组件"),e("code",[n._v("withUser")]),n._v("：")]),n._v(" "),e("ul",[e("li",[n._v("多个地方需要使用context时，使用高阶组件，无需每个地方都写相同的逻辑代码。")])]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('import React, { PureComponent, createContext } from \'react\';\n\nconst UserContext = createContext({\n  nickname: "默认",\n  level: -1\n})\n\nfunction withUser(WrapperCpn) {\n  return props => {\n    return (\n      <UserContext.Consumer>\n        {\n          value => {\n            return <WrapperCpn {...props} {...value}/>\n          }\n        }\n      </UserContext.Consumer>\n    )\n  }\n}\n\nfunction Header(props) {\n  const { nickname, level } = props;\n  return <h2>Header {"昵称:" + nickname + "等级:" + level}</h2>\n}\n\n\nfunction Footer(props) {\n  const { nickname, level } = props;\n  return <h2>Footer {"昵称:" + nickname + "等级:" + level}</h2>\n}\n\nconst UserHeader = withUser(Header);\nconst UserFooter = withUser(Footer);\n\nexport default class App extends PureComponent {\n  render() {\n    return (\n      <div>\n        <UserContext.Provider value={{ nickname: "why", level: 90 }}>\n          <UserHeader />\n          <UserFooter />\n        </UserContext.Provider>\n      </div>\n    )\n  }\n}\n')])])]),e("h4",{attrs:{id:"渲染判断鉴权"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染判断鉴权"}},[n._v("#")]),n._v(" 渲染判断鉴权")]),n._v(" "),e("p",[n._v("在开发中，我们可能遇到这样的场景：")]),n._v(" "),e("ul",[e("li",[n._v("某些页面是必须用户登录成功才能进行进入；")]),n._v(" "),e("li",[n._v("如果用户没有登录成功，那么直接跳转到登录页面；")])]),n._v(" "),e("p",[n._v("这里是劫持组件做操作。")]),n._v(" "),e("p",[n._v("这个时候，我们就可以使用高阶组件来完成鉴权操作：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function LoginPage() {\n  return <h2>LoginPage</h2>\n}\n\nfunction CartPage() {\n  return <h2>CartPage</h2>\n}\n\nexport default class App extends PureComponent {\n  render() {\n    return (\n      <div>\n        <CartPage/>\n      </div>\n    )\n  }\n}\n")])])]),e("p",[n._v("编写鉴权的高阶组件：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function loginAuth(Page) {\n  return props => {\n    if (props.isLogin) {\n      return <Page/>\n    } else {\n      return <LoginPage/>\n    }\n  }\n}\n")])])]),e("p",[n._v("完整的代码如下：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("import React, { PureComponent } from 'react';\n\nfunction loginAuth(Page) {\n  return props => {\n    if (props.isLogin) {\n      return <Page/>\n    } else {\n      return <LoginPage/>\n    }\n  }\n}\n\nfunction LoginPage() {\n  return <h2>LoginPage</h2>\n}\n\nfunction CartPage() {\n  return <h2>CartPage</h2>\n}\n\nconst AuthCartPage = loginAuth(CartPage);\n\nexport default class App extends PureComponent {\n  render() {\n    return (\n      <div>\n        <AuthCartPage isLogin={true}/>\n      </div>\n    )\n  }\n}\n")])])]),e("p",[n._v("类似的实际应用还有很多，都可借助高阶组件实现。")]),n._v(" "),e("h4",{attrs:{id:"生命周期劫持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期劫持"}},[n._v("#")]),n._v(" 生命周期劫持")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("import React, { PureComponent } from 'react';\n\nclass Home extends PureComponent {\n\n  UNSAFE_componentWillMount() {\n    this.begin = Date.now();\n  }\n\n  componentDidMount() {\n    this.end = Date.now();\n    const interval = this.end - this.begin;\n    console.log(`Home渲染使用时间:${interval}`)\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Home</h2>\n        <p>我是home的元素,哈哈哈</p>\n      </div>\n    )\n  }\n}\n\nclass Detail extends PureComponent {\n  UNSAFE_componentWillMount() {\n    this.begin = Date.now();\n  }\n\n  componentDidMount() {\n    this.end = Date.now();\n    const interval = this.end - this.begin;\n    console.log(`Detail渲染使用时间:${interval}`)\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Detail</h2>\n        <p>我是detail的元素,哈哈哈</p>\n      </div>\n    )\n  }\n}\n\nexport default class App extends PureComponent {\n  render() {\n    return (\n      <div>\n        <Home/>\n        <Detail/>\n      </div>\n    )\n  }\n}\n")])])]),e("p",[n._v("我们可以定义如下高阶组件：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function logRenderTime(WrapperCpn) {\n  return class extends PureComponent {\n    UNSAFE_componentWillMount() {\n      this.begin = Date.now();\n    }\n\n    componentDidMount() {\n      this.end = Date.now();\n      const interval = this.end - this.begin;\n      console.log(`Home渲染使用时间:${interval}`)\n    }\n\n    render() {\n      return <WrapperCpn {...this.props}/>\n    }\n  }\n}\n\nconst LogHome = logRenderTime(Home);\nconst LogDetail = logRenderTime(Detail);\n")])])]),e("p",[n._v("完整代码如下：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("import React, { PureComponent } from 'react';\n\nclass Home extends PureComponent {\n  UNSAFE_componentWillMount() {\n    this.begin = Date.now();\n  }\n\n  componentDidMount() {\n    this.end = Date.now();\n    const interval = this.end - this.begin;\n    console.log(`Home渲染使用时间:${interval}`)\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Home</h2>\n        <p>我是home的元素,哈哈哈</p>\n      </div>\n    )\n  }\n}\n\nclass Detail extends PureComponent {\n  UNSAFE_componentWillMount() {\n    this.begin = Date.now();\n  }\n\n  componentDidMount() {\n    this.end = Date.now();\n    const interval = this.end - this.begin;\n    console.log(`Detail渲染使用时间:${interval}`)\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Detail</h2>\n        <p>我是detail的元素,哈哈哈</p>\n      </div>\n    )\n  }\n}\n\nexport default class App extends PureComponent {\n  render() {\n    return (\n      <div>\n        <Home/>\n        <Detail/>\n      </div>\n    )\n  }\n}\n")])])]),e("h3",{attrs:{id:"高阶函数的意义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高阶函数的意义"}},[n._v("#")]),n._v(" 高阶函数的意义")]),n._v(" "),e("p",[n._v("我们会发现利用高阶组件可以针对某些React代码进行更加优雅的处理。")]),n._v(" "),e("p",[n._v("其实早期的React有提供组件之间的一种复用方式是mixin，目前已经不再建议使用：")]),n._v(" "),e("ul",[e("li",[e("code",[n._v("Mixin")]),n._v(" 可能会相互依赖，相互耦合，不利于代码维护")]),n._v(" "),e("li",[n._v("不同的"),e("code",[n._v("Mixin")]),n._v("中的方法可能会相互冲突")]),n._v(" "),e("li",[e("code",[n._v("Mixin")]),n._v("非常多时，组件是可以感知到的，甚至还要为其做相关处理，这样会给代码造成滚雪球式的复杂性")])]),n._v(" "),e("p",[n._v("当然，HOC也有自己的一些缺陷：")]),n._v(" "),e("ul",[e("li",[e("code",[n._v("HOC")]),n._v("需要在原组件上进行包裹或者嵌套，如果大量使用"),e("code",[n._v("HOC")]),n._v("，将会产生非常多的嵌套，这让调试变得非常困难；")]),n._v(" "),e("li",[e("code",[n._v("HOC")]),n._v("可以劫持"),e("code",[n._v("props")]),n._v("，在不遵守约定的情况下也可能造成冲突；")])]),n._v(" "),e("p",[n._v("Hooks的出现，是开创性的，它解决了很多React之前的存在的问题，比如this指向问题、比如hoc的嵌套复杂度问题等等；")]),n._v(" "),e("h2",{attrs:{id:"组件补充"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件补充"}},[n._v("#")]),n._v(" 组件补充")]),n._v(" "),e("h3",{attrs:{id:"ref转发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ref转发"}},[n._v("#")]),n._v(" ref转发")]),n._v(" "),e("p",[n._v("之前我们也说过，函数组件无法获取"),e("code",[n._v("ref")]),n._v("，因为函数组件没有实例对象。")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('import React, { createRef, PureComponent } from "react";\n\nclass Home extends PureComponent {\n  render() {\n    return <div>Home</div>;\n  }\n}\n\nfunction Profile() {\n  return <div>Profile</div>\n}\n\nexport default class App extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.titleRef = createRef();\n    this.homeRef = createRef();\n    this.profileRef = createRef();\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 ref={this.titleRef}>Hello React</h2>\n        <Home ref={this.homeRef} />\n        <Profile ref={this.profileRef}/>\n        <button onClick={e => this.printRef()}>打印ref</button>\n      </div>\n    );\n  }\n\n  printRef() {\n    console.log(this.titleRef)\n    console.log(this.homeRef)\n    console.log(this.profileRef)\n  }\n}\n')])])]),e("p",[n._v("上面的代码我们会看到如下警告：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("index.js:1 Warning: Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?\n")])])]),e("p",[n._v("此时使用"),e("code",[n._v("forwardRef")]),n._v("高阶组件可实现将ref转发。")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('import React, { createRef, forwardRef, PureComponent } from "react";\n\nclass Home extends PureComponent {\n  render() {\n    return <div>Home</div>;\n  }\n}\n\n\nconst Profile = forwardRef((props, ref) => {\n  return <div ref={ref}>Profile</div>\n})\n\nexport default class App extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.titleRef = createRef();\n    this.homeRef = createRef();\n    this.profileRef = createRef();\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 ref={this.titleRef}>Hello React</h2>\n        <Home ref={this.homeRef} />\n        <Profile ref={this.profileRef}/>\n        <button onClick={e => this.printRef()}>打印ref</button>\n      </div>\n    );\n  }\n\n  printRef() {\n    console.log(this.titleRef)\n    console.log(this.homeRef)\n    console.log(this.profileRef)\n  }\n}\n')])])]),e("h3",{attrs:{id:"portals"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#portals"}},[n._v("#")]),n._v(" Portals")]),n._v(" "),e("p",[n._v("某些情况下，我们希望渲染的内容独立于父组件，甚至是独立于当前挂载到的DOM元素中（默认都是挂载到id为root的DOM元素上的）。")]),n._v(" "),e("p",[n._v("Portal 提供了一种将子节点渲染到存在于父组件以外的 DOM 节点的优秀的方案：")]),n._v(" "),e("ul",[e("li",[n._v("第一个参数（"),e("code",[n._v("child")]),n._v("）是任何可渲染的 React 子元素，例如一个元素，字符串或 fragment；")]),n._v(" "),e("li",[n._v("第二个参数（"),e("code",[n._v("container")]),n._v("）是一个 DOM 元素；")])]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("ReactDOM.createPortal(child, container)\n")])])]),e("p",[n._v("通常来讲，当你从组件的 render 方法返回一个元素时，该元素将被挂载到 DOM 节点中离其最近的父节点：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("render() {\n  // React 挂载了一个新的 div，并且把子元素渲染其中\n  return (\n    <div>      \n      {this.props.children}\n    </div>  \n  );\n}\n")])])]),e("p",[n._v("然而，有时候将子元素插入到 DOM 节点中的不同位置也是有好处的：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("render() {\n  // React 并*没有*创建一个新的 div。它只是把子元素渲染到 `domNode` 中。\n  // `domNode` 是一个可以在任何位置的有效 DOM 节点。\n  return ReactDOM.createPortal(\n    this.props.children,\n    domNode  \n  );\n}\n")])])]),e("p",[e("strong",[n._v("比如说，我们准备开发一个Modal组件，它可以将它的子组件渲染到屏幕的中间位置：")])]),n._v(" "),e("p",[n._v("步骤一：修改index.html添加新的节点")]),n._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),n._v("div")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[n._v("id")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[n._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v('"')]),n._v("root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("</")]),n._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[n._v("\x3c!-- 新节点 --\x3e")]),n._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),n._v("div")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[n._v("id")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[n._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v('"')]),n._v("modal"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("</")]),n._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v("\n")])])]),e("p",[n._v("步骤二：编写这个节点的样式：")]),n._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[n._v("#modal")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[n._v("position")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" fixed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[n._v("left")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" 50%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[n._v("top")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" 50%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[n._v("transform")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[n._v("translate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("-50%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" -50%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[n._v("background-color")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])])]),e("p",[n._v("步骤三：编写组件代码")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("import React, { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Modal extends PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      this.props.children,\n      document.getElementById(\"modal\")\n    )\n  }\n}\n\nexport default class App extends PureComponent {\n  render() {\n    return (\n      <div>\n        <Modal>\n          <h2>我是标题</h2>\n        </Modal>\n      </div>\n    )\n  }\n}\n")])])]),e("h3",{attrs:{id:"fragment"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fragment"}},[n._v("#")]),n._v(" Fragment")]),n._v(" "),e("p",[n._v("在之前的开发中，我们总是在一个组件中返回内容时包裹一个div元素：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("export default class App extends PureComponent {\n  render() {\n    return (\n      <div>\n        <h2>当前计数: 0</h2>\n        <button>+1</button>\n        <button>-1</button>\n      </div>\n    )\n  }\n}\n")])])]),e("p",[n._v("我们会发现多了一个div元素：")]),n._v(" "),e("ul",[e("li",[n._v("这个div元素对于某些场景是需要的（比如我们就希望放到一个div元素中，再针对性设置样式）")]),n._v(" "),e("li",[n._v("某些场景下这个div是没有必要的，比如当前这里我可能希望所有的内容直接渲染到root中即可；")])]),n._v(" "),e("p",[n._v("我们希望可以不渲染这样一个div应该如何操作呢？")]),n._v(" "),e("ul",[e("li",[n._v("使用Fragment")]),n._v(" "),e("li",[n._v("Fragment 允许你将子列表分组，而无需向 DOM 添加额外节点；")])]),n._v(" "),e("p",[n._v("React还提供了Fragment的短语法：")]),n._v(" "),e("ul",[e("li",[n._v("它看起来像空标签 "),e("code",[n._v("<> </>")]),n._v("；")])]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("export default class App extends PureComponent {\n  render() {\n    return (\n      <>\n        <h2>当前计数: 0</h2>\n        <button>+1</button>\n        <button>-1</button>\n      </>\n    )\n  }\n}\n")])])]),e("p",[n._v("但是，如果我们需要在Fragment中添加key，那么就不能使用短语法：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("{\n  this.state.friends.map((item, index) => {\n    return (\n      <Fragment key={item.name}>\n        <div>{item.name}</div>\n        <div>{item.age}</div>\n      </Fragment>\n    )\n  })\n}\n")])])]),e("p",[n._v("这里是不支持如下写法的：")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("<key={item.name}>\n  <div>{item.name}</div>\n  <div>{item.age}</div>\n</>\n")])])]),e("p",[n._v("下面的"),e("code",[n._v("Column")]),n._v("如果使用div包裹，html结果不对将会出现渲染问题，使用"),e("code",[n._v("Fragment")]),n._v("就可以解决这个问题。")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('import React, { PureComponent, Fragment } from "react";\n\nclass Columns extends React.Component {\n  render() {\n    return (\n      <Fragment>\n        <td>Hello</td>\n        <td>World</td>\n      </Fragment>\n    );\n  }\n}\n\nexport default class Table extends PureComponent {\n  render() {\n    return (\n      <table>\n        <tbody>\n          <tr>\n            <Columns />\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\n')])])]),e("h3",{attrs:{id:"strictmode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#strictmode"}},[n._v("#")]),n._v(" StrictMode")]),n._v(" "),e("p",[e("code",[n._v("StrictMode")]),n._v(" 是一个用来突出显示应用程序中潜在问题的工具。")]),n._v(" "),e("ul",[e("li",[n._v("与 "),e("code",[n._v("Fragment")]),n._v(" 一样，"),e("code",[n._v("StrictMode")]),n._v(" 不会渲染任何可见的 UI；")]),n._v(" "),e("li",[n._v("它为其后代元素触发额外的检查和警告；")]),n._v(" "),e("li",[n._v("严格模式检查仅在开发模式下运行；它们不会影响生产构建；")])]),n._v(" "),e("p",[n._v("可以为应用程序的任何部分启用严格模式：")]),n._v(" "),e("ul",[e("li",[n._v("不会对 "),e("code",[n._v("Header")]),n._v(" 和 "),e("code",[n._v("Footer")]),n._v(" 组件运行严格模式检查；")]),n._v(" "),e("li",[n._v("但是，"),e("code",[n._v("ComponentOne")]),n._v(" 和 "),e("code",[n._v("ComponentTwo")]),n._v(" 以及它们的所有后代元素都将进行检查；")])]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("import React from 'react';\n\nfunction ExampleApplication() {\n  return (\n    <div>\n      <Header />\n      <React.StrictMode>\n        <div>\n          <ComponentOne />\n          <ComponentTwo />\n        </div>\n      </React.StrictMode>\n      <Footer />\n    </div>\n  );\n}\n")])])]),e("p",[e("strong",[n._v("但是检测，到底检测什么呢？")])]),n._v(" "),e("ol",[e("li",[n._v("识别不安全的生命周期：")])]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("class Home extends PureComponent {\n  UNSAFE_componentWillMount() {\n\n  }\n\n  render() {\n    return <h2>Home</h2>\n  }\n}\n")])])]),e("p",[n._v("警告")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("index.js:1 Warning: Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: App\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[n._v("使用过时的ref API")])]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('class Home extends PureComponent {\n  UNSAFE_componentWillMount() {\n\n  }\n\n  render() {\n    return <h2 ref="home">Home</h2>\n  }\n}\n')])])]),e("p",[n._v("警告")]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('index.js:1 Warning: A string ref, "home", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref\n')])])]),e("ol",{attrs:{start:"3"}},[e("li",[n._v("使用废弃的findDOMNode方法")])]),n._v(" "),e("p",[n._v("在之前的React API中，可以通过findDOMNode来获取DOM，不过已经不推荐使用了")]),n._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[e("p",[n._v("检查意外的副作用")]),n._v(" "),e("ul",[e("li",[n._v("这个组件的constructor会被调用两次；")]),n._v(" "),e("li",[n._v("这是严格模式下故意进行的操作，让你来查看在这里写的一些逻辑代码被调用多次时，是否会产生一些副作用；")]),n._v(" "),e("li",[n._v("在生产环境中，是不会被调用两次的；")])]),n._v(" "),e("div",{staticClass:"language-react extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('class Home extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    console.log("home constructor");\n  }\n\n  UNSAFE_componentWillMount() {\n\n  }\n\n  render() {\n    return <h2 ref="home">Home</h2>\n  }\n}\n')])])])]),n._v(" "),e("li",[e("p",[n._v("检测过时的context API")])])]),n._v(" "),e("p",[n._v("早期的Context是通过static属性声明Context对象属性，通过getChildContext返回Context对象等方式来使用Context的；")])])}),[],!1,null,null,null);e.default=a.exports}}]);